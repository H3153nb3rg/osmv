android.support.v4.app.BackStackRecord -> android.support.v4.app.a:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add$2fdc650e(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace$2fdc650e(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    android.support.v4.app.FragmentTransaction setCustomAnimations$228f0801() -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> c
    int commitAllowingStateLoss() -> d
    int commitInternal(boolean) -> b
    void run() -> run
    void popFromBackStack(boolean) -> a
    boolean isEmpty() -> e
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.b:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.c:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.d:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mDestroyed -> g
    boolean mRemoved -> h
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> a
    void dismiss() -> a
    void dismissInternal(boolean) -> c
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> b
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> c
    void onDestroyView() -> d
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> i
    android.view.View mAnimatingAway -> j
    int mStateAfterAnimating -> k
    android.os.Bundle mSavedFragmentState -> l
    android.util.SparseArray mSavedViewState -> m
    int mIndex -> n
    java.lang.String mWho -> o
    android.os.Bundle mArguments -> p
    android.support.v4.app.Fragment mTarget -> q
    int mTargetIndex -> r
    int mTargetRequestCode -> s
    boolean mAdded -> t
    boolean mRemoving -> u
    boolean mResumed -> v
    boolean mFromLayout -> w
    boolean mInLayout -> x
    boolean mRestored -> y
    int mBackStackNesting -> z
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> A
    android.support.v4.app.FragmentActivity mActivity -> B
    int mFragmentId -> C
    int mContainerId -> D
    java.lang.String mTag -> E
    boolean mHidden -> F
    boolean mDetached -> G
    boolean mRetainInstance -> H
    boolean mRetaining -> I
    boolean mHasMenu -> J
    boolean mMenuVisible -> K
    boolean mCalled -> L
    int mNextAnim -> M
    android.view.ViewGroup mContainer -> N
    android.view.View mView -> O
    android.view.View mInnerView -> P
    boolean mDeferStart -> Q
    boolean mUserVisibleHint -> R
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> S
    boolean mLoadersStarted -> T
    boolean mCheckedForLoaderManager -> U
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> e
    void setIndex(int) -> a
    boolean isInBackStack() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> f
    android.os.Bundle getArguments() -> g
    android.support.v4.app.FragmentActivity getActivity() -> h
    android.content.res.Resources getResources() -> i
    java.lang.String getString(int) -> b
    android.support.v4.app.FragmentManager getFragmentManager() -> j
    boolean isAdded() -> a
    void onHiddenChanged$1385ff() -> k
    void setHasOptionsMenu$1385ff() -> l
    void setMenuVisibility(boolean) -> a
    void setUserVisibleHint(boolean) -> b
    void startActivity(android.content.Intent) -> a
    void startActivityForResult$7a9ca511(android.content.Intent) -> b
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate$423a76cd() -> m
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation$24236ca7() -> n
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> o
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> b
    void onResume() -> p
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> q
    void onStop() -> c
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> d
    void onDestroy() -> r
    void initState() -> s
    void onDetach() -> t
    void onCreateOptionsMenu$761f6f96(android.view.Menu) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> b
    void onDestroyOptionsMenu() -> u
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed$1eec55bd() -> v
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected$1b88ab4c() -> w
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
    void performStart() -> x
    void performStop() -> y
    void performReallyStop() -> z
    void performDestroyView() -> A
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.app.HCSparseArray mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    void onAttachFragment$65850823() -> b
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> c
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragmentIndex(int) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager$3d2266e4(int) -> b
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.g:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.h:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.i:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.app.HCSparseArray loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.j:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack$255f295(int) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.k:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> s
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void popBackStack$255f295(int) -> a
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState$2563266(int) -> e
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> s
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> c
    boolean execPendingActions() -> d
    void reportBackStackChanged() -> u
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState$68507953$44bd8ea3(int,int) -> a
    java.util.ArrayList retainNonConfig() -> e
    void saveFragmentViewState(android.support.v4.app.Fragment) -> c
    android.os.Parcelable saveAllState() -> f
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> g
    void dispatchCreate() -> h
    void dispatchActivityCreated() -> i
    void dispatchStart() -> j
    void dispatchResume() -> k
    void dispatchPause() -> l
    void dispatchStop() -> m
    void dispatchReallyStop() -> n
    void dispatchDestroy() -> o
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> p
    boolean dispatchCreateOptionsMenu$761f6f92(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected$1b88ab4c() -> q
    void dispatchOptionsMenuClosed$1eec55bd() -> r
    int reverseTransit(int) -> d
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.l:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.m:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.n:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.o:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.p:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem$30510aeb(java.lang.Object) -> a
    void setPrimaryItem$30510aeb(java.lang.Object) -> b
    void finishUpdate$52bc874c() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    java.lang.String makeFragmentName(int,int) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.q:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.r:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add$2fdc650e(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace$2fdc650e(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    boolean isEmpty() -> e
    android.support.v4.app.FragmentTransaction setCustomAnimations$228f0801() -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> b
    int commit() -> c
    int commitAllowingStateLoss() -> d
android.support.v4.app.HCSparseArray -> android.support.v4.app.s:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    void remove(int) -> b
    void removeAt(int) -> c
    void gc() -> c
    int size() -> a
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    void clear() -> b
    int binarySearch$76412d8d(int[],int,int) -> a
android.support.v4.app.ListFragment -> android.support.v4.app.t:
    android.os.Handler mHandler -> V
    java.lang.Runnable mRequestFocus -> W
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> X
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onDestroyView() -> d
    void onListItemClick$42a3bb55(android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    android.widget.ListView getListView() -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> B
android.support.v4.app.ListFragment$1 -> android.support.v4.app.u:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.v:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.app.HCSparseArray mLoaders -> b
    android.support.v4.app.HCSparseArray mInactiveLoaders -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void stop() -> a
    void destroy() -> b
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void stopLoading() -> b
    void reset() -> c
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> c
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.e:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.f:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.i:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem$30510aeb(java.lang.Object) -> a
    void setPrimaryItem$30510aeb(java.lang.Object) -> b
    void finishUpdate$52bc874c() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> e
    float mLastKnownPositionOffset -> f
    int mScaledTextSpacing -> g
    boolean mUpdatingText -> h
    boolean mUpdatingPositions -> i
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> j
    int[] ATTRS -> k
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.j:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.k:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.l:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.o:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.p:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.q:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.s:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.t:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.u:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.v:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.w:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.PagerAdapter mAdapter -> e
    int mCurItem -> f
    int mRestoredCurItem -> g
    android.os.Parcelable mRestoredAdapterState -> h
    java.lang.ClassLoader mRestoredClassLoader -> i
    android.widget.Scroller mScroller -> j
    android.support.v4.view.ViewPager$PagerObserver mObserver -> k
    int mPageMargin -> l
    android.graphics.drawable.Drawable mMarginDrawable -> m
    int mTopPageBounds -> n
    int mBottomPageBounds -> o
    int mChildWidthMeasureSpec -> p
    int mChildHeightMeasureSpec -> q
    boolean mInLayout -> r
    boolean mScrollingCacheEnabled -> s
    boolean mPopulatePending -> t
    boolean mScrolling -> u
    int mOffscreenPageLimit -> v
    boolean mIsBeingDragged -> w
    boolean mIsUnableToDrag -> x
    int mTouchSlop -> y
    float mInitialMotionX -> z
    float mLastMotionX -> A
    float mLastMotionY -> B
    int mActivePointerId -> C
    android.view.VelocityTracker mVelocityTracker -> D
    int mMinimumVelocity -> E
    int mMaximumVelocity -> F
    int mFlingDistance -> G
    boolean mFakeDragging -> H
    long mFakeDragBeginTime -> I
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> J
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> K
    boolean mFirstLayout -> L
    boolean mCalledSuper -> M
    int mDecorChildCount -> N
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> O
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> P
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Q
    int mScrollState -> R
    void setScrollState(int) -> b
    void setAdapter(android.support.v4.view.PagerAdapter) -> a
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    void setCurrentItem(int) -> a
    void setCurrentItem$2563266(int) -> c
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> b
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void addNewItem(int,int) -> a
    void dataSetChanged() -> c
    void populate() -> h
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> d
    void completeScroll() -> i
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> d
    void endFakeDrag() -> e
    void fakeDragBy(float) -> a
    boolean isFakeDragging() -> f
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> a
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> e
    boolean pageLeft() -> k
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$100() -> g
android.support.v4.view.ViewPager$1 -> android.support.v4.view.x:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.y:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.z:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aa:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ab:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ac:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ad:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ae:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.actionbarsherlock.ActionBarSherlock -> com.actionbarsherlock.a:
    java.lang.Class[] CONSTRUCTOR_ARGS -> d
    java.util.HashMap IMPLEMENTATIONS -> e
    android.app.Activity mActivity -> a
    boolean mIsDelegate -> b
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> c
    void registerImplementation(java.lang.Class) -> a
    com.actionbarsherlock.ActionBarSherlock wrap$6f7a35aa(android.app.Activity) -> a
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchPostResume() -> b
    void dispatchPause() -> c
    void dispatchStop() -> d
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchOpenOptionsMenu() -> f
    boolean dispatchCloseOptionsMenu() -> g
    void dispatchPostCreate$79e5e33f() -> h
    void dispatchTitleChanged$609be50a(java.lang.CharSequence) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchMenuOpened$2fef5512(int) -> a
    void dispatchPanelClosed$2fef5516(int) -> b
    boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void setContentView(int) -> c
    void setContentView(android.view.View) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> i
    android.content.Context getThemedContext() -> j
com.actionbarsherlock.ActionBarSherlock$Implementation -> com.actionbarsherlock.b:
    int api() -> a
    int dpi() -> b
com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener -> com.actionbarsherlock.c:
    boolean onCreateOptionsMenu$7c622cda() -> a
com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener -> com.actionbarsherlock.d:
    boolean onCreatePanelMenu$753e82bf(com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener -> com.actionbarsherlock.e:
    boolean onMenuItemSelected$7350e552(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener -> com.actionbarsherlock.f:
    boolean onOptionsItemSelected$58cc55c7() -> a
com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener -> com.actionbarsherlock.g:
    boolean onPrepareOptionsMenu$7c622cda() -> a
com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener -> com.actionbarsherlock.h:
    boolean onPreparePanel$5631e5b5(com.actionbarsherlock.view.Menu) -> b
com.actionbarsherlock.R -> com.actionbarsherlock.i:
com.actionbarsherlock.R$attr -> com.actionbarsherlock.j:
    int actionBarStyle -> a
    int actionBarTabTextStyle -> b
    int actionBarWidgetTheme -> c
    int actionDropDownStyle -> d
    int actionModeStyle -> e
    int actionOverflowButtonStyle -> f
    int dropDownListViewStyle -> g
    int popupMenuStyle -> h
com.actionbarsherlock.R$bool -> com.actionbarsherlock.k:
    int abs__action_bar_embed_tabs -> a
    int abs__action_bar_expanded_action_views_exclusive -> b
    int abs__config_allowActionMenuItemTextWithIcon -> c
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> d
    int abs__split_action_bar_is_narrow -> e
com.actionbarsherlock.R$dimen -> com.actionbarsherlock.l:
    int abs__config_prefDialogWidth -> a
com.actionbarsherlock.R$id -> com.actionbarsherlock.m:
    int abs__action_bar -> a
    int abs__action_bar_container -> b
    int abs__action_bar_subtitle -> c
    int abs__action_bar_title -> d
    int abs__action_context_bar -> e
    int abs__action_menu_presenter -> f
    int abs__content -> g
    int abs__home -> h
    int abs__imageButton -> i
    int abs__progress_circular -> j
    int abs__progress_horizontal -> k
    int abs__shortcut -> l
    int abs__split_action_bar -> m
    int abs__textButton -> n
    int abs__title -> o
    int abs__up -> p
com.actionbarsherlock.R$integer -> com.actionbarsherlock.n:
    int abs__max_action_buttons -> a
com.actionbarsherlock.R$layout -> com.actionbarsherlock.o:
    int abs__action_bar_home -> a
    int abs__action_bar_tab -> b
    int abs__action_bar_title_item -> c
    int abs__action_menu_item_layout -> d
    int abs__action_menu_layout -> e
    int abs__dialog_title_holo -> f
    int abs__list_menu_item_checkbox -> g
    int abs__list_menu_item_icon -> h
    int abs__list_menu_item_radio -> i
    int abs__popup_menu_item_layout -> j
    int abs__screen_action_bar -> k
    int abs__screen_action_bar_overlay -> l
    int abs__screen_simple -> m
    int abs__screen_simple_overlay_action_mode -> n
com.actionbarsherlock.R$string -> com.actionbarsherlock.p:
    int abs__action_bar_home_description -> a
    int abs__action_bar_up_description -> b
com.actionbarsherlock.R$styleable -> com.actionbarsherlock.q:
    int[] CirclePageIndicator -> a
    int[] SherlockActionBar -> b
    int[] SherlockActionMenuItemView -> c
    int[] SherlockActionMode -> d
    int[] SherlockMenuGroup -> e
    int[] SherlockMenuItem -> f
    int[] SherlockMenuView -> g
    int[] SherlockSpinner -> h
    int[] SherlockTheme -> i
    int[] TitlePageIndicator -> j
    int[] TouchListView -> k
    int[] ViewPagerIndicator -> l
com.actionbarsherlock.app.ActionBar -> com.actionbarsherlock.app.ActionBar:
    void setDisplayUseLogoEnabled$1385ff() -> a
    void setNavigationMode$13462e() -> b
    void hide() -> c
    android.content.Context getThemedContext() -> d
com.actionbarsherlock.app.ActionBar$LayoutParams -> com.actionbarsherlock.app.ActionBar$LayoutParams:
    int gravity -> a
com.actionbarsherlock.app.ActionBar$OnNavigationListener -> com.actionbarsherlock.app.a:
    boolean onNavigationItemSelected$255f65a() -> a
com.actionbarsherlock.app.ActionBar$Tab -> com.actionbarsherlock.app.b:
    int getPosition() -> a
    android.graphics.drawable.Drawable getIcon() -> b
    java.lang.CharSequence getText() -> c
    android.view.View getCustomView() -> d
    void select() -> e
    java.lang.CharSequence getContentDescription() -> f
com.actionbarsherlock.app.ActionBar$TabListener -> com.actionbarsherlock.app.c:
com.actionbarsherlock.app.SherlockActivity -> com.actionbarsherlock.app.SherlockActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
com.actionbarsherlock.app.SherlockExpandableListActivity -> com.actionbarsherlock.app.SherlockExpandableListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
com.actionbarsherlock.app.SherlockFragment -> com.actionbarsherlock.app.d:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> a
    void onAttach(android.app.Activity) -> a
    void onCreateOptionsMenu$761f6f96(android.view.Menu) -> a
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> b
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.app.SherlockFragmentActivity -> com.actionbarsherlock.app.SherlockFragmentActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> m
    boolean mIgnoreNativeCreate -> n
    boolean mIgnoreNativePrepare -> o
    boolean mIgnoreNativeSelected -> p
    java.lang.Boolean mOverrideNativeCreate -> q
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> f
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> e
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu$753e82bf(com.actionbarsherlock.view.Menu) -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> c
    boolean onPreparePanel$5631e5b5(com.actionbarsherlock.view.Menu) -> b
    boolean onMenuItemSelected$7350e552(com.actionbarsherlock.view.MenuItem) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
com.actionbarsherlock.app.SherlockListActivity -> com.actionbarsherlock.app.SherlockListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
com.actionbarsherlock.app.SherlockListFragment -> com.actionbarsherlock.app.e:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> V
    void onAttach(android.app.Activity) -> a
    void onCreateOptionsMenu$761f6f96(android.view.Menu) -> a
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> b
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.app.SherlockPreferenceActivity -> com.actionbarsherlock.app.SherlockPreferenceActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
com.actionbarsherlock.internal.ActionBarSherlockCompat -> com.actionbarsherlock.internal.a:
    boolean mReserveOverflow -> e
    boolean mReserveOverflowSet -> f
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> g
    java.util.HashMap mNativeItemMap -> d
    android.view.ViewGroup mDecor -> h
    android.view.ViewGroup mContentParent -> i
    boolean mIsTitleReady -> j
    boolean mClosingActionMenu -> k
    boolean mMenuIsPrepared -> l
    boolean mMenuRefreshContent -> m
    android.os.Bundle mMenuFrozenActionViewState -> n
    com.actionbarsherlock.internal.app.ActionBarImpl aActionBar -> o
    com.actionbarsherlock.internal.widget.ActionBarView wActionBar -> p
    int mFeatures -> q
    int mUiOptions -> r
    com.actionbarsherlock.internal.widget.IcsProgressBar mCircularProgressBar -> s
    com.actionbarsherlock.view.ActionMode mActionMode -> t
    com.actionbarsherlock.internal.widget.ActionBarContextView mActionModeView -> u
    android.widget.TextView mTitleView -> v
    java.lang.CharSequence mTitle -> w
    boolean mIsFloating -> x
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void initActionBar() -> l
    android.content.Context getThemedContext() -> j
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchPostResume() -> b
    void dispatchPause() -> c
    void dispatchStop() -> d
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchOpenOptionsMenu() -> f
    boolean dispatchCloseOptionsMenu() -> g
    void dispatchPostCreate$79e5e33f() -> h
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchMenuOpened$2fef5512(int) -> a
    void dispatchPanelClosed$2fef5516(int) -> b
    void dispatchTitleChanged$609be50a(java.lang.CharSequence) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    boolean preparePanel() -> m
    boolean onMenuItemSelected$5f8dddaf(com.actionbarsherlock.view.MenuItem) -> b
    void onMenuModeChange$26b6228d() -> k
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu$4ff11e19(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onMenuItemSelected$7350e552(com.actionbarsherlock.view.MenuItem) -> c
    boolean hasFeature(int) -> d
    boolean requestFeature(int) -> e
    void setContentView(int) -> c
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void installDecor() -> n
    boolean isReservingOverflow() -> o
    int loadUiOptionsFromManifest(android.app.Activity) -> b
    java.lang.String cleanActivityName(java.lang.String,java.lang.String) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> a
com.actionbarsherlock.internal.ActionBarSherlockCompat$1 -> com.actionbarsherlock.internal.b:
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.ActionBarSherlockNative -> com.actionbarsherlock.internal.c:
    com.actionbarsherlock.internal.app.ActionBarWrapper mActionBar -> d
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> e
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void initActionBar() -> k
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    void setContentView(int) -> c
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    android.content.Context getThemedContext() -> j
com.actionbarsherlock.internal.ResourcesCompat -> com.actionbarsherlock.internal.d:
    boolean getResources_getBoolean(android.content.Context,int) -> a
    int getResources_getInteger(android.content.Context,int) -> b
com.actionbarsherlock.internal.app.ActionBarImpl -> com.actionbarsherlock.internal.a.a:
    android.content.Context mContext -> f
    android.content.Context mThemedContext -> g
    android.app.Activity mActivity -> h
    com.actionbarsherlock.internal.widget.ActionBarContainer mContainerView -> i
    com.actionbarsherlock.internal.widget.ActionBarView mActionView -> j
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> k
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> l
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout mContentView -> m
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> n
    java.util.ArrayList mTabs -> o
    com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl mSelectedTab -> p
    int mSavedTabPosition -> q
    com.actionbarsherlock.view.ActionMode mDeferredDestroyActionMode -> a
    com.actionbarsherlock.view.ActionMode$Callback mDeferredModeDestroyCallback -> b
    boolean mLastMenuVisibility -> r
    java.util.ArrayList mMenuVisibilityListeners -> s
    int mContextDisplayMode -> t
    boolean mHasEmbeddedTabs -> u
    android.os.Handler mHandler -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentShowAnim -> v
    boolean mShowHideAnimationEnabled -> w
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mHideListener -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mShowListener -> e
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> c
    void setShowHideAnimationEnabled(boolean) -> a
    void dispatchMenuVisibilityChanged(boolean) -> b
    void setDisplayUseLogoEnabled$1385ff() -> a
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> a
    void hide() -> c
    android.content.Context getThemedContext() -> d
    void setNavigationMode$13462e() -> b
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl) -> a
    com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl) -> b
    com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl) -> c
    int access$3(com.actionbarsherlock.internal.app.ActionBarImpl) -> d
    void access$4$5d9160e6(com.actionbarsherlock.internal.app.ActionBarImpl) -> e
com.actionbarsherlock.internal.app.ActionBarImpl$1 -> com.actionbarsherlock.internal.a.b:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.app.ActionBarImpl$2 -> com.actionbarsherlock.internal.a.c:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl -> com.actionbarsherlock.internal.a.d:
    com.actionbarsherlock.app.ActionBar$TabListener mCallback -> b
    android.graphics.drawable.Drawable mIcon -> c
    java.lang.CharSequence mText -> d
    java.lang.CharSequence mContentDesc -> e
    int mPosition -> f
    android.view.View mCustomView -> g
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    com.actionbarsherlock.app.ActionBar$TabListener getCallback() -> g
    android.view.View getCustomView() -> d
    android.graphics.drawable.Drawable getIcon() -> b
    int getPosition() -> a
    java.lang.CharSequence getText() -> c
    void select() -> e
    java.lang.CharSequence getContentDescription() -> f
com.actionbarsherlock.internal.app.ActionBarWrapper -> com.actionbarsherlock.internal.a.e:
    android.app.Activity mActivity -> a
    android.app.ActionBar mActionBar -> b
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mNavigationListener -> c
    java.util.Set mMenuVisibilityListeners -> d
    android.content.Context getThemedContext() -> d
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    void setDisplayUseLogoEnabled$1385ff() -> a
    void setNavigationMode$13462e() -> b
    void hide() -> c
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
com.actionbarsherlock.internal.nineoldandroids.animation.Animator -> com.actionbarsherlock.internal.nineoldandroids.a.a:
    java.util.ArrayList mListeners -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> a
    void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> d
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener -> com.actionbarsherlock.internal.nineoldandroids.a.b:
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel$56c33a5() -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter -> com.actionbarsherlock.internal.nineoldandroids.a.c:
    void onAnimationCancel$56c33a5() -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet -> com.actionbarsherlock.internal.nineoldandroids.a.d:
    java.util.ArrayList mPlayingSet -> c
    java.util.HashMap mNodeMap -> d
    java.util.ArrayList mNodes -> e
    java.util.ArrayList mSortedNodes -> f
    boolean mNeedsSort -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> h
    boolean mTerminated -> b
    boolean mStarted -> i
    long mStartDelay -> j
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator mDelayAnim -> k
    long mDuration -> l
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void cancel() -> b
    void end() -> c
    void start() -> a
    void sortNodes() -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> d
    java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> a
    java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> b
    java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> c
    void access$5$5b14e955(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> d
    java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> e
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1 -> com.actionbarsherlock.internal.nineoldandroids.a.e:
    boolean canceled -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> b
    java.util.ArrayList val$nodesToStart -> c
    void onAnimationCancel$56c33a5() -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.actionbarsherlock.internal.nineoldandroids.a.f:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    void onAnimationCancel$56c33a5() -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder -> com.actionbarsherlock.internal.nineoldandroids.a.g:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder with(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency -> com.actionbarsherlock.internal.nineoldandroids.a.h:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node node -> a
    int rule -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.actionbarsherlock.internal.nineoldandroids.a.i:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mNode -> b
    int mRule -> c
    void onAnimationCancel$56c33a5() -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node -> com.actionbarsherlock.internal.nineoldandroids.a.j:
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator animation -> a
    java.util.ArrayList dependencies -> b
    java.util.ArrayList tmpDependencies -> c
    java.util.ArrayList nodeDependencies -> d
    java.util.ArrayList nodeDependents -> e
    boolean done -> f
    void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone() -> a
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.k:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.a.l:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    float getFloatValue(float) -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> a
com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.m:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe -> com.actionbarsherlock.internal.nineoldandroids.a.n:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float) -> a
    java.lang.Object getValue() -> a
    void setValue(java.lang.Object) -> a
    float getFraction() -> b
    android.view.animation.Interpolator getInterpolator() -> c
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> d
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.actionbarsherlock.internal.nineoldandroids.a.o:
    float mValue -> d
    float getFloatValue() -> e
    java.lang.Object getValue() -> a
    void setValue(java.lang.Object) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> d
com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.a.p:
    int mNumKeyframes -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> a
    java.lang.Object getValue(float) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator -> com.actionbarsherlock.internal.nineoldandroids.a.q:
    java.lang.Object mTarget -> h
    java.lang.String mPropertyName -> i
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    void start() -> a
    void initAnimation() -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long) -> a
    void animateValue(float) -> a
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.a.r:
    java.lang.String mPropertyName -> a
    java.lang.reflect.Method mSetter -> b
    java.lang.reflect.Method mGetter -> g
    java.lang.Class mValueType -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet mKeyframeSet -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> i
    java.lang.Class[] FLOAT_VARIANTS -> j
    java.lang.Class[] INTEGER_VARIANTS -> k
    java.lang.Class[] DOUBLE_VARIANTS -> l
    java.util.HashMap sSetterPropertyMap -> m
    java.util.HashMap sGetterPropertyMap -> n
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> e
    java.lang.Object[] mTmpValueArray -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> o
    java.lang.Object mAnimatedValue -> p
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupSetterAndGetter(java.lang.Object) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    void setAnimatedValue(java.lang.Object) -> b
    void init() -> b
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> a
    java.lang.String getPropertyName() -> c
    java.lang.Object getAnimatedValue() -> d
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.a.s:
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> g
    float mFloatAnimatedValue -> h
    void setFloatValues(float[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> a
com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.t:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator -> com.actionbarsherlock.internal.nineoldandroids.a.u:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    boolean mPlayingBackwards -> o
    int mCurrentIteration -> p
    float mCurrentFraction -> q
    boolean mStartedDelay -> r
    long mDelayStartTime -> s
    int mPlayingState -> d
    boolean mRunning -> t
    boolean mStarted -> u
    boolean mInitialized -> e
    long mDuration -> v
    long mStartDelay -> w
    long sFrameDelay -> x
    int mRepeatCount -> y
    int mRepeatMode -> z
    android.view.animation.Interpolator mInterpolator -> A
    java.util.ArrayList mUpdateListeners -> B
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> b
    void setFloatValues(float[]) -> a
    void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    void initAnimation() -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    void setCurrentPlayTime(long) -> a
    void setStartDelay(long) -> c
    void setInterpolator(android.view.animation.Interpolator) -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> g
    void endAnimation() -> n
    void startAnimation() -> o
    boolean animationFrame(long) -> d
    void animateValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> f
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> d
    java.lang.ThreadLocal access$2() -> h
    java.lang.ThreadLocal access$3() -> i
    java.lang.ThreadLocal access$4() -> j
    long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> a
    void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$7() -> k
    java.lang.ThreadLocal access$8() -> l
    boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long) -> a
    void access$10$2c3b1aa8(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> c
    void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> d
    long access$12() -> m
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1 -> com.actionbarsherlock.internal.nineoldandroids.a.v:
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2 -> com.actionbarsherlock.internal.nineoldandroids.a.w:
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3 -> com.actionbarsherlock.internal.nineoldandroids.a.x:
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4 -> com.actionbarsherlock.internal.nineoldandroids.a.y:
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5 -> com.actionbarsherlock.internal.nineoldandroids.a.z:
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.actionbarsherlock.internal.nineoldandroids.a.aa:
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.actionbarsherlock.internal.nineoldandroids.a.ab:
com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup -> com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy -> com.actionbarsherlock.internal.nineoldandroids.view.a.a:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    float mAlpha -> d
    float mScaleX -> e
    float mScaleY -> f
    float mTranslationX -> g
    float mTranslationY -> h
    android.graphics.RectF mBefore -> i
    android.graphics.RectF mAfter -> j
    android.graphics.Matrix mTempMatrix -> k
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    void setScaleY$133aeb() -> b
    float getTranslationX() -> c
    void setTranslationX(float) -> b
    float getTranslationY() -> d
    void setTranslationY(float) -> c
    void prepareForUpdate() -> e
    void invalidateAfterUpdate() -> f
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
com.actionbarsherlock.internal.view.ActionProviderWrapper -> com.actionbarsherlock.internal.view.a:
    com.actionbarsherlock.view.ActionProvider mProvider -> a
    com.actionbarsherlock.view.ActionProvider unwrap() -> a
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.actionbarsherlock.internal.view.View_HasStateListenerSupport -> com.actionbarsherlock.internal.view.b:
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener -> com.actionbarsherlock.internal.view.c:
    void onViewDetachedFromWindow(android.view.View) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuItem -> com.actionbarsherlock.internal.view.menu.a:
    int mId -> a
    int mGroup -> b
    int mOrdering -> c
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mTitleCondensed -> e
    char mShortcutNumericChar -> f
    char mShortcutAlphabeticChar -> g
    android.graphics.drawable.Drawable mIconDrawable -> h
    android.content.Context mContext -> i
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> j
    int mFlags -> k
    int getGroupId() -> a
    android.graphics.drawable.Drawable getIcon() -> b
    int getItemId() -> c
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    java.lang.CharSequence getTitleCondensed() -> e
    boolean hasSubMenu() -> f
    boolean isVisible() -> g
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> h
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> i
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    boolean expandActionView() -> j
    boolean isActionViewExpanded() -> k
com.actionbarsherlock.internal.view.menu.ActionMenuItemView -> com.actionbarsherlock.internal.view.menu.ActionMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> c
    android.widget.ImageButton mImageButton -> d
    com.actionbarsherlock.internal.widget.CapitalizingButton mTextButton -> e
    boolean mAllowTextWithIcon -> f
    boolean mExpandedFormat -> g
    int mMinWidth -> h
    java.util.Set mListeners -> i
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> a
    void initialize$679020ce(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
    void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker) -> a
    boolean prefersCondensedTitle() -> b
    void updateTextButtonVisibility() -> f
    boolean hasText() -> c
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean needsDividerBefore() -> d
    boolean needsDividerAfter() -> e
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> i
    boolean mReserveOverflow -> j
    boolean mReserveOverflowSet -> k
    int mWidthLimit -> l
    int mActionItemWidthLimit -> m
    int mMaxItems -> n
    boolean mMaxItemsSet -> o
    boolean mStrictWidthLimit -> p
    boolean mWidthLimitSet -> q
    boolean mExpandedActionViewsExclusive -> r
    int mMinCellSize -> s
    android.util.SparseBooleanArray mActionButtonGroups -> t
    android.view.View mScrapActionButtonView -> u
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> v
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> w
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> x
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> a
    int mOpenSubMenuId -> b
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean reserveOverflow(android.content.Context) -> a
    void onConfigurationChanged$308b225b() -> a
    void setWidthLimit$2563266(int) -> a
    void setItemLimit$13462e() -> b
    void setExpandedActionViewsExclusive(boolean) -> a
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem$2525e600(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> b
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    boolean showOverflowMenu() -> c
    boolean hideOverflowMenu() -> d
    boolean dismissPopupMenus() -> e
    boolean hideSubMenus() -> f
    boolean isOverflowMenuShowing() -> g
    boolean isOverflowReserved() -> h
    boolean flagActionItems() -> i
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    void access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> a
    android.view.View access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> a
    void access$2$581ac05c(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> b
    void access$3$2bf38d4(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> c
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> com.actionbarsherlock.internal.view.menu.b:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> com.actionbarsherlock.internal.view.menu.c:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> com.actionbarsherlock.internal.view.menu.d:
    java.util.Set mListeners -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> d
    boolean needsDividerAfter() -> e
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup -> com.actionbarsherlock.internal.view.menu.e:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> com.actionbarsherlock.internal.view.menu.f:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu$4ff11e19(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1 -> com.actionbarsherlock.internal.view.menu.g:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.view.menu.ActionMenuView -> com.actionbarsherlock.internal.view.menu.ActionMenuView:
    boolean IS_FROYO -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> b
    boolean mReserveOverflow -> c
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mPresenter -> d
    boolean mFormatItems -> e
    int mFormatItemsWidth -> f
    int mMinCellSize -> g
    int mGeneratedItemPadding -> h
    boolean mFirst -> i
    void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowReserved(boolean) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> a
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean hasDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView -> com.actionbarsherlock.internal.view.menu.h:
    boolean needsDividerBefore() -> d
    boolean needsDividerAfter() -> e
com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams -> com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
com.actionbarsherlock.internal.view.menu.BaseMenuPresenter -> com.actionbarsherlock.internal.view.menu.i:
    boolean IS_HONEYCOMB -> a
    android.content.Context mSystemContext -> c
    android.content.Context mContext -> d
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> e
    android.view.LayoutInflater mSystemInflater -> f
    android.view.LayoutInflater mInflater -> g
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> b
    int mMenuLayoutRes -> i
    int mItemLayoutRes -> j
    com.actionbarsherlock.internal.view.menu.MenuView mMenuView -> h
    int mId -> k
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> b
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem$2525e600(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> i
    boolean expandItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean collapseItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
    void setId(int) -> b
com.actionbarsherlock.internal.view.menu.ListMenuItemView -> com.actionbarsherlock.internal.view.menu.ListMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> b
    android.widget.ImageView mIconView -> c
    android.widget.RadioButton mRadioButton -> d
    android.widget.TextView mTitleView -> e
    android.widget.CheckBox mCheckBox -> f
    android.widget.TextView mShortcutView -> g
    android.graphics.drawable.Drawable mBackground -> h
    int mTextAppearance -> i
    android.content.Context mTextAppearanceContext -> j
    boolean mPreserveIconSpacing -> k
    android.view.LayoutInflater mInflater -> l
    boolean mForceShowIcon -> m
    android.content.Context mContext -> a
    void onFinishInflate() -> onFinishInflate
    void initialize$679020ce(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void setForceShowIcon$1385ff() -> c
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> a
    void onMeasure(int,int) -> onMeasure
    boolean prefersCondensedTitle() -> b
    android.view.LayoutInflater getInflater() -> d
com.actionbarsherlock.internal.view.menu.MenuBuilder -> com.actionbarsherlock.internal.view.menu.j:
    int[] sCategoryToOrder -> c
    android.content.Context mContext -> d
    android.content.res.Resources mResources -> e
    boolean mQwertyMode -> f
    boolean mShortcutsVisible -> g
    com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback -> h
    java.util.ArrayList mItems -> i
    java.util.ArrayList mVisibleItems -> j
    boolean mIsVisibleItemsStale -> k
    java.util.ArrayList mActionItems -> l
    java.util.ArrayList mNonActionItems -> m
    boolean mIsActionItemsStale -> n
    int mDefaultShowAsAction -> o
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> p
    java.lang.CharSequence mHeaderTitle -> a
    android.view.View mHeaderView -> b
    boolean mPreventDispatchingItemsChanged -> q
    boolean mItemsChangedWhileDispatchPrevented -> r
    boolean mOptionalIconsVisible -> s
    boolean mIsClosing -> t
    java.util.ArrayList mTempShortcutItemList -> u
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> v
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem -> w
    void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> a
    void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> b
    void saveActionViewStates(android.os.Bundle) -> a
    void restoreActionViewStates(android.os.Bundle) -> b
    java.lang.String getActionViewStatesKey() -> a
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> a
    com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> c
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void clear() -> b
    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem) -> a
    void setGroupCheckable$4870cd2e(int) -> a
    boolean hasVisibleItems() -> c
    com.actionbarsherlock.view.MenuItem findItem(int) -> b
    int size() -> d
    com.actionbarsherlock.view.MenuItem getItem(int) -> c
    void setQwertyMode(boolean) -> a
    boolean isQwertyMode() -> e
    boolean isShortcutsVisible() -> f
    android.content.res.Resources getResources() -> g
    android.content.Context getContext() -> h
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void changeMenuMode() -> i
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performItemAction$3f412a5c(com.actionbarsherlock.view.MenuItem) -> b
    void close(boolean) -> b
    void close() -> j
    void onItemsChanged(boolean) -> c
    void stopDispatchingItemsChanged() -> k
    void startDispatchingItemsChanged() -> l
    void onItemVisibleChanged$5e2decd5() -> m
    void onItemActionRequestChanged$5e2decd5() -> n
    java.util.ArrayList getVisibleItems() -> o
    void flagActionItems() -> p
    java.util.ArrayList getActionItems() -> q
    java.util.ArrayList getNonActionItems() -> r
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> s
    boolean getOptionalIconsVisible() -> t
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem() -> u
    boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap) -> a
com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback -> com.actionbarsherlock.internal.view.menu.k:
    boolean onMenuItemSelected$5f8dddaf(com.actionbarsherlock.view.MenuItem) -> b
    void onMenuModeChange$26b6228d() -> k
com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker -> com.actionbarsherlock.internal.view.menu.l:
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
com.actionbarsherlock.internal.view.menu.MenuItemImpl -> com.actionbarsherlock.internal.view.menu.m:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> l
    com.actionbarsherlock.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    com.actionbarsherlock.view.ActionProvider mActionProvider -> s
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> l
    boolean isEnabled() -> m
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    int getGroupId() -> a
    int getItemId() -> c
    int getOrder() -> n
    int getOrdering() -> o
    android.content.Intent getIntent() -> p
    char getAlphabeticShortcut() -> q
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    char getNumericShortcut() -> r
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    char getShortcut() -> s
    java.lang.String getShortcutLabel() -> t
    boolean shouldShowShortcut() -> u
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    boolean hasSubMenu() -> f
    void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> v
    java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    java.lang.CharSequence getTitleCondensed() -> e
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    boolean isCheckable() -> w
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    void setExclusiveCheckable$1385ff() -> x
    boolean isExclusiveCheckable() -> y
    boolean isChecked() -> z
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    void setCheckedInt(boolean) -> e
    boolean isVisible() -> g
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    boolean shouldShowIcon() -> A
    boolean isActionButton() -> B
    boolean requestsActionButton() -> C
    boolean requiresActionButton() -> D
    void setIsActionButton(boolean) -> f
    boolean showsTextAsAction() -> E
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> h
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> i
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    boolean expandActionView() -> j
    boolean collapseActionView() -> F
    boolean hasCollapsibleActionView() -> G
    void setActionViewExpanded(boolean) -> g
    boolean isActionViewExpanded() -> k
com.actionbarsherlock.internal.view.menu.MenuItemMule -> com.actionbarsherlock.internal.view.menu.n:
    com.actionbarsherlock.view.MenuItem mItem -> a
    com.actionbarsherlock.view.MenuItem unwrap() -> a
    boolean collapseActionView() -> collapseActionView
    boolean expandActionView() -> expandActionView
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.view.View getActionView() -> getActionView
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isActionViewExpanded() -> isActionViewExpanded
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
com.actionbarsherlock.internal.view.menu.MenuItemWrapper -> com.actionbarsherlock.internal.view.menu.o:
    android.view.MenuItem mNativeItem -> a
    com.actionbarsherlock.view.SubMenu mSubMenu -> b
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener -> c
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mActionExpandListener -> d
    int getItemId() -> c
    int getGroupId() -> a
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    java.lang.CharSequence getTitleCondensed() -> e
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    boolean isVisible() -> g
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    boolean hasSubMenu() -> f
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> h
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> i
    boolean expandActionView() -> j
    boolean isActionViewExpanded() -> k
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
com.actionbarsherlock.internal.view.menu.MenuMule -> com.actionbarsherlock.internal.view.menu.p:
    com.actionbarsherlock.view.Menu mMenu -> a
    com.actionbarsherlock.view.Menu unwrap() -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    void clear() -> clear
    void close() -> close
    android.view.MenuItem findItem(int) -> findItem
    android.view.MenuItem getItem(int) -> getItem
    boolean hasVisibleItems() -> hasVisibleItems
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeGroup(int) -> removeGroup
    void removeItem(int) -> removeItem
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setQwertyMode(boolean) -> setQwertyMode
    int size() -> size
com.actionbarsherlock.internal.view.menu.MenuPopupHelper -> com.actionbarsherlock.internal.view.menu.q:
    int ITEM_LAYOUT -> b
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mPopup -> e
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> f
    int mPopupMaxWidth -> g
    android.view.View mAnchorView -> h
    boolean mOverflowOnly -> i
    android.view.ViewTreeObserver mTreeObserver -> j
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> k
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> l
    boolean mForceShowIcon -> c
    android.view.ViewGroup mMeasureParent -> m
    void setAnchorView(android.view.View) -> b
    void show() -> a
    boolean tryShow() -> b
    void dismiss() -> c
    void onDismiss() -> onDismiss
    boolean isShowing() -> d
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void onGlobalLayout() -> onGlobalLayout
    void onViewDetachedFromWindow(android.view.View) -> a
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> i
    boolean expandItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean collapseItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
    boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> d
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver -> com.actionbarsherlock.internal.view.menu.r:
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    void onChanged() -> onChanged
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter -> com.actionbarsherlock.internal.view.menu.s:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    java.lang.Object getItem(int) -> getItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
com.actionbarsherlock.internal.view.menu.MenuPresenter -> com.actionbarsherlock.internal.view.menu.t:
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> i
    boolean expandItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean collapseItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback -> com.actionbarsherlock.internal.view.menu.u:
    void onCloseMenu$4ff11e19(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.menu.MenuView -> com.actionbarsherlock.internal.view.menu.v:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.menu.MenuView$ItemView -> com.actionbarsherlock.internal.view.menu.w:
    void initialize$679020ce(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> a
    boolean prefersCondensedTitle() -> b
com.actionbarsherlock.internal.view.menu.MenuWrapper -> com.actionbarsherlock.internal.view.menu.x:
    android.view.Menu mNativeMenu -> a
    java.util.WeakHashMap mNativeMap -> b
    android.view.Menu unwrap() -> a
    com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem) -> b
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void clear() -> b
    void setGroupCheckable$4870cd2e(int) -> a
    boolean hasVisibleItems() -> c
    com.actionbarsherlock.view.MenuItem findItem(int) -> b
    com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem) -> a
com.actionbarsherlock.internal.view.menu.SubMenuBuilder -> com.actionbarsherlock.internal.view.menu.y:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mParentMenu -> c
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItem -> d
    void setQwertyMode(boolean) -> a
    boolean isQwertyMode() -> e
    boolean isShortcutsVisible() -> f
    com.actionbarsherlock.view.Menu getParentMenu() -> v
    com.actionbarsherlock.view.MenuItem getItem() -> w
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> s
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> c
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    java.lang.String getActionViewStatesKey() -> a
com.actionbarsherlock.internal.view.menu.SubMenuWrapper -> com.actionbarsherlock.internal.view.menu.z:
    android.view.SubMenu mNativeSubMenu -> a
    com.actionbarsherlock.view.MenuItem mItem -> b
    com.actionbarsherlock.view.MenuItem getItem() -> w
com.actionbarsherlock.internal.widget.AbsActionBarView -> com.actionbarsherlock.internal.widget.AbsActionBarView:
    com.actionbarsherlock.internal.view.menu.ActionMenuView mMenuView -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> b
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> c
    boolean mSplitActionBar -> d
    boolean mSplitWhenNarrow -> e
    int mContentHeight -> f
    android.content.Context mContext -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> h
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> i
    android.view.animation.Interpolator sAlphaInterpolator -> j
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> a
    void setSplitWhenNarrow(boolean) -> b
    void setContentHeight(int) -> a
    void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer) -> a
    int getAnimatedVisibility() -> b
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> c
    boolean hideOverflowMenu() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowReserved() -> f
    void dismissPopupMenus() -> g
    int measureChildView$1bb94239(android.view.View,int,int) -> a
    int positionChild(android.view.View,int,int,int) -> a
    int positionChildInverse(android.view.View,int,int,int) -> b
com.actionbarsherlock.internal.widget.AbsActionBarView$1 -> com.actionbarsherlock.internal.widget.a:
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.b:
    boolean mCanceled -> c
    int mFinalVisibility -> a
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> b
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel$56c33a5() -> a
com.actionbarsherlock.internal.widget.ActionBarContainer -> com.actionbarsherlock.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    com.actionbarsherlock.internal.widget.ActionBarView mActionBarView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.graphics.drawable.Drawable mStackedBackground -> e
    android.graphics.drawable.Drawable mSplitBackground -> f
    boolean mIsSplit -> g
    boolean mIsStacked -> h
    void onFinishInflate() -> onFinishInflate
    void setTransitioning(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarContextView -> com.actionbarsherlock.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> j
    com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout mClose -> k
    android.view.View mCustomView -> l
    android.widget.LinearLayout mTitleLayout -> m
    int mTitleStyleRes -> n
    int mSubtitleStyleRes -> o
    android.graphics.drawable.Drawable mSplitBackground -> p
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentAnimation -> q
    boolean mAnimateInOnLayout -> r
    int mAnimationMode -> s
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> a
    void setContentHeight(int) -> a
    boolean showOverflowMenu() -> c
    boolean hideOverflowMenu() -> d
    boolean isOverflowMenuShowing() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel$56c33a5() -> a
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
com.actionbarsherlock.internal.widget.ActionBarView -> com.actionbarsherlock.internal.widget.ActionBarView:
    int mNavigationMode -> l
    int mDisplayOptions -> m
    java.lang.CharSequence mTitle -> n
    java.lang.CharSequence mSubtitle -> o
    android.graphics.drawable.Drawable mIcon -> p
    android.graphics.drawable.Drawable mLogo -> q
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mHomeLayout -> r
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> s
    android.widget.LinearLayout mTitleLayout -> t
    android.widget.TextView mTitleView -> u
    android.widget.TextView mSubtitleView -> v
    android.view.View mTitleUpView -> w
    com.actionbarsherlock.internal.widget.IcsSpinner mSpinner -> x
    com.actionbarsherlock.internal.widget.IcsLinearLayout mListNavLayout -> y
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> z
    android.view.View mCustomNavView -> A
    com.actionbarsherlock.internal.widget.IcsProgressBar mProgressView -> B
    com.actionbarsherlock.internal.widget.IcsProgressBar mIndeterminateProgressView -> C
    int mProgressBarPadding -> D
    int mItemPadding -> E
    int mTitleStyleRes -> F
    int mSubtitleStyleRes -> G
    int mProgressStyle -> H
    int mIndeterminateProgressStyle -> I
    boolean mUserTitle -> J
    boolean mIncludeTabs -> K
    boolean mIsCollapsable -> L
    boolean mIsCollapsed -> M
    com.actionbarsherlock.internal.view.menu.MenuBuilder mOptionsMenu -> N
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> O
    com.actionbarsherlock.internal.view.menu.ActionMenuItem mLogoNavItem -> P
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mCallback -> Q
    java.lang.Runnable mTabSelector -> R
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> S
    android.view.View mExpandedActionView -> j
    com.actionbarsherlock.view.Window$Callback mWindowCallback -> k
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mNavItemSelectedListener -> T
    android.view.View$OnClickListener mExpandedActionViewUpListener -> U
    android.view.View$OnClickListener mUpClickListener -> V
    int loadLogoFromManifest(android.app.Activity) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(com.actionbarsherlock.view.Window$Callback) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> a
    void initIndeterminateProgress() -> h
    void setSplitActionBar(boolean) -> a
    boolean isSplitActionBar() -> i
    void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> a
    void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean hasExpandedActionView() -> j
    void collapseActionView() -> k
    java.lang.CharSequence getTitle() -> l
    void setWindowTitle(java.lang.CharSequence) -> a
    void setHomeButtonEnabled(boolean) -> c
    void setDisplayOptions(int) -> b
    void setNavigationMode$13462e() -> m
    int getDropdownSelectedPosition() -> n
    int getNavigationMode() -> o
    int getDisplayOptions() -> p
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> r
    void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView) -> a
    void setCollapsable(boolean) -> d
    boolean isCollapsed() -> q
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView) -> a
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView) -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView) -> c
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView) -> d
    android.graphics.drawable.Drawable access$4(com.actionbarsherlock.internal.widget.ActionBarView) -> e
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView) -> f
    android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView) -> g
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView) -> h
    com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView) -> i
    android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView) -> j
    int access$10(com.actionbarsherlock.internal.widget.ActionBarView) -> k
    void access$11(com.actionbarsherlock.internal.widget.ActionBarView) -> l
    int access$12(com.actionbarsherlock.internal.widget.ActionBarView) -> m
com.actionbarsherlock.internal.widget.ActionBarView$1 -> com.actionbarsherlock.internal.widget.c:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onItemSelected$4cda22f6$17e13fe2(android.view.View) -> a
com.actionbarsherlock.internal.widget.ActionBarView$2 -> com.actionbarsherlock.internal.widget.d:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$3 -> com.actionbarsherlock.internal.widget.e:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> com.actionbarsherlock.internal.widget.f:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> c
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> i
    boolean expandItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean collapseItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
com.actionbarsherlock.internal.widget.ActionBarView$HomeView -> com.actionbarsherlock.internal.widget.ActionBarView$HomeView:
    android.view.View mUpView -> a
    android.widget.ImageView mIconView -> b
    int mUpWidth -> c
    void setUp(boolean) -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarView$SavedState -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1 -> com.actionbarsherlock.internal.widget.g:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.CapitalizingButton -> com.actionbarsherlock.internal.widget.CapitalizingButton:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_Button -> c
    boolean mAllCaps -> d
    void setTextCompat(java.lang.CharSequence) -> a
com.actionbarsherlock.internal.widget.CapitalizingTextView -> com.actionbarsherlock.internal.widget.CapitalizingTextView:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_TextView -> c
    boolean mAllCaps -> d
    void setTextCompat(java.lang.CharSequence) -> a
com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow -> com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow:
    android.util.TypedValue mMinWidthMajor -> a
    android.util.TypedValue mMinWidthMinor -> b
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.widget.IcsAbsSpinner -> com.actionbarsherlock.internal.widget.IcsAbsSpinner:
    boolean IS_HONEYCOMB -> D
    android.widget.SpinnerAdapter mAdapter -> a
    int mHeightMeasureSpec -> b
    int mWidthMeasureSpec -> c
    boolean mBlockLayoutRequests -> d
    int mSelectionLeftPadding -> e
    int mSelectionTopPadding -> f
    int mSelectionRightPadding -> g
    int mSelectionBottomPadding -> h
    android.graphics.Rect mSpinnerPadding -> i
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin mRecycler -> j
    android.database.DataSetObserver mDataSetObserver -> E
    void setAdapter(android.widget.SpinnerAdapter) -> a
    void resetList() -> a
    void onMeasure(int,int) -> onMeasure
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void setSelection(int) -> a
    android.view.View getSelectedView() -> b
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> c
    int getCount() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.widget.Adapter getAdapter() -> e
    void access$2$4fa1295a(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View) -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin -> com.actionbarsherlock.internal.widget.h:
    android.util.SparseArray mScrapHeap -> b
    com.actionbarsherlock.internal.widget.IcsAbsSpinner this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState:
    long selectedId -> a
    int position -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1 -> com.actionbarsherlock.internal.widget.i:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsAdapterView -> com.actionbarsherlock.internal.widget.IcsAdapterView:
    int mFirstPosition -> k
    int mSpecificTop -> l
    int mSyncPosition -> m
    long mSyncRowId -> n
    long mSyncHeight -> o
    boolean mNeedSync -> p
    int mSyncMode -> q
    int mLayoutHeight -> a
    boolean mInLayout -> r
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mOnItemSelectedListener -> s
    boolean mDataChanged -> t
    int mNextSelectedPosition -> u
    long mNextSelectedRowId -> v
    int mSelectedPosition -> w
    long mSelectedRowId -> x
    android.view.View mEmptyView -> b
    int mItemCount -> y
    int mOldItemCount -> z
    int mOldSelectedPosition -> A
    long mOldSelectedRowId -> B
    boolean mDesiredFocusableState -> c
    boolean mDesiredFocusableInTouchModeState -> d
    com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier mSelectionNotifier -> e
    boolean mBlockLayoutRequests -> C
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> a
    android.widget.Adapter getAdapter() -> e
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> f
    android.view.View getSelectedView() -> b
    int getCount() -> d
    int getLastVisiblePosition() -> a
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> g
    long getItemIdAtPosition(int) -> a
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void fireOnSelected() -> c
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> k
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> h
    void checkSelectionChanged() -> i
    void setSelectedPositionInt(int) -> b
    void setNextSelectedPositionInt(int) -> c
    void rememberSyncState() -> j
    void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable) -> a
    android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
    void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView) -> b
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver -> com.actionbarsherlock.internal.widget.j:
    android.os.Parcelable mInstanceState -> b
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener -> com.actionbarsherlock.internal.widget.k:
    void onItemSelected$4cda22f6$17e13fe2(android.view.View) -> a
com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier -> com.actionbarsherlock.internal.widget.l:
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsLinearLayout -> com.actionbarsherlock.internal.widget.IcsLinearLayout:
    int[] LinearLayout -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerWidth -> c
    int mShowDividers -> d
    int mDividerPadding -> e
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawVerticalDivider(android.graphics.Canvas,int) -> a
    boolean hasDividerBeforeChildAt(int) -> a
com.actionbarsherlock.internal.widget.IcsListPopupWindow -> com.actionbarsherlock.internal.widget.IcsListPopupWindow:
    android.content.Context mContext -> a
    android.widget.PopupWindow mPopup -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView mDropDownList -> d
    int mDropDownHeight -> e
    int mDropDownWidth -> f
    int mDropDownHorizontalOffset -> g
    int mDropDownVerticalOffset -> h
    boolean mDropDownVerticalOffsetSet -> i
    int mListItemExpandMaximum -> j
    android.view.View mPromptView -> k
    int mPromptPosition -> l
    android.database.DataSetObserver mObserver -> m
    android.view.View mDropDownAnchorView -> n
    android.graphics.drawable.Drawable mDropDownListHighlight -> o
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> p
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> q
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> r
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> s
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener mScrollListener -> t
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider mHideSelector -> u
    android.os.Handler mHandler -> v
    android.graphics.Rect mTempRect -> w
    boolean mModal -> x
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition$13462e() -> a
    void setModal$1385ff() -> b
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setAnchorView(android.view.View) -> a
    void setHorizontalOffset(int) -> a
    void setVerticalOffset(int) -> b
    void setContentWidth(int) -> c
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> c
    void dismiss() -> d
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void setInputMethodMode$13462e() -> e
    void clearListSelection() -> f
    boolean isShowing() -> g
    boolean isInputMethodNotNeeded() -> i
    android.widget.ListView getListView() -> h
    int measureHeightOfChildren$2e71581f(int) -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> a
    int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> b
    android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> c
    android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> e
    boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> f
com.actionbarsherlock.internal.widget.IcsListPopupWindow$1 -> com.actionbarsherlock.internal.widget.m:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView -> com.actionbarsherlock.internal.widget.n:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean) -> a
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider -> com.actionbarsherlock.internal.widget.o:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver -> com.actionbarsherlock.internal.widget.p:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener -> com.actionbarsherlock.internal.widget.q:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor -> com.actionbarsherlock.internal.widget.r:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable -> com.actionbarsherlock.internal.widget.s:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar -> com.actionbarsherlock.internal.widget.IcsProgressBar:
    boolean IS_HONEYCOMB -> f
    int[] ProgressBar -> g
    int mMinWidth -> a
    int mMaxWidth -> b
    int mMinHeight -> c
    int mMaxHeight -> d
    int mProgress -> h
    int mSecondaryProgress -> i
    int mMax -> j
    int mBehavior -> k
    int mDuration -> l
    boolean mIndeterminate -> m
    boolean mOnlyIndeterminate -> n
    android.view.animation.Transformation mTransformation -> o
    android.view.animation.AlphaAnimation mAnimation -> p
    android.graphics.drawable.Drawable mIndeterminateDrawable -> q
    int mIndeterminateRealLeft -> r
    int mIndeterminateRealTop -> s
    android.graphics.drawable.Drawable mProgressDrawable -> t
    android.graphics.drawable.Drawable mCurrentDrawable -> u
    android.graphics.Bitmap mSampleTile -> e
    boolean mNoInvalidate -> v
    android.view.animation.Interpolator mInterpolator -> w
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> x
    long mUiThreadId -> y
    boolean mShouldStartAnimationDrawable -> z
    long mLastDrawTime -> A
    boolean mInDrawing -> B
    int mAnimationResolution -> C
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> D
    com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender mAccessibilityEventSender -> E
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void setIndeterminate(boolean) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void postInvalidate() -> postInvalidate
    void doRefreshProgress$3b46042b(int,int,boolean) -> a
    void refreshProgress$486912df(int,int) -> a
    void setProgress(int) -> b
    void setProgress$2563266(int) -> c
    void setSecondaryProgress(int) -> d
    void setMax(int) -> a
    void startAnimation() -> a
    void stopAnimation() -> b
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> c
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void access$0$658471ab$5fd275b7(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int) -> a
    void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender -> com.actionbarsherlock.internal.widget.t:
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable -> com.actionbarsherlock.internal.widget.u:
    int mId -> b
    int mProgress -> c
    boolean mFromUser -> d
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
    void setup$486912df(int,int) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState:
    int progress -> a
    int secondaryProgress -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1 -> com.actionbarsherlock.internal.widget.v:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsSpinner -> com.actionbarsherlock.internal.widget.IcsSpinner:
    com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup mPopup -> E
    com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter mTempAdapter -> F
    int mDropDownWidth -> D
    int mGravity -> G
    boolean mDisableChildrenWhenDisabled -> H
    android.graphics.Rect mTempRect -> I
    void setEnabled(boolean) -> setEnabled
    void setAdapter(android.widget.SpinnerAdapter) -> a
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.View makeAndAddView(int) -> d
    void setUpChild(android.view.View) -> a
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner) -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter -> com.actionbarsherlock.internal.widget.w:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup -> com.actionbarsherlock.internal.widget.x:
    java.lang.CharSequence mHintText -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsSpinner this$0 -> a
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> c
    com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup) -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1 -> com.actionbarsherlock.internal.widget.y:
    com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup -> com.actionbarsherlock.internal.widget.z:
    void setAdapter(android.widget.ListAdapter) -> a
    void show() -> c
    void dismiss() -> d
    boolean isShowing() -> g
    void setPromptText(java.lang.CharSequence) -> a
com.actionbarsherlock.internal.widget.ScrollingTabContainerView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    com.actionbarsherlock.internal.widget.IcsLinearLayout mTabLayout -> c
    com.actionbarsherlock.internal.widget.IcsSpinner mTabSpinner -> d
    boolean mAllowCollapse -> e
    android.view.LayoutInflater mInflater -> f
    int mMaxTabWidth -> b
    int mContentHeight -> g
    int mSelectedTabIndex -> h
    android.view.animation.Interpolator sAlphaInterpolator -> i
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> a
    boolean performExpand() -> b
    void setTabSelected(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToTab(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onItemSelected$4cda22f6$17e13fe2(android.view.View) -> a
    com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1$6b53874d(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab) -> a
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1 -> com.actionbarsherlock.internal.widget.aa:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    android.view.View val$tabView -> b
    void run() -> run
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter -> com.actionbarsherlock.internal.widget.ab:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mParent -> a
    com.actionbarsherlock.app.ActionBar$Tab mTab -> b
    com.actionbarsherlock.internal.widget.CapitalizingTextView mTextView -> c
    android.widget.ImageView mIconView -> d
    android.view.View mCustomView -> e
    void init$60413572(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab) -> a
    void bindTab(com.actionbarsherlock.app.ActionBar$Tab) -> a
    void onMeasure(int,int) -> onMeasure
    void update() -> b
    com.actionbarsherlock.app.ActionBar$Tab getTab() -> a
com.actionbarsherlock.internal.widget.ScrollingTextView -> com.actionbarsherlock.internal.widget.ScrollingTextView:
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean isFocused() -> isFocused
com.actionbarsherlock.view.ActionMode -> com.actionbarsherlock.a.a:
com.actionbarsherlock.view.ActionMode$Callback -> com.actionbarsherlock.a.b:
com.actionbarsherlock.view.ActionProvider -> com.actionbarsherlock.a.c:
    com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> a
    android.view.View onCreateActionView() -> a
    void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener) -> a
com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener -> com.actionbarsherlock.a.d:
com.actionbarsherlock.view.CollapsibleActionView -> com.actionbarsherlock.a.e:
com.actionbarsherlock.view.Menu -> com.actionbarsherlock.a.f:
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void clear() -> b
    void setGroupCheckable$4870cd2e(int) -> a
    boolean hasVisibleItems() -> c
    com.actionbarsherlock.view.MenuItem findItem(int) -> b
com.actionbarsherlock.view.MenuInflater -> com.actionbarsherlock.a.g:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    void inflate(int,com.actionbarsherlock.view.Menu) -> a
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu) -> a
    android.content.Context access$0(com.actionbarsherlock.view.MenuInflater) -> a
    java.lang.Class[] access$1() -> a
    java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater) -> b
    java.lang.Class[] access$3() -> b
    java.lang.Object[] access$4(com.actionbarsherlock.view.MenuInflater) -> c
com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener -> com.actionbarsherlock.a.h:
    java.lang.Class[] PARAM_TYPES -> a
    android.content.Context mContext -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.view.MenuInflater$MenuState -> com.actionbarsherlock.a.i:
    com.actionbarsherlock.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    com.actionbarsherlock.view.ActionProvider itemActionProvider -> z
    com.actionbarsherlock.view.MenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(com.actionbarsherlock.view.MenuItem) -> a
    void addItem() -> b
    com.actionbarsherlock.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState) -> a
com.actionbarsherlock.view.MenuItem -> com.actionbarsherlock.a.j:
    int getItemId() -> c
    int getGroupId() -> a
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    java.lang.CharSequence getTitleCondensed() -> e
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    boolean isVisible() -> g
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    boolean hasSubMenu() -> f
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> h
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> i
    boolean expandActionView() -> j
    boolean isActionViewExpanded() -> k
com.actionbarsherlock.view.MenuItem$OnActionExpandListener -> com.actionbarsherlock.a.k:
    boolean onMenuItemActionExpand$58cc55c7() -> a
    boolean onMenuItemActionCollapse$58cc55c7() -> b
com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener -> com.actionbarsherlock.a.l:
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.view.SubMenu -> com.actionbarsherlock.a.m:
    com.actionbarsherlock.view.MenuItem getItem() -> w
com.actionbarsherlock.view.Window -> com.actionbarsherlock.a.n:
com.actionbarsherlock.view.Window$Callback -> com.actionbarsherlock.a.o:
    boolean onMenuItemSelected$7350e552(com.actionbarsherlock.view.MenuItem) -> c
com.commonsware.cwac.tlv.TouchListView -> com.commonsware.cwac.tlv.TouchListView:
    android.widget.ImageView mDragView -> a
    android.view.WindowManager mWindowManager -> b
    android.view.WindowManager$LayoutParams mWindowParams -> c
    int mDragPos -> d
    int mFirstDragPos -> e
    int mDragPoint -> f
    int mCoordOffset -> g
    com.commonsware.cwac.tlv.TouchListView$DragListener mDragListener -> h
    com.commonsware.cwac.tlv.TouchListView$DropListener mDropListener -> i
    com.commonsware.cwac.tlv.TouchListView$RemoveListener mRemoveListener -> j
    int mUpperBound -> k
    int mLowerBound -> l
    int mHeight -> m
    android.view.GestureDetector mGestureDetector -> n
    int mRemoveMode -> o
    android.graphics.Rect mTempRect -> p
    android.graphics.Bitmap mDragBitmap -> q
    int mTouchSlop -> r
    int mItemHeightNormal -> s
    int mItemHeightExpanded -> t
    int grabberId -> u
    int dragndropBackgroundColor -> v
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> addHeaderView
    void addHeaderView(android.view.View) -> addHeaderView
    void addFooterView(android.view.View,java.lang.Object,boolean) -> addFooterView
    void addFooterView(android.view.View) -> addFooterView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean isDraggableRow(android.view.View) -> a
    void unExpandViews(boolean) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void stopDragging() -> a
    android.widget.ImageView access$0(com.commonsware.cwac.tlv.TouchListView) -> a
    android.graphics.Rect access$1(com.commonsware.cwac.tlv.TouchListView) -> b
    void access$2(com.commonsware.cwac.tlv.TouchListView) -> c
    com.commonsware.cwac.tlv.TouchListView$RemoveListener access$3(com.commonsware.cwac.tlv.TouchListView) -> d
    int access$4(com.commonsware.cwac.tlv.TouchListView) -> e
    void access$5$ae1b180(com.commonsware.cwac.tlv.TouchListView) -> f
com.commonsware.cwac.tlv.TouchListView$1 -> com.commonsware.cwac.tlv.a:
    com.commonsware.cwac.tlv.TouchListView this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.commonsware.cwac.tlv.TouchListView$DragListener -> com.commonsware.cwac.tlv.b:
com.commonsware.cwac.tlv.TouchListView$DropListener -> com.commonsware.cwac.tlv.c:
com.commonsware.cwac.tlv.TouchListView$RemoveListener -> com.commonsware.cwac.tlv.d:
com.viewpagerindicator.CirclePageIndicator -> com.viewpagerindicator.CirclePageIndicator:
    float mRadius -> a
    android.graphics.Paint mPaintPageFill -> b
    android.graphics.Paint mPaintStroke -> c
    android.graphics.Paint mPaintFill -> d
    android.support.v4.view.ViewPager mViewPager -> e
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> f
    int mCurrentPage -> g
    int mSnapPage -> h
    int mCurrentOffset -> i
    int mScrollState -> j
    int mPageSize -> k
    int mOrientation -> l
    boolean mCentered -> m
    boolean mSnap -> n
    int mTouchSlop -> o
    float mLastMotionX -> p
    int mActivePointerId -> q
    boolean mIsDragging -> r
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onMeasure(int,int) -> onMeasure
    int measureLong(int) -> c
    int measureShort(int) -> d
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.viewpagerindicator.CirclePageIndicator$SavedState -> com.viewpagerindicator.CirclePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.CirclePageIndicator$SavedState$1 -> com.viewpagerindicator.a:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.PageIndicator -> com.viewpagerindicator.b:
com.viewpagerindicator.R -> com.viewpagerindicator.c:
com.viewpagerindicator.R$attr -> com.viewpagerindicator.d:
    int vpiCirclePageIndicatorStyle -> a
    int vpiTitlePageIndicatorStyle -> b
com.viewpagerindicator.R$bool -> com.viewpagerindicator.e:
    int default_circle_indicator_centered -> a
    int default_circle_indicator_snap -> b
    int default_title_indicator_selected_bold -> c
com.viewpagerindicator.R$color -> com.viewpagerindicator.f:
    int default_circle_indicator_fill_color -> a
    int default_circle_indicator_page_color -> b
    int default_circle_indicator_stroke_color -> c
    int default_title_indicator_footer_color -> d
    int default_title_indicator_selected_color -> e
    int default_title_indicator_text_color -> f
com.viewpagerindicator.R$dimen -> com.viewpagerindicator.g:
    int default_circle_indicator_radius -> a
    int default_circle_indicator_stroke_width -> b
    int default_title_indicator_clip_padding -> c
    int default_title_indicator_footer_indicator_height -> d
    int default_title_indicator_footer_indicator_underline_padding -> e
    int default_title_indicator_footer_line_height -> f
    int default_title_indicator_footer_padding -> g
    int default_title_indicator_text_size -> h
    int default_title_indicator_title_padding -> i
    int default_title_indicator_top_padding -> j
com.viewpagerindicator.R$integer -> com.viewpagerindicator.h:
    int default_circle_indicator_orientation -> a
    int default_title_indicator_footer_indicator_style -> b
com.viewpagerindicator.R$style -> com.viewpagerindicator.i:
    int Widget_CirclePageIndicator -> a
    int Widget_TitlePageIndicator -> b
com.viewpagerindicator.R$styleable -> com.viewpagerindicator.j:
    int[] CirclePageIndicator -> a
    int[] SherlockActionBar -> b
    int[] SherlockActionMenuItemView -> c
    int[] SherlockActionMode -> d
    int[] SherlockMenuGroup -> e
    int[] SherlockMenuItem -> f
    int[] SherlockMenuView -> g
    int[] SherlockSpinner -> h
    int[] SherlockTheme -> i
    int[] TitlePageIndicator -> j
    int[] TouchListView -> k
    int[] ViewPagerIndicator -> l
com.viewpagerindicator.TabPageIndicator -> com.viewpagerindicator.TabPageIndicator:
    java.lang.Runnable mTabSelector -> a
    android.view.View$OnClickListener mTabClickListener -> c
    android.widget.LinearLayout mTabLayout -> d
    android.support.v4.view.ViewPager mViewPager -> e
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> f
    android.view.LayoutInflater mInflater -> g
    int mMaxTabWidth -> b
    int mSelectedTabIndex -> h
    void onMeasure(int,int) -> onMeasure
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void setCurrentItem(int) -> c
    android.support.v4.view.ViewPager access$0(com.viewpagerindicator.TabPageIndicator) -> a
com.viewpagerindicator.TabPageIndicator$1 -> com.viewpagerindicator.k:
    com.viewpagerindicator.TabPageIndicator this$0 -> a
    void onClick(android.view.View) -> onClick
com.viewpagerindicator.TabPageIndicator$2 -> com.viewpagerindicator.l:
    com.viewpagerindicator.TabPageIndicator this$0 -> a
    android.view.View val$tabView -> b
    void run() -> run
com.viewpagerindicator.TabPageIndicator$TabView -> com.viewpagerindicator.TabPageIndicator$TabView:
    com.viewpagerindicator.TabPageIndicator mParent -> a
    int mIndex -> b
    void onMeasure(int,int) -> onMeasure
    int getIndex() -> a
com.viewpagerindicator.TitlePageIndicator -> com.viewpagerindicator.TitlePageIndicator:
    android.support.v4.view.ViewPager mViewPager -> a
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> b
    com.viewpagerindicator.TitleProvider mTitleProvider -> c
    int mCurrentPage -> d
    int mCurrentOffset -> e
    int mScrollState -> f
    android.graphics.Paint mPaintText -> g
    boolean mBoldText -> h
    int mColorText -> i
    int mColorSelected -> j
    android.graphics.Path mPath -> k
    android.graphics.Paint mPaintFooterLine -> l
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle mFooterIndicatorStyle -> m
    android.graphics.Paint mPaintFooterIndicator -> n
    float mFooterIndicatorHeight -> o
    float mFooterIndicatorUnderlinePadding -> p
    float mFooterPadding -> q
    float mTitlePadding -> r
    float mTopPadding -> s
    float mClipPadding -> t
    float mFooterLineHeight -> u
    int mTouchSlop -> v
    float mLastMotionX -> w
    int mActivePointerId -> x
    boolean mIsDragging -> y
    com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener mCenterItemClickListener -> z
    int[] $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle -> A
    void setFooterIndicatorStyle(com.viewpagerindicator.TitlePageIndicator$IndicatorStyle) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void clipViewOnTheRight(android.graphics.RectF,float,int) -> a
    void clipViewOnTheLeft(android.graphics.RectF,float,int) -> b
    void setViewPager(android.support.v4.view.ViewPager) -> a
    int getCurrentItem() -> a
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle() -> b
com.viewpagerindicator.TitlePageIndicator$IndicatorStyle -> com.viewpagerindicator.m:
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle None -> a
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Triangle -> b
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Underline -> c
    int value -> d
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] ENUM$VALUES -> e
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle fromValue(int) -> a
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] values() -> values
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle valueOf(java.lang.String) -> valueOf
com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener -> com.viewpagerindicator.n:
com.viewpagerindicator.TitlePageIndicator$SavedState -> com.viewpagerindicator.TitlePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.TitlePageIndicator$SavedState$1 -> com.viewpagerindicator.o:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.TitleProvider -> com.viewpagerindicator.p:
    java.lang.String getTitle(int) -> b
net.londatiga.android.ActionItem -> net.a.a.a:
    android.graphics.drawable.Drawable icon -> a
    java.lang.String title -> b
    boolean clickable -> c
    void setTitle(java.lang.String) -> a
    java.lang.String getTitle() -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getIcon() -> b
    boolean isClickable() -> c
    void setClickable$1385ff() -> d
net.londatiga.android.PopupWindows -> net.a.a.b:
    android.content.Context mContext -> a
    android.widget.PopupWindow mWindow -> b
    android.view.View mRootView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.view.WindowManager mWindowManager -> e
    void preShow() -> a
    void setContentView(android.view.View) -> a
    void dismiss() -> b
net.londatiga.android.PopupWindows$1 -> net.a.a.c:
    net.londatiga.android.PopupWindows this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
net.londatiga.android.QuickAction -> net.a.a.d:
    android.view.View mRootView -> f
    android.widget.ImageView mArrowUp -> g
    android.widget.ImageView mArrowDown -> h
    android.view.LayoutInflater inflater -> i
    android.view.ViewGroup mTrack -> j
    net.londatiga.android.QuickAction$OnActionItemClickListener mListener -> k
    int mChildPos -> l
    int animStyle -> m
    void setOnActionItemClickListener(net.londatiga.android.QuickAction$OnActionItemClickListener) -> a
    void addActionItem(net.londatiga.android.ActionItem) -> a
    void show(android.view.View) -> b
    void show(android.view.View,android.graphics.Rect) -> a
    void show(android.view.View,int,int) -> a
    net.londatiga.android.QuickAction$OnActionItemClickListener access$0(net.londatiga.android.QuickAction) -> a
net.londatiga.android.QuickAction$1 -> net.a.a.e:
    net.londatiga.android.QuickAction this$0 -> a
    int val$pos -> b
    void onClick(android.view.View) -> onClick
net.londatiga.android.QuickAction$OnActionItemClickListener -> net.a.a.f:
    void onItemClick(int) -> a
net.margaritov.preference.colorpicker.AlphaPatternDrawable -> net.margaritov.preference.colorpicker.a:
    int mRectangleSize -> a
    android.graphics.Paint mPaint -> b
    android.graphics.Paint mPaintWhite -> c
    android.graphics.Paint mPaintGray -> d
    int numRectanglesHorizontal -> e
    int numRectanglesVertical -> f
    android.graphics.Bitmap mBitmap -> g
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
net.margaritov.preference.colorpicker.ColorPickerDialog -> net.margaritov.preference.colorpicker.b:
    net.margaritov.preference.colorpicker.ColorPickerView mColorPicker -> a
    net.margaritov.preference.colorpicker.ColorPickerPanelView mOldColor -> b
    net.margaritov.preference.colorpicker.ColorPickerPanelView mNewColor -> c
    net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener mListener -> d
    void onColorChanged(int) -> a
    void setAlphaSliderVisible$1385ff() -> a
    void setOnColorChangedListener(net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener) -> a
    void onClick(android.view.View) -> onClick
net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener -> net.margaritov.preference.colorpicker.c:
    void onColorChanged(int) -> a
net.margaritov.preference.colorpicker.ColorPickerPanelView -> net.margaritov.preference.colorpicker.ColorPickerPanelView:
    float mDensity -> a
    int mBorderColor -> b
    int mColor -> c
    android.graphics.Paint mBorderPaint -> d
    android.graphics.Paint mColorPaint -> e
    android.graphics.RectF mDrawingRect -> f
    android.graphics.RectF mColorRect -> g
    net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern -> h
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setColor(int) -> a
    int getColor() -> a
net.margaritov.preference.colorpicker.ColorPickerPreference -> net.margaritov.preference.colorpicker.ColorPickerPreference:
    android.view.View mView -> a
    int mDefaultValue -> b
    int mValue -> c
    float mDensity -> d
    boolean mAlphaSliderEnabled -> e
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void init(android.content.Context,android.util.AttributeSet) -> a
    void onBindView(android.view.View) -> onBindView
    void setPreviewColor() -> a
    android.graphics.Bitmap getPreviewBitmap() -> b
    int getValue() -> c
    void onColorChanged(int) -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    int convertToColorInt(java.lang.String) -> a
net.margaritov.preference.colorpicker.ColorPickerView -> net.margaritov.preference.colorpicker.ColorPickerView:
    float HUE_PANEL_WIDTH -> a
    float ALPHA_PANEL_HEIGHT -> b
    float PANEL_SPACING -> c
    float PALETTE_CIRCLE_TRACKER_RADIUS -> d
    float RECTANGLE_TRACKER_OFFSET -> e
    float mDensity -> f
    net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener mListener -> g
    android.graphics.Paint mSatValPaint -> h
    android.graphics.Paint mSatValTrackerPaint -> i
    android.graphics.Paint mHuePaint -> j
    android.graphics.Paint mHueTrackerPaint -> k
    android.graphics.Paint mAlphaPaint -> l
    android.graphics.Paint mAlphaTextPaint -> m
    android.graphics.Paint mBorderPaint -> n
    android.graphics.Shader mValShader -> o
    android.graphics.Shader mSatShader -> p
    android.graphics.Shader mHueShader -> q
    android.graphics.Shader mAlphaShader -> r
    int mAlpha -> s
    float mHue -> t
    float mSat -> u
    float mVal -> v
    java.lang.String mAlphaSliderText -> w
    int mSliderTrackerColor -> x
    int mBorderColor -> y
    boolean mShowAlphaPanel -> z
    int mLastTouchedPanel -> A
    float mDrawingOffset -> B
    android.graphics.RectF mDrawingRect -> C
    android.graphics.RectF mSatValRect -> D
    android.graphics.RectF mHueRect -> E
    android.graphics.RectF mAlphaRect -> F
    net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern -> G
    android.graphics.Point mStartTouchPoint -> H
    int[] buildHueColorArray() -> c
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean moveTrackersIfNeeded(android.view.MotionEvent) -> a
    void onMeasure(int,int) -> onMeasure
    int getPrefferedHeight() -> d
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setOnColorChangedListener(net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener) -> a
    void setColor$2563266(int) -> a
    float getDrawingOffset() -> a
    void setAlphaSliderVisible$1385ff() -> b
net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener -> net.margaritov.preference.colorpicker.d:
    void onColorChanged(int) -> a
org.achartengine.ChartFactory -> org.achartengine.a:
    org.achartengine.GraphicalView getLineChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    org.achartengine.GraphicalView getCombinedXYChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String[]) -> a
    android.content.Intent getLineChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> b
    android.content.Intent getCubicLineChartIntent$6f2b0593(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> c
    android.content.Intent getScatterChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> d
    android.content.Intent getTimeChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> a
    android.content.Intent getBarChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type) -> a
    android.content.Intent getLineChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> b
    android.content.Intent getCubicLineChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,float,java.lang.String) -> a
    android.content.Intent getBubbleChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> c
    android.content.Intent getRangeBarChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type,java.lang.String) -> a
    android.content.Intent getCombinedXYChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String[],java.lang.String) -> a
    android.content.Intent getPieChartIntent(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DefaultRenderer,java.lang.String) -> a
    android.content.Intent getDoughnutChartIntent(android.content.Context,org.achartengine.model.MultipleCategorySeries,org.achartengine.renderer.DefaultRenderer,java.lang.String) -> a
    android.content.Intent getDialChartIntent(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DialRenderer,java.lang.String) -> a
    void checkParameters(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void checkParameters(org.achartengine.model.CategorySeries,org.achartengine.renderer.DefaultRenderer) -> a
org.achartengine.GraphicalActivity -> org.achartengine.GraphicalActivity:
    org.achartengine.GraphicalView mView -> a
    org.achartengine.chart.AbstractChart mChart -> b
    void onCreate(android.os.Bundle) -> onCreate
org.achartengine.GraphicalView -> org.achartengine.b:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.DefaultRenderer mRenderer -> b
    android.graphics.Rect mRect -> c
    android.os.Handler mHandler -> d
    android.graphics.RectF mZoomR -> e
    android.graphics.Bitmap zoomInImage -> f
    android.graphics.Bitmap zoomOutImage -> g
    android.graphics.Bitmap fitZoomImage -> h
    int zoomSize -> i
    int ZOOM_BUTTONS_COLOR -> j
    org.achartengine.tools.Zoom mZoomIn -> k
    org.achartengine.tools.Zoom mZoomOut -> l
    org.achartengine.tools.FitZoom mFitZoom -> m
    android.graphics.Paint mPaint -> n
    org.achartengine.ITouchHandler mTouchHandler -> o
    float oldX -> p
    float oldY -> q
    org.achartengine.model.SeriesSelection getCurrentSeriesAndPoint() -> a
    double[] toRealPoint$2558071() -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void zoomIn() -> c
    void zoomOut() -> d
    void zoomReset() -> e
    void addZoomListener$41f6deac(org.achartengine.tools.ZoomListener) -> a
    void addPanListener(org.achartengine.tools.PanListener) -> a
    android.graphics.RectF getZoomRectangle() -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void repaint() -> g
    android.graphics.Bitmap toBitmap() -> h
org.achartengine.GraphicalView$1 -> org.achartengine.c:
    org.achartengine.GraphicalView this$0 -> a
    void run() -> run
org.achartengine.ITouchHandler -> org.achartengine.d:
    boolean handleTouch(android.view.MotionEvent) -> a
    void addZoomListener(org.achartengine.tools.ZoomListener) -> a
    void addPanListener(org.achartengine.tools.PanListener) -> a
org.achartengine.TouchHandler -> org.achartengine.e:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    float oldX2 -> d
    float oldY2 -> e
    android.graphics.RectF zoomR -> f
    org.achartengine.tools.Pan mPan -> g
    org.achartengine.tools.Zoom mPinchZoom -> h
    org.achartengine.GraphicalView graphicalView -> i
    boolean handleTouch(android.view.MotionEvent) -> a
    void addZoomListener(org.achartengine.tools.ZoomListener) -> a
    void addPanListener(org.achartengine.tools.PanListener) -> a
org.achartengine.TouchHandlerOld -> org.achartengine.f:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    android.graphics.RectF zoomR -> d
    org.achartengine.tools.Pan mPan -> e
    org.achartengine.GraphicalView graphicalView -> f
    boolean handleTouch(android.view.MotionEvent) -> a
    void addZoomListener(org.achartengine.tools.ZoomListener) -> a
    void addPanListener(org.achartengine.tools.PanListener) -> a
org.achartengine.chart.AbstractChart -> org.achartengine.a.a:
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    void drawBackground(org.achartengine.renderer.DefaultRenderer,android.graphics.Canvas,int,int,int,int,android.graphics.Paint,boolean,int) -> a
    int drawLegend(android.graphics.Canvas,org.achartengine.renderer.DefaultRenderer,java.lang.String[],int,int,int,int,int,int,android.graphics.Paint,boolean) -> a
    boolean getExceed(float,org.achartengine.renderer.DefaultRenderer,int,int) -> a
    boolean isVertical(org.achartengine.renderer.DefaultRenderer) -> a
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    int getLegendSize(org.achartengine.renderer.DefaultRenderer,int,float) -> a
    void drawLabel(android.graphics.Canvas,java.lang.String,org.achartengine.renderer.DefaultRenderer,java.util.List,int,int,float,float,float,float,int,int,android.graphics.Paint) -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
org.achartengine.chart.BarChart -> org.achartengine.a.b:
    org.achartengine.chart.BarChart$Type mType -> a
    android.graphics.RectF[] clickableAreasForPoints(float[],float,int) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int) -> a
    void drawBar(android.graphics.Canvas,float,float,float,float,float,int,int,android.graphics.Paint) -> a
    void drawBar(android.graphics.Canvas,float,float,float,float,int,int,android.graphics.Paint) -> a
    int getGradientPartialColor(int,int,float) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,float[],int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    float getHalfDiffX(float[],int,int) -> a
    float getCoeficient() -> a
    boolean isRenderNullValues() -> b
    java.lang.String getChartType() -> c
org.achartengine.chart.BarChart$Type -> org.achartengine.a.c:
    org.achartengine.chart.BarChart$Type DEFAULT -> a
    org.achartengine.chart.BarChart$Type STACKED -> b
    org.achartengine.chart.BarChart$Type[] ENUM$VALUES -> c
    org.achartengine.chart.BarChart$Type[] values() -> values
    org.achartengine.chart.BarChart$Type valueOf(java.lang.String) -> valueOf
org.achartengine.chart.BubbleChart -> org.achartengine.a.d:
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int) -> a
    android.graphics.RectF[] clickableAreasForPoints(float[],float,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.CombinedXYChart -> org.achartengine.a.e:
    org.achartengine.chart.XYChart[] mCharts -> a
    java.lang.Class[] xyChartTypes -> d
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int) -> a
    android.graphics.RectF[] clickableAreasForPoints(float[],float,int) -> a
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.CubicLineChart -> org.achartengine.a.f:
    float firstMultiplier -> a
    float secondMultiplier -> d
    org.achartengine.model.Point p1 -> e
    org.achartengine.model.Point p2 -> f
    org.achartengine.model.Point p3 -> g
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> a
    void calc(float[],org.achartengine.model.Point,int,int,float) -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.DialChart -> org.achartengine.a.g:
    org.achartengine.renderer.DialRenderer mRenderer -> e
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    double getAngleForValue(double,double,double,double,double) -> a
    void drawTicks(android.graphics.Canvas,double,double,double,double,int,int,double,double,double,android.graphics.Paint,boolean) -> a
org.achartengine.chart.DoughnutChart -> org.achartengine.a.h:
    org.achartengine.model.MultipleCategorySeries mDataset -> e
    int mStep -> f
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
org.achartengine.chart.LineChart -> org.achartengine.a.i:
    org.achartengine.chart.ScatterChart pointsChart -> a
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int) -> a
    android.graphics.RectF[] clickableAreasForPoints(float[],float,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> a_
    java.lang.String getChartType() -> c
org.achartengine.chart.PieChart -> org.achartengine.a.j:
    org.achartengine.chart.PieMapper mPieMapper -> e
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
org.achartengine.chart.PieMapper -> org.achartengine.a.k:
    java.util.List mPieSegmentList -> a
    int mPieChartRadius -> b
    int mCenterX -> c
    int mCenterY -> d
    void setDimensions(int,int,int) -> a
    boolean areAllSegmentPresent(int) -> a
    void addPieSegment(int,float,float,float) -> a
    void clearPieSegments() -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
org.achartengine.chart.PieSegment -> org.achartengine.a.l:
    float mStartAngle -> a
    float mEndAngle -> b
    int mDataIndex -> c
    float mValue -> d
    boolean isInSegment(double) -> a
    int getDataIndex() -> a
    float getValue() -> b
    java.lang.String toString() -> toString
org.achartengine.chart.PointStyle -> org.achartengine.a.m:
    org.achartengine.chart.PointStyle X -> a
    org.achartengine.chart.PointStyle CIRCLE -> b
    org.achartengine.chart.PointStyle TRIANGLE -> c
    org.achartengine.chart.PointStyle SQUARE -> d
    org.achartengine.chart.PointStyle DIAMOND -> e
    org.achartengine.chart.PointStyle POINT -> f
    java.lang.String mName -> g
    org.achartengine.chart.PointStyle[] ENUM$VALUES -> h
    java.lang.String toString() -> toString
    org.achartengine.chart.PointStyle[] values() -> values
    org.achartengine.chart.PointStyle valueOf(java.lang.String) -> valueOf
org.achartengine.chart.RangeBarChart -> org.achartengine.a.n:
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,float[],int) -> a
    float getCoeficient() -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.RoundChart -> org.achartengine.a.o:
    org.achartengine.model.CategorySeries mDataset -> a
    org.achartengine.renderer.DefaultRenderer mRenderer -> b
    int mCenterX -> c
    int mCenterY -> d
    void drawTitle(android.graphics.Canvas,int,int,int,android.graphics.Paint) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    org.achartengine.renderer.DefaultRenderer getRenderer() -> a
    int getCenterX() -> b
    int getCenterY() -> c
    void setCenterX(int) -> b
    void setCenterY(int) -> c
org.achartengine.chart.ScatterChart -> org.achartengine.a.p:
    float size -> a
    int[] $SWITCH_TABLE$org$achartengine$chart$PointStyle -> d
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int) -> a
    android.graphics.RectF[] clickableAreasForPoints(float[],float,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    void drawX(android.graphics.Canvas,android.graphics.Paint,float,float) -> a
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float) -> b
    void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> a
    void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float) -> c
    void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> b
    java.lang.String getChartType() -> c
    int[] $SWITCH_TABLE$org$achartengine$chart$PointStyle() -> g
org.achartengine.chart.TimeChart -> org.achartengine.a.q:
    java.lang.String mDateFormat -> a
    void setDateFormat(java.lang.String) -> a
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    java.text.DateFormat getDateFormat(double,double) -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.XYChart -> org.achartengine.a.r:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> b
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> c
    float mScale -> a
    float mTranslate -> d
    org.achartengine.model.Point mCenter -> e
    android.graphics.Rect mScreenR -> f
    java.util.Map mCalcRange -> g
    java.util.Map clickableAreas -> h
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    android.graphics.Rect getScreenR() -> d
    void setScreenR(android.graphics.Rect) -> a
    java.util.List getValidLabels(java.util.List) -> a
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation) -> a
    void setStroke(android.graphics.Paint$Cap,android.graphics.Paint$Join,float,android.graphics.Paint$Style,android.graphics.PathEffect,android.graphics.Paint) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,float[],int) -> a
    void drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,float) -> a
    void transform(android.graphics.Canvas,float,boolean) -> a
    java.lang.String getLabel(double) -> a
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    void drawXTextLabels(java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,boolean,int,int,int,double,double,double) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer getRenderer() -> e
    org.achartengine.model.XYMultipleSeriesDataset getDataset() -> f
    double[] getCalcRange(int) -> b
    void setCalcRange$49643445(double[]) -> a
    int getLabelLinePos(android.graphics.Paint$Align) -> a
    double[] toRealPoint(float,float,int) -> a
    double[] toScreenPoint(double[],int) -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int) -> a
    android.graphics.RectF[] clickableAreasForPoints(float[],float,int) -> a
    boolean isRenderNullValues() -> b
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> a_
    java.lang.String getChartType() -> c
org.achartengine.chartdemo.demo.ChartDemo -> org.achartengine.chartdemo.demo.ChartDemo:
    org.achartengine.chartdemo.demo.chart.IDemoChart[] mCharts -> a
    java.lang.String[] mMenuText -> b
    java.lang.String[] mMenuSummary -> c
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List getListValues() -> a
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
org.achartengine.chartdemo.demo.GeneratedChartDemo -> org.achartengine.chartdemo.demo.GeneratedChartDemo:
    java.lang.String[] mMenuText -> a
    java.lang.String[] mMenuSummary -> b
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List getListValues() -> a
    org.achartengine.model.XYMultipleSeriesDataset getDemoDataset() -> b
    org.achartengine.model.XYMultipleSeriesDataset getBarDemoDataset() -> c
    org.achartengine.renderer.XYMultipleSeriesRenderer getDemoRenderer() -> d
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
org.achartengine.chartdemo.demo.R -> org.achartengine.chartdemo.demo.a:
org.achartengine.chartdemo.demo.R$id -> org.achartengine.chartdemo.demo.b:
    int add -> a
    int chart -> b
    int new_series -> c
    int xValue -> d
    int yValue -> e
org.achartengine.chartdemo.demo.R$layout -> org.achartengine.chartdemo.demo.c:
    int xy_chart -> a
org.achartengine.chartdemo.demo.chart.AbstractDemoChart -> org.achartengine.chartdemo.demo.chart.a:
    org.achartengine.model.XYMultipleSeriesDataset buildDataset(java.lang.String[],java.util.List,java.util.List) -> a
    void addXYSeries(org.achartengine.model.XYMultipleSeriesDataset,java.lang.String[],java.util.List,java.util.List,int) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer buildRenderer(int[],org.achartengine.chart.PointStyle[]) -> a
    void setRenderer(org.achartengine.renderer.XYMultipleSeriesRenderer,int[],org.achartengine.chart.PointStyle[]) -> a
    void setChartSettings$3721f50(org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String,java.lang.String,java.lang.String,double,double,double,double,int) -> a
    org.achartengine.model.XYMultipleSeriesDataset buildDateDataset(java.lang.String[],java.util.List,java.util.List) -> b
    org.achartengine.model.MultipleCategorySeries buildMultipleCategoryDataset(java.lang.String,java.util.List,java.util.List) -> a
    org.achartengine.renderer.DefaultRenderer buildCategoryRenderer(int[]) -> a
    org.achartengine.model.XYMultipleSeriesDataset buildBarDataset(java.lang.String[],java.util.List) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer buildBarRenderer(int[]) -> b
org.achartengine.chartdemo.demo.chart.AverageCubicTemperatureChart -> org.achartengine.chartdemo.demo.chart.b:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.AverageTemperatureChart -> org.achartengine.chartdemo.demo.chart.c:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.BudgetDoughnutChart -> org.achartengine.chartdemo.demo.chart.d:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.BudgetPieChart -> org.achartengine.chartdemo.demo.chart.e:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.CombinedTemperatureChart -> org.achartengine.chartdemo.demo.chart.f:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.IDemoChart -> org.achartengine.chartdemo.demo.chart.g:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.MultipleTemperatureChart -> org.achartengine.chartdemo.demo.chart.h:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.ProjectStatusBubbleChart -> org.achartengine.chartdemo.demo.chart.i:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.ProjectStatusChart -> org.achartengine.chartdemo.demo.chart.j:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.SalesBarChart -> org.achartengine.chartdemo.demo.chart.k:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.SalesComparisonChart -> org.achartengine.chartdemo.demo.chart.l:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.SalesGrowthChart -> org.achartengine.chartdemo.demo.chart.m:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.SalesStackedBarChart -> org.achartengine.chartdemo.demo.chart.n:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.ScatterChart -> org.achartengine.chartdemo.demo.chart.o:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.SensorValuesChart -> org.achartengine.chartdemo.demo.chart.p:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.TemperatureChart -> org.achartengine.chartdemo.demo.chart.q:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.TrigonometricFunctionsChart -> org.achartengine.chartdemo.demo.chart.r:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.WeightDialChart -> org.achartengine.chartdemo.demo.chart.s:
    java.lang.String getName() -> a
    java.lang.String getDesc() -> b
    android.content.Intent execute(android.content.Context) -> a
org.achartengine.chartdemo.demo.chart.XYChartBuilder -> org.achartengine.chartdemo.demo.chart.XYChartBuilder:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    org.achartengine.model.XYSeries mCurrentSeries -> c
    org.achartengine.renderer.XYSeriesRenderer mCurrentRenderer -> d
    java.lang.String mDateFormat -> e
    android.widget.Button mNewSeries -> f
    android.widget.Button mAdd -> g
    android.widget.EditText mX -> h
    android.widget.EditText mY -> i
    org.achartengine.GraphicalView mChartView -> j
    int index -> k
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void setSeriesEnabled(boolean) -> a
    org.achartengine.model.XYMultipleSeriesDataset access$0(org.achartengine.chartdemo.demo.chart.XYChartBuilder) -> a
    void access$1(org.achartengine.chartdemo.demo.chart.XYChartBuilder,org.achartengine.model.XYSeries) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer access$2(org.achartengine.chartdemo.demo.chart.XYChartBuilder) -> b
    void access$3(org.achartengine.chartdemo.demo.chart.XYChartBuilder,org.achartengine.renderer.XYSeriesRenderer) -> a
    void access$4$7e84e938(org.achartengine.chartdemo.demo.chart.XYChartBuilder) -> c
    android.widget.EditText access$5(org.achartengine.chartdemo.demo.chart.XYChartBuilder) -> d
    android.widget.EditText access$6(org.achartengine.chartdemo.demo.chart.XYChartBuilder) -> e
    org.achartengine.model.XYSeries access$7(org.achartengine.chartdemo.demo.chart.XYChartBuilder) -> f
    org.achartengine.GraphicalView access$8(org.achartengine.chartdemo.demo.chart.XYChartBuilder) -> g
    int access$9(org.achartengine.chartdemo.demo.chart.XYChartBuilder) -> h
    void access$10(org.achartengine.chartdemo.demo.chart.XYChartBuilder,int) -> a
org.achartengine.chartdemo.demo.chart.XYChartBuilder$1 -> org.achartengine.chartdemo.demo.chart.t:
    org.achartengine.chartdemo.demo.chart.XYChartBuilder this$0 -> a
    void onClick(android.view.View) -> onClick
org.achartengine.chartdemo.demo.chart.XYChartBuilder$2 -> org.achartengine.chartdemo.demo.chart.u:
    org.achartengine.chartdemo.demo.chart.XYChartBuilder this$0 -> a
    void onClick(android.view.View) -> onClick
org.achartengine.chartdemo.demo.chart.XYChartBuilder$3 -> org.achartengine.chartdemo.demo.chart.v:
    org.achartengine.chartdemo.demo.chart.XYChartBuilder this$0 -> a
    void onClick(android.view.View) -> onClick
org.achartengine.chartdemo.demo.chart.XYChartBuilder$4 -> org.achartengine.chartdemo.demo.chart.w:
    org.achartengine.chartdemo.demo.chart.XYChartBuilder this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.achartengine.chartdemo.demo.chart.XYChartBuilder$5 -> org.achartengine.chartdemo.demo.chart.x:
    org.achartengine.chartdemo.demo.chart.XYChartBuilder this$0 -> a
    void zoomApplied(org.achartengine.tools.ZoomEvent) -> a
    void zoomReset() -> a
org.achartengine.chartdemo.demo.chart.XYChartBuilder$6 -> org.achartengine.chartdemo.demo.chart.y:
    org.achartengine.chartdemo.demo.chart.XYChartBuilder this$0 -> a
    void panApplied() -> a
org.achartengine.model.CategorySeries -> org.achartengine.b.a:
    java.lang.String mTitle -> a
    java.util.List mCategories -> b
    java.util.List mValues -> c
    java.lang.String getTitle() -> a
    void add(double) -> a
    void add(java.lang.String,double) -> a
    double getValue(int) -> a
    java.lang.String getCategory(int) -> b
    int getItemCount() -> b
    org.achartengine.model.XYSeries toXYSeries() -> c
org.achartengine.model.MultipleCategorySeries -> org.achartengine.b.b:
    java.lang.String mTitle -> a
    java.util.List mCategories -> b
    java.util.List mTitles -> c
    java.util.List mValues -> d
    void add(java.lang.String,java.lang.String[],double[]) -> a
    double[] getValues(int) -> a
    java.lang.String getCategory(int) -> b
    int getCategoriesCount() -> a
    int getItemCount(int) -> c
    java.lang.String[] getTitles(int) -> d
org.achartengine.model.Point -> org.achartengine.b.c:
    float mX -> a
    float mY -> b
    float getX() -> a
    float getY() -> b
    void setX(float) -> a
    void setY(float) -> b
org.achartengine.model.RangeCategorySeries -> org.achartengine.b.d:
    java.util.List mMaxValues -> a
    void add(double,double) -> a
    org.achartengine.model.XYSeries toXYSeries() -> c
org.achartengine.model.SeriesSelection -> org.achartengine.b.e:
    int mSeriesIndex -> a
    int mPointIndex -> b
    double mXValue -> c
    double mValue -> d
    int getSeriesIndex() -> a
    int getPointIndex() -> b
    double getXValue() -> c
    double getValue() -> d
org.achartengine.model.TimeSeries -> org.achartengine.b.f:
    void add(java.util.Date,double) -> a
org.achartengine.model.XYMultipleSeriesDataset -> org.achartengine.b.g:
    java.util.List mSeries -> a
    void addSeries(org.achartengine.model.XYSeries) -> a
    void addSeries$5f75df50(org.achartengine.model.XYSeries) -> b
    org.achartengine.model.XYSeries getSeriesAt(int) -> a
    int getSeriesCount() -> a
    org.achartengine.model.XYSeries[] getSeries() -> b
org.achartengine.model.XYSeries -> org.achartengine.b.h:
    java.lang.String mTitle -> a
    java.util.List mX -> b
    java.util.List mY -> c
    double mMinX -> d
    double mMaxX -> e
    double mMinY -> f
    double mMaxY -> g
    int mScaleNumber -> h
    int getScaleNumber() -> a
    void initRange() -> h
    void updateRange(double,double) -> b
    java.lang.String getTitle() -> b
    void add(double,double) -> a
    double getX(int) -> a
    double getY(int) -> b
    int getItemCount() -> c
    double getMinX() -> d
    double getMinY() -> e
    double getMaxX() -> f
    double getMaxY() -> g
org.achartengine.model.XYValueSeries -> org.achartengine.b.i:
    java.util.List mValue -> a
    double mMinValue -> b
    double mMaxValue -> c
    void add(double,double,double) -> a
    void add(double,double) -> a
    double getValue(int) -> c
    double getMaxValue() -> h
org.achartengine.renderer.BasicStroke -> org.achartengine.c.a:
    org.achartengine.renderer.BasicStroke SOLID -> a
    org.achartengine.renderer.BasicStroke DASHED -> b
    org.achartengine.renderer.BasicStroke DOTTED -> c
    android.graphics.Paint$Cap mCap -> d
    android.graphics.Paint$Join mJoin -> e
    float mMiter -> f
    float[] mIntervals -> g
    float mPhase -> h
    android.graphics.Paint$Cap getCap() -> a
    android.graphics.Paint$Join getJoin() -> b
    float getMiter() -> c
    float[] getIntervals() -> d
    float getPhase() -> e
org.achartengine.renderer.DefaultRenderer -> org.achartengine.c.b:
    java.lang.String mChartTitle -> a
    float mChartTitleTextSize -> b
    android.graphics.Typeface REGULAR_TEXT_FONT -> c
    java.lang.String mTextTypefaceName -> d
    int mTextTypefaceStyle -> e
    int mBackgroundColor -> f
    boolean mApplyBackgroundColor -> g
    boolean mShowAxes -> h
    int mAxesColor -> i
    boolean mShowLabels -> j
    int mLabelsColor -> k
    float mLabelsTextSize -> l
    boolean mShowLegend -> m
    float mLegendTextSize -> n
    boolean mFitLegend -> o
    boolean mShowGrid -> p
    boolean mShowCustomTextGrid -> q
    java.util.List mRenderers -> r
    boolean mAntialiasing -> s
    int mLegendHeight -> t
    int[] mMargins -> u
    float mScale -> v
    boolean mPanEnabled -> w
    boolean mZoomEnabled -> x
    boolean mZoomButtonsVisible -> y
    float mZoomRate -> z
    boolean mExternalZoomEnabled -> A
    float mOriginalScale -> B
    boolean mClickEnabled -> C
    int selectableBuffer -> D
    boolean mInScroll -> E
    float mStartAngle -> F
    java.lang.String getChartTitle() -> a
    void setChartTitle(java.lang.String) -> a
    float getChartTitleTextSize() -> b
    void setChartTitleTextSize$133aeb() -> c
    void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    void addSeriesRenderer$7b49d6ca(org.achartengine.renderer.SimpleSeriesRenderer) -> b
    org.achartengine.renderer.SimpleSeriesRenderer getSeriesRendererAt(int) -> a
    int getSeriesRendererCount() -> d
    int getBackgroundColor() -> e
    void setBackgroundColor(int) -> b
    boolean isApplyBackgroundColor() -> f
    void setApplyBackgroundColor$1385ff() -> g
    int getAxesColor() -> h
    void setAxesColor(int) -> c
    int getLabelsColor() -> i
    void setLabelsColor(int) -> d
    float getLabelsTextSize() -> j
    void setLabelsTextSize(float) -> a
    boolean isShowAxes() -> k
    boolean isShowLabels() -> l
    void setShowLabels$1385ff() -> m
    boolean isShowGrid() -> n
    void setShowGrid(boolean) -> a
    boolean isShowCustomTextGrid() -> o
    boolean isShowLegend() -> p
    boolean isFitLegend() -> q
    java.lang.String getTextTypefaceName() -> r
    int getTextTypefaceStyle() -> s
    float getLegendTextSize() -> t
    void setLegendTextSize$133aeb() -> u
    void setTextTypeface$505cff1c(java.lang.String) -> b
    boolean isAntialiasing() -> v
    void setAntialiasing$1385ff() -> w
    float getScale() -> x
    float getOriginalScale() -> y
    void setScale(float) -> b
    boolean isZoomEnabled() -> z
    void setZoomEnabled$1385ff() -> A
    boolean isZoomButtonsVisible() -> B
    void setZoomButtonsVisible(boolean) -> b
    boolean isExternalZoomEnabled() -> C
    float getZoomRate() -> D
    boolean isPanEnabled() -> E
    void setZoomRate(float) -> c
    boolean isClickEnabled() -> F
    void setClickEnabled$1385ff() -> G
    int getSelectableBuffer() -> H
    void setSelectableBuffer$13462e() -> I
    int getLegendHeight() -> J
    int[] getMargins() -> K
    void setMargins(int[]) -> a
    boolean isInScroll() -> L
    float getStartAngle() -> M
org.achartengine.renderer.DialRenderer -> org.achartengine.c.c:
    java.lang.String mChartTitle -> a
    float mChartTitleTextSize -> b
    double mAngleMin -> c
    double mAngleMax -> d
    double mMinValue -> e
    double mMaxValue -> f
    double mMinorTickSpacing -> g
    double mMajorTickSpacing -> h
    java.util.List mVisualTypes -> i
    java.lang.String getChartTitle() -> a
    void setChartTitle(java.lang.String) -> a
    float getChartTitleTextSize() -> b
    void setChartTitleTextSize$133aeb() -> c
    double getAngleMin() -> N
    double getAngleMax() -> O
    double getMinValue() -> P
    void setMinValue$133369() -> Q
    boolean isMinValueSet() -> R
    double getMaxValue() -> S
    void setMaxValue$133369() -> T
    boolean isMaxValueSet() -> U
    double getMinorTicksSpacing() -> V
    double getMajorTicksSpacing() -> W
    org.achartengine.renderer.DialRenderer$Type getVisualTypeForIndex(int) -> e
    void setVisualTypes(org.achartengine.renderer.DialRenderer$Type[]) -> a
org.achartengine.renderer.DialRenderer$Type -> org.achartengine.c.d:
    org.achartengine.renderer.DialRenderer$Type NEEDLE -> a
    org.achartengine.renderer.DialRenderer$Type ARROW -> b
    org.achartengine.renderer.DialRenderer$Type[] ENUM$VALUES -> c
    org.achartengine.renderer.DialRenderer$Type[] values() -> values
    org.achartengine.renderer.DialRenderer$Type valueOf(java.lang.String) -> valueOf
org.achartengine.renderer.SimpleSeriesRenderer -> org.achartengine.c.e:
    int mColor -> a
    boolean mDisplayChartValues -> b
    float mChartValuesTextSize -> c
    android.graphics.Paint$Align mChartValuesTextAlign -> d
    float mChartValuesSpacing -> e
    org.achartengine.renderer.BasicStroke mStroke -> f
    boolean mGradientEnabled -> g
    double mGradientStartValue -> h
    int mGradientStartColor -> i
    double mGradientStopValue -> j
    int mGradientStopColor -> k
    int getColor() -> a
    void setColor(int) -> a
    boolean isDisplayChartValues() -> b
    void setDisplayChartValues$1385ff() -> c
    float getChartValuesTextSize() -> d
    void setChartValuesTextSize(float) -> a
    android.graphics.Paint$Align getChartValuesTextAlign() -> e
    float getChartValuesSpacing() -> f
    void setChartValuesSpacing$133aeb() -> g
    org.achartengine.renderer.BasicStroke getStroke() -> h
    boolean isGradientEnabled() -> i
    void setGradientEnabled$1385ff() -> j
    double getGradientStartValue() -> k
    int getGradientStartColor() -> l
    void setGradientStart$253acba() -> m
    double getGradientStopValue() -> n
    int getGradientStopColor() -> o
    void setGradientStop$253acba() -> p
org.achartengine.renderer.XYMultipleSeriesRenderer -> org.achartengine.c.f:
    java.lang.String mXTitle -> a
    java.lang.String[] mYTitle -> b
    float mAxisTitleTextSize -> c
    double[] mMinX -> d
    double[] mMaxX -> e
    double[] mMinY -> f
    double[] mMaxY -> g
    int mXLabels -> h
    int mYLabels -> i
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation mOrientation -> j
    java.util.Map mXTextLabels -> k
    java.util.Map mYTextLabels -> l
    boolean mPanXEnabled -> m
    boolean mPanYEnabled -> n
    boolean mZoomXEnabled -> o
    boolean mZoomYEnabled -> p
    double mBarSpacing -> q
    int mMarginsColor -> r
    double[] mPanLimits -> s
    double[] mZoomLimits -> t
    float mXLabelsAngle -> u
    float mYLabelsAngle -> v
    java.util.Map initialRange -> w
    float mPointSize -> x
    int mGridColor -> y
    int scalesCount -> z
    android.graphics.Paint$Align xLabelsAlign -> A
    android.graphics.Paint$Align[] yLabelsAlign -> B
    android.graphics.Paint$Align[] yAxisAlign -> C
    void initAxesRange(int) -> v
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation getOrientation() -> N
    void setOrientation(org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation) -> a
    java.lang.String getXTitle() -> O
    void setXTitle(java.lang.String) -> c
    java.lang.String getYTitle() -> P
    java.lang.String getYTitle(int) -> e
    void setYTitle(java.lang.String) -> d
    void setYTitle$505cff1c(java.lang.String) -> e
    float getAxisTitleTextSize() -> Q
    void setAxisTitleTextSize(float) -> d
    double getXAxisMin() -> R
    void setXAxisMin(double) -> a
    double getXAxisMax() -> S
    void setXAxisMax(double) -> b
    void setYAxisMin(double) -> c
    double getYAxisMax() -> T
    void setYAxisMax(double) -> d
    double getXAxisMin(int) -> f
    void setXAxisMin(double,int) -> a
    boolean isMinXSet(int) -> g
    double getXAxisMax(int) -> h
    void setXAxisMax(double,int) -> b
    boolean isMaxXSet(int) -> i
    double getYAxisMin(int) -> j
    void setYAxisMin(double,int) -> c
    boolean isMinYSet(int) -> k
    double getYAxisMax(int) -> l
    void setYAxisMax(double,int) -> d
    boolean isMaxYSet(int) -> m
    int getXLabels() -> U
    void setXLabels(int) -> n
    void addXTextLabel(double,java.lang.String) -> a
    java.lang.String getXTextLabel(java.lang.Double) -> a
    java.lang.Double[] getXTextLabelLocations() -> V
    void addYTextLabel(double,java.lang.String) -> b
    java.lang.String getYTextLabel(java.lang.Double,int) -> a
    java.lang.Double[] getYTextLabelLocations(int) -> o
    int getYLabels() -> W
    void setYLabels(int) -> p
    boolean isPanEnabled() -> E
    boolean isPanXEnabled() -> X
    boolean isPanYEnabled() -> Y
    void setPanEnabled$25decb5() -> Z
    boolean isZoomEnabled() -> z
    boolean isZoomXEnabled() -> aa
    boolean isZoomYEnabled() -> ab
    double getBarSpacing() -> ac
    void setBarSpacing(double) -> e
    int getMarginsColor() -> ad
    void setMarginsColor(int) -> q
    int getGridColor() -> ae
    double[] getPanLimits() -> af
    void setPanLimits(double[]) -> a
    double[] getZoomLimits() -> ag
    void setZoomLimits(double[]) -> b
    float getXLabelsAngle() -> ah
    float getYLabelsAngle() -> ai
    float getPointSize() -> aj
    void setPointSize(float) -> e
    void setRange(double[],int) -> a
    boolean isInitialRangeSet() -> ak
    boolean isInitialRangeSet(int) -> r
    double[] getInitialRange(int) -> s
    android.graphics.Paint$Align getXLabelsAlign() -> al
    void setXLabelsAlign(android.graphics.Paint$Align) -> a
    android.graphics.Paint$Align getYLabelsAlign(int) -> t
    void setYLabelsAlign(android.graphics.Paint$Align) -> b
    android.graphics.Paint$Align getYAxisAlign(int) -> u
    void setYAxisAlign$65371206(android.graphics.Paint$Align) -> c
    void setYLabelsAlign$65371206(android.graphics.Paint$Align) -> d
    int getScalesCount() -> am
org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation -> org.achartengine.c.g:
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation HORIZONTAL -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation VERTICAL -> b
    int mAngle -> c
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] ENUM$VALUES -> d
    int getAngle() -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] values() -> values
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation valueOf(java.lang.String) -> valueOf
org.achartengine.renderer.XYSeriesRenderer -> org.achartengine.c.h:
    boolean mFillPoints -> a
    boolean mFillBelowLine -> b
    int mFillColor -> c
    org.achartengine.chart.PointStyle mPointStyle -> d
    float mLineWidth -> e
    boolean isFillBelowLine() -> q
    void setFillBelowLine(boolean) -> a
    boolean isFillPoints() -> r
    void setFillPoints$1385ff() -> s
    int getFillBelowLineColor() -> t
    void setFillBelowLineColor(int) -> b
    org.achartengine.chart.PointStyle getPointStyle() -> u
    void setPointStyle(org.achartengine.chart.PointStyle) -> a
    float getLineWidth() -> v
    void setLineWidth(float) -> b
org.achartengine.tools.AbstractTool -> org.achartengine.d.a:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    double[] getRange(int) -> a
    void checkRange(double[],int) -> a
    void setXRange(double,double,int) -> a
    void setYRange(double,double,int) -> b
org.achartengine.tools.FitZoom -> org.achartengine.d.b:
    void apply() -> a
org.achartengine.tools.Pan -> org.achartengine.d.c:
    java.util.List mPanListeners -> c
    void apply(float,float,float,float) -> a
    void notifyPanListeners() -> a
    void addPanListener(org.achartengine.tools.PanListener) -> a
org.achartengine.tools.PanListener -> org.achartengine.d.d:
    void panApplied() -> a
org.achartengine.tools.Zoom -> org.achartengine.d.e:
    boolean mZoomIn -> c
    float mZoomRate -> d
    java.util.List mZoomListeners -> e
    void setZoomRate(float) -> a
    void apply() -> a
    void notifyZoomListeners(org.achartengine.tools.ZoomEvent) -> a
    void notifyZoomResetListeners() -> b
    void addZoomListener(org.achartengine.tools.ZoomListener) -> a
org.achartengine.tools.ZoomEvent -> org.achartengine.d.f:
    boolean mZoomIn -> a
    float mZoomRate -> b
    boolean isZoomIn() -> a
    float getZoomRate() -> b
org.achartengine.tools.ZoomListener -> org.achartengine.d.g:
    void zoomApplied(org.achartengine.tools.ZoomEvent) -> a
    void zoomReset() -> a
org.achartengine.util.MathHelper -> org.achartengine.e.a:
    java.text.NumberFormat FORMAT -> a
    java.util.List getLabels(double,double,int) -> a
    float[] getFloats(java.util.List) -> a
org.andnav.osm.OpenStreetMapActivity -> org.andnav.osm.OpenStreetMapActivity:
    org.andnav.osm.OpenStreetMapActivity$MapLocationListener mLocationListener -> m
    org.andnav.osm.OpenStreetMapActivity$MapLocationListener mNetListener -> n
    android.location.LocationManager mLocationManager -> o
    int mNumSatellites -> p
    boolean mGPSFastUpdate -> q
    void onCreate(android.os.Bundle) -> onCreate
    void onCreate$3d28c88b(android.os.Bundle) -> a
    android.location.LocationManager getLocationManager() -> f
    void getBestProvider() -> h
    void onLocationLost() -> g
    void onLocationChanged(android.location.Location) -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> a
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onStop() -> onStop
    void statusChanged(java.lang.String,int,android.os.Bundle) -> b
    void access$0(org.andnav.osm.OpenStreetMapActivity) -> a
org.andnav.osm.OpenStreetMapActivity$MapLocationListener -> org.andnav.osm.a:
    org.andnav.osm.OpenStreetMapActivity this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
org.andnav.osm.exceptions.EmptyCacheException -> org.andnav.osm.a.a:
org.andnav.osm.util.BoundingBoxE6 -> org.andnav.osm.b.a:
    int mLatNorthE6 -> a
    int mLatSouthE6 -> b
    int mLonEastE6 -> c
    int mLonWestE6 -> d
    int getLatitudeSpanE6() -> a
    int getLongitudeSpanE6() -> b
    float[] getRelativePositionOfGeoPointInBoundingBoxWithLinearInterpolation$2d75803f(int,int) -> a
    float[] getRelativePositionOfGeoPointInBoundingBoxWithExactGudermannInterpolation$2d75803f(int,int) -> b
    org.andnav.osm.util.GeoPoint getGeoPointOfRelativePositionWithLinearInterpolation(float,float) -> a
    java.lang.String toString() -> toString
org.andnav.osm.util.GeoPoint -> org.andnav.osm.b.b:
    int mLongitudeE6 -> a
    int mLatitudeE6 -> b
    org.andnav.osm.util.GeoPoint from2DoubleString(java.lang.String,java.lang.String) -> a
    int getLongitudeE6() -> a
    int getLatitudeE6() -> b
    double getLongitude() -> c
    double getLatitude() -> d
    void setLongitudeE6(int) -> a
    void setLongitude(double) -> a
    void setLatitudeE6(int) -> b
    void setLatitude(double) -> b
    void setCoordsE6(int,int) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int distanceTo(org.andnav.osm.util.GeoPoint) -> a
org.andnav.osm.util.TypeConverter -> org.andnav.osm.b.c:
    org.andnav.osm.util.GeoPoint locationToGeoPoint(android.location.Location) -> a
org.andnav.osm.views.OpenStreetMapView -> org.andnav.osm.c.a:
    org.andnav.osm.views.OpenStreetMapView$SimpleInvalidationHandler mSimpleInvalidationHandler -> o
    int mLatitudeE6 -> a
    int mLongitudeE6 -> b
    int mZoomLevel -> c
    float mBearing -> p
    boolean mActionMoveDetected -> q
    boolean mStopMoveDetecting -> r
    org.andnav.osm.views.util.OpenStreetMapRendererInfo mRendererInfo -> d
    org.andnav.osm.views.util.OpenStreetMapTileProvider mTileProvider -> e
    android.view.GestureDetector mGestureDetector -> f
    org.andnav.osm.views.util.VersionedGestureDetector mVGestureDetector -> s
    java.util.List mOverlays -> g
    android.graphics.Paint mPaint -> h
    int mTouchDownX -> i
    int mTouchDownY -> j
    int mTouchMapOffsetX -> k
    int mTouchMapOffsetY -> l
    double mTouchScale -> m
    double mTouchDiagonalSize -> t
    org.andnav.osm.views.OpenStreetMapView mMiniMap -> u
    org.andnav.osm.views.OpenStreetMapView mMaxiMap -> v
    org.andnav.osm.views.controller.OpenStreetMapViewController mController -> w
    int mMiniMapOverriddenVisibility -> x
    int mMiniMapZoomDiff -> y
    android.os.Handler mMainActivityCallbackHandler -> z
    android.os.Handler getHandler() -> getHandler
    android.os.Handler getCallbackHandler() -> a
    org.andnav.osm.views.controller.OpenStreetMapViewController getController() -> b
    java.util.List getOverlays() -> c
    org.andnav.osm.util.BoundingBoxE6 getDrawnBoundingBoxE6() -> d
    org.andnav.osm.views.OpenStreetMapView$OpenStreetMapViewProjection getProjection() -> e
    void setMapCenter(org.andnav.osm.util.GeoPoint) -> a
    void setMapCenter(int,int) -> a
    void setMapCenter(int,int,boolean) -> a
    void setBearing(float) -> a
    float getBearing() -> f
    boolean setRenderer(org.andnav.osm.views.util.OpenStreetMapRendererInfo) -> a
    org.andnav.osm.views.util.OpenStreetMapRendererInfo getRenderer() -> g
    void setZoomLevel(int) -> a
    void zoomOut() -> h
    int getZoomLevel() -> i
    org.andnav.osm.util.GeoPoint getMapCenter() -> j
    int getMapCenterLatitudeE6() -> k
    int getMapCenterLongitudeE6() -> l
    void onLongPress(android.view.MotionEvent) -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> b
    boolean onDoubleTap(android.view.MotionEvent) -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    org.andnav.osm.util.GeoPoint getTouchDownPoint() -> m
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Point getUpperLeftCornerOfCenterMapTileInScreen$47f9aeaa(int[],int) -> a
    void setCallbackHandler(android.os.Handler) -> a
    void freeDatabases() -> n
    android.graphics.Point access$0$ef7df0(org.andnav.osm.views.OpenStreetMapView,int[],int) -> a
    void access$1(org.andnav.osm.views.OpenStreetMapView,boolean) -> a
    void access$2(org.andnav.osm.views.OpenStreetMapView,boolean) -> b
    boolean access$3(org.andnav.osm.views.OpenStreetMapView) -> a
    float access$4(org.andnav.osm.views.OpenStreetMapView) -> b
    double access$5(org.andnav.osm.views.OpenStreetMapView) -> c
    android.os.Handler access$6(org.andnav.osm.views.OpenStreetMapView) -> d
    void access$7(org.andnav.osm.views.OpenStreetMapView,double) -> a
org.andnav.osm.views.OpenStreetMapView$GestureCallback -> org.andnav.osm.c.b:
    org.andnav.osm.views.OpenStreetMapView this$0 -> a
    void onDown(android.view.MotionEvent) -> a
    void onMove(android.view.MotionEvent,int,float,float,float,float) -> a
    org.andnav.osm.util.GeoPoint newCenter() -> c
    void onUp$53fcfd4a() -> a
    void onDown2$1805384a(float,float,float,float) -> a
    void onUp2$53fcfd4a() -> b
org.andnav.osm.views.OpenStreetMapView$OpenStreetMapViewGestureDetectorListener -> org.andnav.osm.c.c:
    org.andnav.osm.views.OpenStreetMapView this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
org.andnav.osm.views.OpenStreetMapView$OpenStreetMapViewProjection -> org.andnav.osm.c.d:
    int viewWidth -> a
    int viewHeight -> b
    org.andnav.osm.util.BoundingBoxE6 bb -> c
    int zoomLevel -> d
    int tileSizePx -> e
    int[] centerMapTileCoords -> f
    android.graphics.Point upperLeftCornerOfCenterMapTile -> g
    org.andnav.osm.views.OpenStreetMapView this$0 -> h
    org.andnav.osm.util.GeoPoint fromPixels(float,float) -> a
    org.andnav.osm.util.GeoPoint fromPixels(float,float,double) -> a
    android.graphics.Point toPixels(org.andnav.osm.util.GeoPoint,android.graphics.Point) -> a
    android.graphics.Path toPixelsTrackPoints$4e0326a3(java.util.List,android.graphics.Point,org.andnav.osm.util.GeoPoint) -> a
org.andnav.osm.views.OpenStreetMapView$SimpleInvalidationHandler -> org.andnav.osm.c.e:
    org.andnav.osm.views.OpenStreetMapView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.andnav.osm.views.controller.OpenStreetMapViewController -> org.andnav.osm.c.a.a:
    org.andnav.osm.views.OpenStreetMapView mOsmv -> a
    org.andnav.osm.views.controller.OpenStreetMapViewController$AbstractAnimationRunner mCurrentAnimationRunner -> b
    int[] $SWITCH_TABLE$org$andnav$osm$views$controller$OpenStreetMapViewController$AnimationType -> c
    void animateTo$5e9ec415(org.andnav.osm.util.GeoPoint,org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType) -> a
    void animateTo(int,int,org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType) -> a
    void animateTo$4fa2d16(int,int,org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType,int) -> a
    int[] $SWITCH_TABLE$org$andnav$osm$views$controller$OpenStreetMapViewController$AnimationType() -> a
org.andnav.osm.views.controller.OpenStreetMapViewController$AbstractAnimationRunner -> org.andnav.osm.c.a.b:
    int mSmoothness -> a
    int mTargetLatitudeE6 -> b
    int mTargetLongitudeE6 -> c
    boolean mDone -> d
    int mStepDuration -> e
    int mPanTotalLatitudeE6 -> f
    int mPanTotalLongitudeE6 -> g
    org.andnav.osm.views.controller.OpenStreetMapViewController this$0 -> h
    void run() -> run
    boolean isDone() -> a
    void onRunAnimation() -> b
org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType -> org.andnav.osm.c.a.c:
    org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType LINEAR -> a
    org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType EXPONENTIALDECELERATING -> b
    org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType QUARTERCOSINUSALDECELERATING -> c
    org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType HALFCOSINUSALDECELERATING -> d
    org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType MIDDLEPEAKSPEED -> e
    org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType[] ENUM$VALUES -> f
    org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType[] values() -> values
    org.andnav.osm.views.controller.OpenStreetMapViewController$AnimationType valueOf(java.lang.String) -> valueOf
org.andnav.osm.views.controller.OpenStreetMapViewController$CosinusalBasedAnimationRunner -> org.andnav.osm.c.a.d:
    float mStepIncrement -> i
    float mAmountStretch -> j
    float mYOffset -> k
    float mStart -> l
    org.andnav.osm.views.controller.OpenStreetMapViewController this$0 -> m
    void onRunAnimation() -> b
org.andnav.osm.views.controller.OpenStreetMapViewController$ExponentialDeceleratingAnimationRunner -> org.andnav.osm.c.a.e:
    org.andnav.osm.views.controller.OpenStreetMapViewController this$0 -> i
    void onRunAnimation() -> b
org.andnav.osm.views.controller.OpenStreetMapViewController$HalfCosinusalDeceleratingAnimationRunner -> org.andnav.osm.c.a.f:
    org.andnav.osm.views.controller.OpenStreetMapViewController this$0 -> n
org.andnav.osm.views.controller.OpenStreetMapViewController$LinearAnimationRunner -> org.andnav.osm.c.a.g:
    int mPanPerStepLatitudeE6 -> i
    int mPanPerStepLongitudeE6 -> j
    org.andnav.osm.views.controller.OpenStreetMapViewController this$0 -> k
    void onRunAnimation() -> b
org.andnav.osm.views.controller.OpenStreetMapViewController$MiddlePeakSpeedAnimationRunner -> org.andnav.osm.c.a.h:
    org.andnav.osm.views.controller.OpenStreetMapViewController this$0 -> n
org.andnav.osm.views.controller.OpenStreetMapViewController$QuarterCosinusalDeceleratingAnimationRunner -> org.andnav.osm.c.a.i:
    org.andnav.osm.views.controller.OpenStreetMapViewController this$0 -> n
org.andnav.osm.views.overlay.OpenStreetMapViewOverlay -> org.andnav.osm.c.b.a:
    void onManagedDraw(android.graphics.Canvas,org.andnav.osm.views.OpenStreetMapView) -> a
    void onDraw(android.graphics.Canvas,org.andnav.osm.views.OpenStreetMapView) -> b
    boolean onSingleTapUp(android.view.MotionEvent,org.andnav.osm.views.OpenStreetMapView) -> a
    boolean onLongPress(android.view.MotionEvent,org.andnav.osm.views.OpenStreetMapView) -> b
org.andnav.osm.views.util.LRUMapTileCache -> org.andnav.osm.c.c.a:
    int mCapacity -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.Object remove(java.lang.Object) -> remove
org.andnav.osm.views.util.OpenStreetMapRendererInfo -> org.andnav.osm.c.c.b:
    android.content.res.Resources mResources -> o
    int MAPTILE_SIZEPX -> a
    int[] OpenSpaceUpperBoundArray -> p
    int[] OpenSpaceLayersArray -> q
    java.lang.String ID -> b
    java.lang.String BASEURL -> c
    java.lang.String NAME -> d
    java.lang.String IMAGE_FILENAMEENDING -> e
    java.lang.String GOOGLE_LANG_CODE -> f
    java.lang.String CACHE -> g
    int ZOOM_MINLEVEL -> h
    int ZOOM_MAXLEVEL -> i
    int URL_BUILDER_TYPE -> j
    int TILE_SOURCE_TYPE -> k
    int PROJECTION -> l
    boolean LAYER -> m
    boolean mOnlineMapCacheEnabled -> r
    char[] NUM_CHAR -> n
    void LoadFromResources(java.lang.String,android.content.SharedPreferences) -> a
    java.lang.String CacheDatabaseName() -> a
    java.lang.String getQRTS(int,int,int) -> a
    int getTileUpperBound(int) -> a
    java.lang.String getTileURLString(int[],int) -> a
    java.lang.Object encodeQuadTree(int,int,int) -> b
    int getTileSizePx(int) -> b
org.andnav.osm.views.util.OpenStreetMapTileCache -> org.andnav.osm.c.c.c:
    java.util.HashMap mCachedTiles -> a
    java.util.LinkedHashMap mHardCachedTiles -> b
    java.util.LinkedHashMap mHardCachedTiles2 -> c
    android.graphics.Bitmap getMapTile(java.lang.String) -> a
    void putTile(java.lang.String,android.graphics.Bitmap) -> a
    void Commit() -> a
org.andnav.osm.views.util.OpenStreetMapTileDownloader -> org.andnav.osm.c.c.d:
    java.util.HashSet mPending -> a
    android.content.Context mCtx -> b
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider mMapTileFSProvider -> c
    java.util.concurrent.ExecutorService mThreadPool -> d
    org.outlander.utils.SQLiteMapDatabase mCacheDatabase -> e
    void setCacheDatabase(java.lang.String) -> a
    void requestMapTileAsync(java.lang.String,android.os.Handler,int,int,int) -> a
org.andnav.osm.views.util.OpenStreetMapTileDownloader$1 -> org.andnav.osm.c.c.e:
    org.andnav.osm.views.util.OpenStreetMapTileDownloader this$0 -> a
    java.lang.String val$aURLString -> b
    int val$aX -> c
    int val$aY -> d
    int val$aZ -> e
    android.os.Handler val$callback -> f
    void run() -> run
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider -> org.andnav.osm.c.c.f:
    android.content.Context mCtx -> a
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$OpenStreetMapTileFilesystemProviderDataBase mDatabase -> b
    int mMaxFSCacheByteSize -> c
    int mCurrentFSCacheByteSize -> d
    java.util.concurrent.ExecutorService mThreadPool -> e
    org.andnav.osm.views.util.OpenStreetMapTileCache mCache -> f
    java.util.HashSet mPending -> g
    java.io.File mCashFile -> h
    org.outlander.utils.SQLiteMapDatabase mUserMapDatabase -> i
    android.app.ProgressDialog mProgressDialog -> j
    boolean mStopIndexing -> k
    boolean mBlockIndexing -> l
    int getZoomMinInCashFile() -> a
    int getZoomMaxInCashFile() -> b
    boolean setUserMapFile(java.lang.String,int,android.os.Handler) -> a
    void ShowIndexingProgressDialog(long) -> a
    int getCurrentFSCacheByteSize() -> c
    void loadMapTileFromMNM(java.lang.String,android.os.Handler,int,int,int) -> a
    void loadMapTileFromSQLite(java.lang.String,android.os.Handler,int,int,int) -> b
    void loadMapTileFromTAR(java.lang.String,android.os.Handler) -> a
    void loadMapTileToMemCacheAsync(java.lang.String,android.os.Handler) -> b
    void saveFile(java.lang.String,byte[]) -> a
    void clearCurrentFSCache() -> d
    android.database.sqlite.SQLiteDatabase getIndexDatabase() -> e
    void freeDatabases() -> f
    android.app.ProgressDialog access$0(org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider) -> a
    boolean access$1(org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider) -> b
    void access$2$2f4433cd(org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider) -> c
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$1 -> org.andnav.osm.c.c.g:
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> a
    android.os.Handler val$callback -> b
    void run() -> run
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$2 -> org.andnav.osm.c.c.h:
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> a
    android.os.Handler val$callback -> b
    void run() -> run
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$3 -> org.andnav.osm.c.c.i:
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> a
    android.os.Handler val$callback -> b
    void run() -> run
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$4 -> org.andnav.osm.c.c.j:
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$5 -> org.andnav.osm.c.c.k:
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$6 -> org.andnav.osm.c.c.l:
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> a
    java.io.InputStream val$in -> b
    java.lang.String val$formattedTileURLString -> c
    int val$x -> d
    int val$y -> e
    int val$z -> f
    java.lang.String val$aTileURLString -> g
    android.os.Handler val$callback -> h
    void run() -> run
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$7 -> org.andnav.osm.c.c.m:
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> a
    java.lang.String val$formattedTileURLString -> b
    int val$x -> c
    int val$y -> d
    int val$z -> e
    java.lang.String val$aTileURLString -> f
    android.os.Handler val$callback -> g
    void run() -> run
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$8 -> org.andnav.osm.c.c.n:
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> a
    java.io.InputStream val$in -> b
    java.lang.String val$formattedTileURLString -> c
    java.lang.String val$aTileURLString -> d
    android.os.Handler val$callback -> e
    void run() -> run
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$9 -> org.andnav.osm.c.c.o:
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> a
    java.io.InputStream val$in -> b
    java.lang.String val$formattedTileURLString -> c
    java.lang.String val$aTileURLString -> d
    android.os.Handler val$callback -> e
    void run() -> run
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$IndexDatabaseHelper -> org.andnav.osm.c.c.p:
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$OpenStreetMapTileFilesystemProviderDataBase -> org.andnav.osm.c.c.q:
    android.content.Context mCtx -> a
    android.database.sqlite.SQLiteDatabase mDatabase -> b
    java.text.SimpleDateFormat DATE_FORMAT_ISO8601 -> c
    java.lang.String mCashTableName -> d
    android.database.sqlite.SQLiteDatabase mIndexDatabase -> e
    java.lang.String TMP_COLUMN -> g
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> f
    int ZoomMaxInCashFile() -> a
    int ZoomMinInCashFile() -> b
    void setCashTable(java.lang.String) -> a
    boolean NeedIndex(long,long,boolean) -> a
    void ClearIndex() -> c
    void CommitIndex(long,long,int,int) -> a
    void CreateTarIndex$2566ab5() -> d
    void CreateMnmIndex$2566ab5() -> e
    void addTarIndexRow(java.lang.String,int,int) -> a
    void addMnmIndexRow(int,int,int,long,int) -> a
    boolean findTarIndex(java.lang.String,org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$Param4ReadData) -> a
    boolean findMnmIndex(int,int,int,org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$Param4ReadData) -> a
    void incrementUse(java.lang.String) -> b
    int addTileOrIncrement(java.lang.String,int) -> a
    int getCurrentFSCacheByteSize() -> f
    java.lang.String getNowAsIso8601() -> h
    void finalize() -> finalize
    void freeDatabases() -> g
    int access$0(org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$OpenStreetMapTileFilesystemProviderDataBase,int) -> a
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$OpenStreetMapTileFilesystemProviderDataBase$AndNavDatabaseHelper -> org.andnav.osm.c.c.r:
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$OpenStreetMapTileFilesystemProviderDataBase this$1 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider$Param4ReadData -> org.andnav.osm.c.c.s:
    int offset -> a
    int size -> b
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider this$0 -> c
org.andnav.osm.views.util.OpenStreetMapTileNameFormatter -> org.andnav.osm.c.c.t:
    java.lang.String format(java.lang.String) -> a
org.andnav.osm.views.util.OpenStreetMapTileProvider -> org.andnav.osm.c.c.u:
    android.graphics.Bitmap mLoadingMapTile -> a
    android.content.Context mCtx -> b
    org.andnav.osm.views.util.OpenStreetMapTileCache mTileCache -> c
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider mFSTileProvider -> d
    org.andnav.osm.views.util.OpenStreetMapTileDownloader mTileDownloader -> e
    android.os.Handler mLoadCallbackHandler -> g
    android.os.Handler mDownloadFinishedListenerHander -> h
    org.andnav.osm.views.util.OpenStreetMapRendererInfo mRendererInfo -> f
    boolean setRender$6adbfc4e(org.andnav.osm.views.util.OpenStreetMapRendererInfo) -> a
    android.graphics.Bitmap getMapTile(java.lang.String,int,int,int,int) -> a
    android.graphics.Bitmap getMapTile(java.lang.String,int,android.graphics.Bitmap,int,int,int) -> a
    void commitCash() -> a
    android.os.Handler access$0(org.andnav.osm.views.util.OpenStreetMapTileProvider) -> a
org.andnav.osm.views.util.OpenStreetMapTileProvider$LoadCallbackHandler -> org.andnav.osm.c.c.v:
    org.andnav.osm.views.util.OpenStreetMapTileProvider this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.andnav.osm.views.util.OpenStreetMapTileProvider$SimpleInvalidationHandler -> org.andnav.osm.c.c.w:
    org.andnav.osm.views.util.OpenStreetMapTileProvider this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.andnav.osm.views.util.StreamUtils -> org.andnav.osm.c.c.x:
    void copy(java.io.InputStream,java.io.OutputStream) -> a
    void closeStream(java.io.Closeable) -> a
org.andnav.osm.views.util.Util -> org.andnav.osm.c.c.y:
    int[] getMapTileFromCoordinates$38b67223(int,int,int,int) -> a
    org.andnav.osm.util.BoundingBoxE6 getBoundingBoxFromMapTile(int[],int,int) -> a
    double tile2lon(int,int) -> a
    double tile2lat(int,int,int) -> a
org.andnav.osm.views.util.VersionedGestureDetector -> org.andnav.osm.c.c.z:
    org.andnav.osm.views.util.VersionedGestureDetector$OnGestureListener mListener -> a
    org.andnav.osm.views.util.VersionedGestureDetector newInstance(org.andnav.osm.views.util.VersionedGestureDetector$OnGestureListener) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
org.andnav.osm.views.util.VersionedGestureDetector$CupcakeDetector -> org.andnav.osm.c.c.aa:
    boolean onTouchEvent(android.view.MotionEvent) -> a
org.andnav.osm.views.util.VersionedGestureDetector$EclairDetector -> org.andnav.osm.c.c.ab:
    boolean onTouchEvent(android.view.MotionEvent) -> a
org.andnav.osm.views.util.VersionedGestureDetector$OnGestureListener -> org.andnav.osm.c.c.ac:
    void onDown(android.view.MotionEvent) -> a
    void onMove(android.view.MotionEvent,int,float,float,float,float) -> a
    void onUp$53fcfd4a() -> a
    void onDown2$1805384a(float,float,float,float) -> a
    void onUp2$53fcfd4a() -> b
org.andnav.osm.views.util.constants.OpenStreetMapViewConstants -> org.andnav.osm.c.c.a.a:
    int[] OpenSpaceUpperBoundArray -> n
org.geonames.FeatureClass -> org.a.a:
    org.geonames.FeatureClass A -> a
    org.geonames.FeatureClass H -> b
    org.geonames.FeatureClass L -> c
    org.geonames.FeatureClass P -> d
    org.geonames.FeatureClass R -> e
    org.geonames.FeatureClass S -> f
    org.geonames.FeatureClass T -> g
    org.geonames.FeatureClass U -> h
    org.geonames.FeatureClass V -> i
    org.geonames.FeatureClass[] ENUM$VALUES -> j
    org.geonames.FeatureClass fromValue(java.lang.String) -> a
    org.geonames.FeatureClass[] values() -> values
    org.geonames.FeatureClass valueOf(java.lang.String) -> valueOf
org.geonames.GeoCodeResult -> org.a.b:
    java.lang.String line1 -> a
    java.lang.String line2 -> b
    java.lang.String line3 -> c
    java.lang.String line4 -> d
    java.lang.String country -> e
    java.lang.String city -> f
    java.lang.String toString() -> toString
    java.lang.String getLine1() -> a
    void setLine1(java.lang.String) -> a
    java.lang.String getLine2() -> b
    void setLine2(java.lang.String) -> b
    java.lang.String getLine3() -> c
    void setLine3(java.lang.String) -> c
    java.lang.String getLine4() -> d
    void setLine4(java.lang.String) -> d
    java.lang.String getCountry() -> e
    void setCountry(java.lang.String) -> e
    java.lang.String getCity() -> f
    void setCity(java.lang.String) -> f
org.geonames.GeoNamesException -> org.a.c:
    java.lang.String message -> a
    java.lang.String getMessage() -> getMessage
org.geonames.InvalidParameterException -> org.a.d:
org.geonames.Style -> org.a.e:
    org.geonames.Style SHORT -> a
    org.geonames.Style MEDIUM -> b
    org.geonames.Style LONG -> c
    org.geonames.Style FULL -> d
    org.geonames.Style[] ENUM$VALUES -> e
    org.geonames.Style[] values() -> values
    org.geonames.Style valueOf(java.lang.String) -> valueOf
org.geonames.Toponym -> org.a.f:
    int geoNameId -> a
    java.lang.String name -> b
    java.lang.String alternateNames -> c
    java.lang.String countryCode -> d
    java.lang.String countryName -> e
    java.lang.Long population -> f
    java.lang.Integer elevation -> g
    org.geonames.FeatureClass featureClass -> h
    java.lang.String featureClassName -> i
    java.lang.String featureCode -> j
    java.lang.String featureCodeName -> k
    double latitude -> l
    double longitude -> m
    java.lang.String adminCode1 -> n
    java.lang.String adminName1 -> o
    java.lang.String adminCode2 -> p
    java.lang.String adminName2 -> q
    java.lang.String adminCode3 -> r
    java.lang.String adminCode4 -> s
    void setCountryCode(java.lang.String) -> a
    void setElevation(java.lang.Integer) -> a
    void setFeatureClass(org.geonames.FeatureClass) -> a
    void setFeatureCode(java.lang.String) -> b
    double getLatitude() -> a
    void setLatitude(double) -> a
    double getLongitude() -> b
    void setLongitude(double) -> b
    java.lang.String getName() -> c
    void setName(java.lang.String) -> c
    void setPopulation(java.lang.Long) -> a
    void setGeoNameId(int) -> a
    void setFeatureClassName(java.lang.String) -> d
    void setFeatureCodeName(java.lang.String) -> e
    java.lang.String getCountryName() -> d
    void setCountryName(java.lang.String) -> f
    java.lang.String toString() -> toString
    void setAdminCode1(java.lang.String) -> g
    void setAdminCode2(java.lang.String) -> h
    void setAdminCode3(java.lang.String) -> i
    void setAdminCode4(java.lang.String) -> j
    void setAdminName1(java.lang.String) -> k
    void setAdminName2(java.lang.String) -> l
org.geonames.ToponymSearchCriteria -> org.a.g:
    java.lang.String q -> a
    java.lang.String countryCode -> b
    java.lang.String continentCode -> c
    java.lang.String name -> d
    java.lang.String nameEquals -> e
    java.lang.String nameStartsWith -> f
    java.lang.String tag -> g
    java.lang.String language -> h
    org.geonames.Style style -> i
    org.geonames.FeatureClass featureClass -> j
    java.lang.String[] featureCodes -> k
    java.lang.String adminCode1 -> l
    java.lang.String adminCode2 -> m
    java.lang.String adminCode3 -> n
    java.lang.String adminCode4 -> o
    int maxRows -> p
    int startRow -> q
    java.lang.String getCountryCode() -> a
    void setCountryCode$552c4e01() -> b
    java.lang.String getContinentCode() -> c
    java.lang.String getNameEquals() -> d
    void setNameEquals$552c4e01() -> e
    java.lang.String[] getFeatureCodes() -> f
    void setFeatureCodes$3231c38a() -> g
    java.lang.String getLanguage() -> h
    void setLanguage$552c4e01() -> i
    int getMaxRows() -> j
    java.lang.String getName() -> k
    void setName$552c4e01() -> l
    java.lang.String getQ() -> m
    void setQ(java.lang.String) -> a
    int getStartRow() -> n
    void setStartRow$13462e() -> o
    org.geonames.Style getStyle() -> p
    void setStyle$4582c300() -> q
    java.lang.String getTag() -> r
    java.lang.String getNameStartsWith() -> s
    org.geonames.FeatureClass getFeatureClass() -> t
    java.lang.String getAdminCode1() -> u
    java.lang.String getAdminCode2() -> v
    java.lang.String getAdminCode3() -> w
    java.lang.String getAdminCode4() -> x
org.geonames.ToponymSearchResult -> org.a.h:
    java.util.List toponyms -> a
    int totalResultsCount -> b
    java.util.List getToponyms() -> a
    int getTotalResultsCount() -> b
    void setTotalResultsCount(int) -> a
org.geonames.WebService -> org.a.i:
    java.lang.String geoNamesServer -> c
    java.lang.String geoNamesServerFailover -> d
    long timeOfLastFailureMainServer -> e
    org.geonames.Style defaultStyle -> f
    int readTimeOut -> a
    int connectTimeOut -> b
    java.lang.String userName -> g
    java.lang.String token -> h
    java.lang.String addUserName(java.lang.String) -> c
    java.io.InputStream connect(java.lang.String) -> d
    java.lang.String webGetString(java.net.URL) -> a
    java.lang.String webGetString(java.lang.String) -> e
    org.geonames.Toponym getToponymFromElement(org.json.JSONObject) -> a
    java.lang.String getJSONStringValue(org.json.JSONObject,java.lang.String) -> a
    int getJSONIntValue(org.json.JSONObject,java.lang.String) -> b
    double getJSONDoubleValue(org.json.JSONObject,java.lang.String) -> c
    org.geonames.ToponymSearchResult search$5154afb2(java.lang.String) -> a
    java.util.List findNearbyWikipedia$225786a9(double,double,java.lang.String) -> a
    int astergdem(double,double) -> a
    void setUserName(java.lang.String) -> b
    org.geonames.GeoCodeResult reverseGeoCode(double,double) -> b
    org.geonames.GeoCodeResult extractGeoCodeResult(java.lang.String) -> f
org.geonames.WikipediaArticle -> org.a.j:
    java.lang.String language -> a
    java.lang.String title -> b
    java.lang.String summary -> c
    java.lang.String wikipediaUrl -> d
    java.lang.String feature -> e
    int population -> f
    int elevation -> g
    double latitude -> h
    double longitude -> i
    java.lang.String thumbnailImg -> j
    java.lang.String countryCode -> k
    double distance -> l
    void setElevation(int) -> a
    void setFeature(java.lang.String) -> a
    void setLanguage(java.lang.String) -> b
    double getLatitude() -> a
    void setLatitude(double) -> a
    double getLongitude() -> b
    void setLongitude(double) -> b
    void setPopulation(int) -> b
    java.lang.String getSummary() -> c
    void setSummary(java.lang.String) -> c
    java.lang.String getTitle() -> d
    void setTitle(java.lang.String) -> d
    java.lang.String getWikipediaUrl() -> e
    void setWikipediaUrl(java.lang.String) -> e
    void setThumbnailImg(java.lang.String) -> f
    void setCountryCode(java.lang.String) -> g
    void setDistance(double) -> c
org.openintents.filemanager.DirectoryContents -> org.openintents.filemanager.a:
    java.util.List listDir -> a
    java.util.List listFile -> b
    java.util.List listSdCard -> c
org.openintents.filemanager.DirectoryScanner -> org.openintents.filemanager.b:
    java.io.File currentDirectory -> c
    boolean cancel -> a
    android.content.Context context -> d
    android.os.Handler handler -> e
    java.lang.reflect.Method formatter_formatFileSize -> b
    void clearData() -> a
    void run() -> run
org.openintents.filemanager.FileManagerActivity -> org.openintents.filemanager.FileManagerActivity:
    int mState -> d
    java.util.ArrayList directoryEntries -> e
    java.util.List mListDir -> a
    java.util.List mListFile -> b
    java.util.List mListSdCard -> c
    java.io.File currentDirectory -> f
    java.lang.String mSdCardPath -> g
    java.lang.String mContextText -> h
    java.io.File mContextFile -> i
    int mStepsBack -> j
    android.widget.LinearLayout mDirectoryInput -> k
    android.widget.EditText mEditDirectory -> l
    android.widget.TextView mEmptyText -> m
    android.widget.TextView mPathText -> n
    org.openintents.filemanager.DirectoryScanner mDirectoryScanner -> o
    java.io.File mPreviousDirectory -> p
    android.os.Handler currentHandler -> q
    java.io.File mHaveShownErrorMessageForFile -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void showDirectoryInput(boolean) -> a
    void refreshDirectoryPanel() -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean isDirectoryInputVisible() -> b
    void browseTo(java.io.File) -> a
    void addAllElements(java.util.List,java.util.List) -> a
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void access$0(org.openintents.filemanager.FileManagerActivity,android.os.Message) -> a
org.openintents.filemanager.FileManagerActivity$1 -> org.openintents.filemanager.c:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.openintents.filemanager.IconifiedText -> org.openintents.filemanager.d:
    java.lang.String mText -> a
    java.lang.String mInfo -> b
    android.graphics.drawable.Drawable mIcon -> c
    boolean mSelectable -> d
    java.lang.String getText() -> a
    java.lang.String getInfo() -> b
    int compareTo(java.lang.Object) -> compareTo
org.openintents.filemanager.IconifiedTextListAdapter -> org.openintents.filemanager.e:
    android.content.Context mContext -> a
    java.lang.String lastFilter -> b
    org.openintents.filemanager.IconifiedTextListAdapter$IconifiedFilter mFilter -> c
    java.util.List mItems -> d
    java.util.List mOriginalItems -> e
    void setListItems(java.util.List,boolean) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.widget.Filter getFilter() -> getFilter
    void access$0(java.lang.String) -> a
    java.util.List access$1(org.openintents.filemanager.IconifiedTextListAdapter) -> a
    void access$2(org.openintents.filemanager.IconifiedTextListAdapter,java.util.List) -> a
org.openintents.filemanager.IconifiedTextListAdapter$IconifiedFilter -> org.openintents.filemanager.f:
    org.openintents.filemanager.IconifiedTextListAdapter this$0 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
    java.util.List synchronousFilter(java.lang.CharSequence) -> a
org.openintents.filemanager.IconifiedTextView -> org.openintents.filemanager.g:
    android.widget.TextView mText -> a
    android.widget.TextView mInfo -> b
    void setText(java.lang.String) -> a
    void setInfo(java.lang.String) -> b
org.openintents.filemanager.util.FileUtils -> org.openintents.filemanager.a.a:
    java.lang.String getExtension(java.lang.String) -> a
org.outlander.R -> org.outlander.a:
org.outlander.R$styleable -> org.outlander.b:
    int[] CirclePageIndicator -> a
    int[] SherlockActionBar -> b
    int[] SherlockActionMenuItemView -> c
    int[] SherlockActionMode -> d
    int[] SherlockMenuGroup -> e
    int[] SherlockMenuItem -> f
    int[] SherlockMenuView -> g
    int[] SherlockSpinner -> h
    int[] SherlockTheme -> i
    int[] TitlePageIndicator -> j
    int[] TouchListView -> k
    int[] ViewPagerIndicator -> l
org.outlander.activities.ImageViewerActivity -> org.outlander.activities.ImageViewerActivity:
    android.widget.ImageSwitcher iSwitcher -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View makeView() -> makeView
    android.graphics.Bitmap access$0$301bf965(int,boolean) -> a
org.outlander.activities.ImageViewerActivity$1 -> org.outlander.activities.a:
    org.outlander.activities.ImageViewerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.outlander.activities.ImageViewerActivity$ImageAdapter -> org.outlander.activities.b:
    android.content.Context ctx -> b
    org.outlander.activities.ImageViewerActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.outlander.activities.ImportPoiActivity -> org.outlander.activities.ImportPoiActivity:
    android.widget.EditText mFileName -> a
    android.widget.Spinner mSpinnerRouteCat -> b
    android.widget.Spinner mSpinnerPOICat -> c
    org.outlander.utils.DBManager mPoiManager -> e
    android.app.ProgressDialog dlgWait -> f
    java.util.concurrent.ExecutorService mThreadPool -> d
    void onCreate(android.os.Bundle) -> onCreate
    android.app.Dialog onCreateDialog(int,android.os.Bundle) -> onCreateDialog
    void doSelectFile() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void access$0(org.outlander.activities.ImportPoiActivity) -> a
    org.outlander.utils.DBManager access$1(org.outlander.activities.ImportPoiActivity) -> b
    android.app.ProgressDialog access$2(org.outlander.activities.ImportPoiActivity) -> c
org.outlander.activities.ImportPoiActivity$1 -> org.outlander.activities.c:
    org.outlander.activities.ImportPoiActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.ImportPoiActivity$2 -> org.outlander.activities.d:
    org.outlander.activities.ImportPoiActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.ImportPoiActivity$3 -> org.outlander.activities.e:
    org.outlander.activities.ImportPoiActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.ImportPoiActivity$4 -> org.outlander.activities.f:
    org.outlander.activities.ImportPoiActivity this$0 -> a
    void run() -> run
org.outlander.activities.ImportTrackActivity -> org.outlander.activities.ImportTrackActivity:
    android.widget.EditText mFileName -> a
    org.outlander.utils.DBManager mPoiManager -> c
    android.app.ProgressDialog dlgWait -> d
    java.util.concurrent.ExecutorService mThreadPool -> b
    void onCreate(android.os.Bundle) -> onCreate
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void doSelectFile() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void access$0(org.outlander.activities.ImportTrackActivity) -> a
    org.outlander.utils.DBManager access$1(org.outlander.activities.ImportTrackActivity) -> b
    android.app.ProgressDialog access$2(org.outlander.activities.ImportTrackActivity) -> c
org.outlander.activities.ImportTrackActivity$1 -> org.outlander.activities.g:
    org.outlander.activities.ImportTrackActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.ImportTrackActivity$2 -> org.outlander.activities.h:
    org.outlander.activities.ImportTrackActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.ImportTrackActivity$3 -> org.outlander.activities.i:
    org.outlander.activities.ImportTrackActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.ImportTrackActivity$4 -> org.outlander.activities.j:
    org.outlander.activities.ImportTrackActivity this$0 -> a
    void run() -> run
org.outlander.activities.MainActivity -> org.outlander.activities.MainActivity:
    int activeFragment -> q
    boolean fragmentVisible -> r
    android.os.PowerManager$WakeLock myWakeLock -> s
    boolean mFullScreen -> t
    android.hardware.SensorManager mSensorManager -> u
    int mScreenOrientation -> v
    org.outlander.utils.DBManager mPoiManager -> w
    android.content.SharedPreferences sharedPreferences -> x
    android.widget.FrameLayout leftPane -> y
    org.outlander.utils.ProximityHandler proximityHandler -> z
    org.outlander.activities.MainActivity$MyPagerAdapter mPagerAdapter -> A
    android.support.v4.view.ViewPager mViewPager -> B
    com.viewpagerindicator.TitlePageIndicator mIndicator -> C
    void onCreate(android.os.Bundle) -> onCreate
    void onAttachedToWindow() -> onAttachedToWindow
    void onDestroy() -> onDestroy
    void toggleOrientationSensor(boolean) -> b
    void toggleAccelerationSensor(boolean) -> c
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> c
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onLocationLost() -> g
    void onLocationChanged(android.location.Location) -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onSearchRequested() -> onSearchRequested
    void onNewIntent(android.content.Intent) -> onNewIntent
    void doSearchQuery(android.content.Intent) -> a
    void showSearchQuery(java.lang.String) -> a
    void showDialog(android.support.v4.app.DialogFragment) -> a
    void access$0(org.outlander.activities.MainActivity,java.lang.String) -> a
    com.viewpagerindicator.TitlePageIndicator access$1(org.outlander.activities.MainActivity) -> a
org.outlander.activities.MainActivity$1 -> org.outlander.activities.k:
    int lastPositionWorkaround -> b
    org.outlander.activities.MainActivity this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
org.outlander.activities.MainActivity$2 -> org.outlander.activities.l:
    org.outlander.activities.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.activities.MainActivity$3 -> org.outlander.activities.m:
    org.outlander.activities.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.activities.MainActivity$4 -> org.outlander.activities.n:
    org.outlander.activities.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.activities.MainActivity$5 -> org.outlander.activities.o:
    org.outlander.activities.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.activities.MainActivity$6 -> org.outlander.activities.p:
    org.outlander.activities.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.activities.MainActivity$MyPagerAdapter -> org.outlander.activities.q:
    java.lang.String[] titles -> b
    org.outlander.activities.MainActivity this$0 -> a
    int getCount() -> b
    android.support.v4.app.Fragment getItem(int) -> a
    java.lang.String getTitle(int) -> b
org.outlander.activities.MainActivity$ShowExternalPointTask -> org.outlander.activities.r:
    org.outlander.activities.MainActivity this$0 -> a
    java.lang.Integer doInBackground(android.content.Intent[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.outlander.activities.MainActivity$SwitchPageTask -> org.outlander.activities.s:
    org.outlander.activities.MainActivity this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.outlander.activities.MainPreferenceActivity -> org.outlander.activities.MainPreferenceActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void LoadUseTschekkoMaps(java.io.File) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.outlander.activities.PoiActivity -> org.outlander.activities.PoiActivity:
    android.widget.EditText mTitle -> a
    android.widget.EditText mLat -> b
    android.widget.EditText mLon -> c
    android.widget.EditText mDescr -> d
    android.widget.Spinner mSpinner -> e
    android.widget.CheckBox mHidden -> f
    org.outlander.dto.PoiPoint mPoiPoint -> g
    org.outlander.utils.DBManager mPoiManager -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void doSaveAction() -> a
    void access$0(org.outlander.activities.PoiActivity) -> a
org.outlander.activities.PoiActivity$1 -> org.outlander.activities.t:
    org.outlander.activities.PoiActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.PoiActivity$2 -> org.outlander.activities.u:
    org.outlander.activities.PoiActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.PoiCategoryActivity -> org.outlander.activities.PoiCategoryActivity:
    android.widget.EditText mTitle -> a
    android.widget.CheckBox mHidden -> b
    android.widget.ImageView mIcon -> c
    android.widget.EditText mMinZoom -> d
    org.outlander.dto.PoiCategory mPoiCategory -> e
    org.outlander.utils.DBManager mPoiManager -> f
    void onCreate(android.os.Bundle) -> onCreate
    void doSelectIcon() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void doSaveAction() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(org.outlander.activities.PoiCategoryActivity) -> a
org.outlander.activities.PoiCategoryActivity$1 -> org.outlander.activities.v:
    org.outlander.activities.PoiCategoryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.PoiCategoryActivity$2 -> org.outlander.activities.w:
    org.outlander.activities.PoiCategoryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.PoiCategoryActivity$3 -> org.outlander.activities.x:
    org.outlander.activities.PoiCategoryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.PoiCategoryListActivity -> org.outlander.activities.PoiCategoryListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.outlander.activities.PoiIconSetActivity -> org.outlander.activities.PoiIconSetActivity:
    int[] indx -> a
    android.widget.GridView mGridInt -> b
    void onCreate(android.os.Bundle) -> onCreate
    int[] access$0(org.outlander.activities.PoiIconSetActivity) -> a
org.outlander.activities.PoiIconSetActivity$1 -> org.outlander.activities.y:
    org.outlander.activities.PoiIconSetActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.outlander.activities.PoiIconSetActivity$AppsAdapter -> org.outlander.activities.z:
    org.outlander.activities.PoiIconSetActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
org.outlander.activities.PoiListActivity -> org.outlander.activities.PoiListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.outlander.activities.RouteActivity -> org.outlander.activities.RouteActivity:
    android.widget.EditText mName -> a
    android.widget.EditText mDescr -> b
    org.outlander.dto.Route route -> c
    org.outlander.utils.DBManager mPoiManager -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void doSaveAction() -> a
    void access$0(org.outlander.activities.RouteActivity) -> a
org.outlander.activities.RouteActivity$1 -> org.outlander.activities.aa:
    org.outlander.activities.RouteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.RouteActivity$2 -> org.outlander.activities.ab:
    org.outlander.activities.RouteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.RouteCategoryActivity -> org.outlander.activities.RouteCategoryActivity:
    android.widget.EditText mTitle -> a
    android.widget.EditText mDescr -> b
    org.outlander.dto.RouteCategory mRouteCategory -> c
    org.outlander.utils.DBManager mPoiManager -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void doSaveAction() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(org.outlander.activities.RouteCategoryActivity) -> a
org.outlander.activities.RouteCategoryActivity$1 -> org.outlander.activities.ac:
    org.outlander.activities.RouteCategoryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.RouteCategoryActivity$2 -> org.outlander.activities.ad:
    org.outlander.activities.RouteCategoryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.RouteCategoryListActivity -> org.outlander.activities.RouteCategoryListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.outlander.activities.RouteListActivity -> org.outlander.activities.RouteListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.outlander.activities.TrackActivity -> org.outlander.activities.TrackActivity:
    android.widget.EditText mName -> a
    android.widget.EditText mDescr -> b
    org.outlander.dto.Track mTrack -> c
    org.outlander.utils.DBManager mPoiManager -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void doSaveAction() -> a
    void access$0(org.outlander.activities.TrackActivity) -> a
org.outlander.activities.TrackActivity$1 -> org.outlander.activities.ae:
    org.outlander.activities.TrackActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.TrackActivity$2 -> org.outlander.activities.af:
    org.outlander.activities.TrackActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.TrackCategoryListActivity -> org.outlander.activities.TrackCategoryListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.outlander.activities.TrackListActivity -> org.outlander.activities.TrackListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.outlander.activities.ViewPagerIndicator -> org.outlander.activities.ViewPagerIndicator:
    android.widget.TextView mPrevious -> a
    android.widget.TextView mCurrent -> b
    android.widget.TextView mNext -> c
    int mCurItem -> d
    android.widget.LinearLayout mPreviousGroup -> e
    android.widget.LinearLayout mNextGroup -> f
    int mArrowPadding -> g
    int mSize -> h
    android.widget.ImageView mPrevArrow -> i
    android.widget.ImageView mNextArrow -> j
    int[] mFocusedTextColor -> k
    int[] mUnfocusedTextColor -> l
    org.outlander.activities.ViewPagerIndicator$OnClickListener mOnClickHandler -> m
    org.outlander.activities.ViewPagerIndicator$PageInfoProvider mPageInfoProvider -> n
    void setOnClickListener(org.outlander.activities.ViewPagerIndicator$OnClickListener) -> a
    int getCurrentPosition() -> a
    void setFocusedTextColor(int[]) -> a
    void init$3c4f466f(int,org.outlander.activities.ViewPagerIndicator$PageInfoProvider) -> a
    void setArrows(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    void addContent() -> b
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void updateArrows(int) -> c
    void updateColor(int) -> d
    void setText(int) -> e
    void onPageSelected(int) -> a
org.outlander.activities.ViewPagerIndicator$OnClickListener -> org.outlander.activities.ag:
    void onNextClicked$3c7ec8c3() -> a
    void onPreviousClicked$3c7ec8c3() -> b
org.outlander.activities.ViewPagerIndicator$OnCurrentClickedListener -> org.outlander.activities.ah:
    org.outlander.activities.ViewPagerIndicator this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.ViewPagerIndicator$OnNextClickedListener -> org.outlander.activities.ai:
    org.outlander.activities.ViewPagerIndicator this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.ViewPagerIndicator$OnPreviousClickedListener -> org.outlander.activities.aj:
    org.outlander.activities.ViewPagerIndicator this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.activities.ViewPagerIndicator$PageInfoProvider -> org.outlander.activities.ak:
org.outlander.chart.ChartViewFactory -> org.outlander.a.a:
    org.achartengine.GraphicalView getRouteChartView(android.content.Context,org.outlander.dto.Route) -> a
    org.achartengine.GraphicalView getTrackChartView(android.content.Context,org.outlander.dto.Track) -> a
    void setRenderer(org.achartengine.renderer.XYMultipleSeriesRenderer,int[],org.achartengine.chart.PointStyle[]) -> a
org.outlander.dto.MapMenuItemInfo -> org.outlander.b.a:
    java.lang.String name -> a
    java.lang.String Id -> b
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    java.lang.String getId() -> b
    void setId(java.lang.String) -> b
org.outlander.dto.PanoramioItem -> org.outlander.b.b:
    java.lang.String photoFileURL -> a
    android.graphics.Bitmap image -> b
    android.graphics.Bitmap oriImage -> c
    android.graphics.Bitmap downloadImage(java.lang.String) -> a
    android.graphics.Bitmap getImage() -> a
    android.graphics.Bitmap getOriginalImage() -> b
org.outlander.dto.PoiCategory -> org.outlander.b.c:
    int Id -> f
    java.lang.String Title -> a
    java.lang.String Descr -> b
    boolean Hidden -> c
    int IconId -> d
    int MinZoom -> e
    int getId() -> a
org.outlander.dto.PoiPoint -> org.outlander.b.d:
    int mId -> i
    java.lang.String mTitle -> a
    java.lang.String mDescr -> b
    org.andnav.osm.util.GeoPoint mGeoPoint -> c
    int mIconId -> d
    double mAlt -> e
    int mCategoryId -> f
    int mPointSourceId -> g
    boolean mHidden -> h
    int getId() -> a
    void setId(int) -> a
org.outlander.dto.ProximityTarget -> org.outlander.b.e:
    int Id -> h
    java.lang.String Title -> a
    java.lang.String Descr -> b
    org.andnav.osm.util.GeoPoint GeoPoint -> c
    int RouteId -> d
    int RouteOrder -> e
    int Distance -> f
    boolean enterOrLeave -> g
    int getId() -> a
org.outlander.dto.Route -> org.outlander.b.f:
    int Id -> f
    java.lang.String Name -> a
    java.lang.String Descr -> b
    boolean Show -> c
    int category -> d
    java.util.List routePoints -> g
    org.outlander.dto.PoiPoint lastRoutePoint -> e
    java.util.List getPoints() -> a
    java.util.List getGeoPoints() -> b
    void addRoutePoint$7dd47d51(java.lang.String,java.lang.String,org.andnav.osm.util.GeoPoint,int,double) -> a
    void addRoutePoint() -> c
    int getId() -> d
    void setId(int) -> a
org.outlander.dto.RouteCategory -> org.outlander.b.g:
    int Id -> f
    java.lang.String Title -> a
    java.lang.String Description -> b
    boolean Hidden -> c
    int IconId -> d
    int MinZoom -> e
    int getId() -> a
org.outlander.dto.Track -> org.outlander.b.h:
    int Id -> h
    java.lang.String Name -> a
    java.lang.String Descr -> b
    org.outlander.dto.TrackPoint LastTrackPoint -> c
    boolean Show -> d
    double AvgSpeed -> e
    double Distance -> f
    long Time -> g
    java.util.List trackpoints -> i
    java.util.List getPoints() -> a
    void AddTrackPoint() -> b
    int getId() -> c
    org.andnav.osm.util.GeoPoint getFirstGeoPoint() -> d
    org.outlander.dto.TrackPoint getFirstTrackPoint() -> e
    org.outlander.dto.TrackPoint getLastTrackPoint() -> f
    void setId(int) -> a
org.outlander.dto.TrackPoint -> org.outlander.b.i:
    double alt -> a
    double speed -> b
    java.util.Date date -> c
org.outlander.fragments.CategoryListFragment -> org.outlander.c.a:
    int mPositionChecked -> V
    int mPositionShown -> W
    net.londatiga.android.QuickAction mQuickAction -> X
    int selectedItemId -> Y
    android.view.View headerView -> Z
    android.widget.TextView mDescription -> aa
    boolean isInitialized -> ab
    int catType -> ac
    org.outlander.fragments.CategoryListFragment newInstance$59b782f5() -> B
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void restoreSavedState(android.os.Bundle) -> c
    void onActivityCreated(android.os.Bundle) -> d
    void onResume() -> p
    void onSaveInstanceState(android.os.Bundle) -> e
    void onListItemClick$42a3bb55(android.view.View,int,long) -> a
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void fillData() -> C
    void pageGetsActivated() -> D
    void pageGetsDeactivated() -> E
    int access$0(org.outlander.fragments.CategoryListFragment) -> a
    void access$1(org.outlander.fragments.CategoryListFragment,int) -> a
org.outlander.fragments.CategoryListFragment$1 -> org.outlander.c.b:
    android.view.LayoutInflater inflater -> a
    org.outlander.fragments.CategoryListFragment this$0 -> b
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
org.outlander.fragments.CategoryListFragment$2 -> org.outlander.c.c:
    org.outlander.fragments.CategoryListFragment this$0 -> a
    void onItemClick(int) -> a
org.outlander.fragments.CategoryListFragment$3 -> org.outlander.c.d:
    org.outlander.fragments.CategoryListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.CategoryListFragment$4 -> org.outlander.c.e:
    org.outlander.fragments.CategoryListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.CategoryListFragment$ViewHolder -> org.outlander.c.f:
    android.widget.TextView textView1 -> a
    android.widget.TextView textView2 -> b
    android.widget.TextView textView3 -> c
    android.widget.TextView groupHeader -> d
    android.widget.ImageView icon1 -> e
    android.widget.ImageView icon2 -> f
org.outlander.fragments.FragmentFactory -> org.outlander.c.g:
    int[] FRAGMENT_PAGES_TAB_PORTRAIT -> a
    int[] FRAGMENT_PAGES_TAB_TABLETT -> b
    int getFragmentTabPageIndexById(int) -> a
    android.support.v4.app.Fragment getFragmentTabPage(int) -> b
    android.support.v4.app.Fragment getFragmentPage(int) -> c
org.outlander.fragments.ImportDialogFragment -> org.outlander.c.h:
    android.widget.EditText mFileName -> V
    android.widget.Spinner mSpinnerRouteCat -> W
    android.widget.Spinner mSpinnerPOICat -> X
    java.util.concurrent.ExecutorService mThreadPool -> Y
    org.outlander.fragments.ImportDialogFragment newInstance$331f4a66() -> B
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    void doSelectFile() -> C
    void access$0(org.outlander.fragments.ImportDialogFragment) -> a
org.outlander.fragments.ImportDialogFragment$1 -> org.outlander.c.i:
    org.outlander.fragments.ImportDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.ImportDialogFragment$2 -> org.outlander.c.j:
    org.outlander.fragments.ImportDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.ImportDialogFragment$3 -> org.outlander.c.k:
    org.outlander.fragments.ImportDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.MapFragment -> org.outlander.c.l:
    org.andnav.osm.views.OpenStreetMapView mOsmStandardView -> g
    org.andnav.osm.views.OpenStreetMapView osmvMinimap -> h
    boolean mCompassEnabled -> V
    boolean mTiltEnabled -> W
    boolean mShowAddressOrCoords -> X
    android.widget.TextView bearingTextView -> Y
    android.widget.TextView currentPositionTextView -> Z
    android.widget.TextView screenCenterTextView -> aa
    android.widget.TextView mapInfoTextView -> ab
    android.widget.LinearLayout infoLayer -> a
    android.content.SharedPreferences sharedPreferences -> ac
    android.widget.Button buttonAutoFollow -> ad
    android.widget.Button buttonCompass -> ae
    android.widget.Button buttonTilt -> af
    android.widget.Button buttonMeasure -> ag
    android.widget.Button zoomIn -> ah
    android.widget.Button zoomOut -> ai
    boolean mDrivingDirectionUp -> aj
    boolean mNorthDirectionUp -> ak
    float mLastSpeed -> al
    float mLastBearing -> am
    org.outlander.overlays.MyLocationOverlay mMyLocationOverlay -> an
    org.outlander.overlays.PoiOverlay mPoiOverlay -> ao
    org.outlander.overlays.CurrentTrackOverlay mCurrentTrackOverlay -> ap
    org.outlander.overlays.TrackOverlay mTrackOverlay -> aq
    org.outlander.overlays.RouteOverlay mRouteOverlay -> ar
    org.outlander.overlays.GeoGridOverlay mGeoGridOverlay -> as
    net.londatiga.android.QuickAction quickActionStd -> at
    net.londatiga.android.QuickAction quickActionAddress -> au
    net.londatiga.android.QuickAction quickActionSelected -> av
    int mPoiIndex -> aw
    int mRouteIndex -> ax
    android.hardware.SensorEventListener orientationListener -> b
    android.hardware.SensorEventListener accellerationListener -> c
    android.location.LocationListener locationListener -> d
    org.outlander.views.BaseCompass compass -> e
    boolean justRun -> f
    org.outlander.fragments.MapFragment newInstance() -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroy() -> r
    void onPause() -> q
    void onResume() -> p
    void resume() -> C
    void pause() -> F
    android.location.LocationListener getLocationListener() -> G
    void updateInfoWindow(boolean,boolean,boolean) -> a
    android.hardware.SensorEventListener getAccelerationListener() -> H
    android.hardware.SensorEventListener getOrientationListener() -> I
    void setCompass(boolean,boolean) -> a
    void setTilt(boolean,boolean) -> b
    void setAutoFollow(boolean) -> c
    void setAutoFollow(boolean,boolean) -> c
    void setMeasureDistance(boolean,boolean) -> d
    org.andnav.osm.views.util.OpenStreetMapRendererInfo getRendererInfo$56914cc1(android.content.res.Resources,java.lang.String) -> a
    void initializeOverlays() -> J
    void setupQuickAction(net.londatiga.android.QuickAction,boolean) -> a
    void setLastKnownLocation() -> K
    org.andnav.osm.util.GeoPoint getTouchdownPoint() -> L
    void moveToTopoSearchResult$3231a983$47e3d773(org.andnav.osm.util.GeoPoint) -> a
    void showDialog(android.support.v4.app.DialogFragment) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> a
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    java.util.List getMapMenuItems() -> M
    void pageGetsActivated() -> D
    void pageGetsDeactivated() -> E
    void refresh() -> B
    java.lang.String formatAddress(android.location.Address) -> a
    void updateAddressField(android.location.Address) -> b
    void checkZoomButtons() -> N
    void setZoomLevel(int) -> c
    void access$0(org.outlander.fragments.MapFragment) -> a
    void access$1(org.outlander.fragments.MapFragment) -> b
    org.andnav.osm.views.OpenStreetMapView access$2(org.outlander.fragments.MapFragment) -> c
    void access$3$2b8c352c(org.outlander.fragments.MapFragment,boolean) -> a
    net.londatiga.android.QuickAction access$4(org.outlander.fragments.MapFragment) -> d
    void access$5(org.outlander.fragments.MapFragment) -> e
    boolean access$6(org.outlander.fragments.MapFragment) -> f
    void access$7(org.outlander.fragments.MapFragment,boolean) -> b
    void access$8(org.outlander.fragments.MapFragment) -> g
    void access$9(org.outlander.fragments.MapFragment,int) -> a
    void access$10$3b361800(org.outlander.fragments.MapFragment,boolean) -> c
    boolean access$11(org.outlander.fragments.MapFragment) -> h
    void access$12$3b361800(org.outlander.fragments.MapFragment,boolean) -> d
    boolean access$13(org.outlander.fragments.MapFragment) -> i
    void access$14$3b361800(org.outlander.fragments.MapFragment,boolean) -> e
    android.widget.TextView access$15(org.outlander.fragments.MapFragment) -> j
    void access$16(org.outlander.fragments.MapFragment,android.location.Location) -> a
    float access$17(org.outlander.fragments.MapFragment,float) -> a
    boolean access$18(org.outlander.fragments.MapFragment) -> k
    boolean access$19(org.outlander.fragments.MapFragment) -> l
    float access$20(org.outlander.fragments.MapFragment) -> m
    void access$21(org.outlander.fragments.MapFragment,int) -> b
    void access$22(org.outlander.fragments.MapFragment,int) -> c
    org.outlander.overlays.RouteOverlay access$23(org.outlander.fragments.MapFragment) -> n
    net.londatiga.android.QuickAction access$24(org.outlander.fragments.MapFragment) -> o
    org.outlander.overlays.PoiOverlay access$25(org.outlander.fragments.MapFragment) -> p
    void access$26(org.outlander.fragments.MapFragment,int) -> d
    int access$27(org.outlander.fragments.MapFragment) -> q
    void access$28(org.outlander.fragments.MapFragment,net.londatiga.android.QuickAction) -> a
    net.londatiga.android.QuickAction access$29(org.outlander.fragments.MapFragment) -> r
    void access$30(org.outlander.fragments.MapFragment,org.outlander.dto.PoiPoint) -> a
    org.andnav.osm.util.GeoPoint access$31(org.outlander.fragments.MapFragment) -> s
org.outlander.fragments.MapFragment$1 -> org.outlander.c.m:
    org.outlander.fragments.MapFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.MapFragment$10 -> org.outlander.c.n:
    org.outlander.fragments.MapFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.MapFragment$11 -> org.outlander.c.o:
    org.outlander.fragments.MapFragment this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.outlander.fragments.MapFragment$12 -> org.outlander.c.p:
    org.outlander.fragments.MapFragment this$0 -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
org.outlander.fragments.MapFragment$13 -> org.outlander.c.q:
    org.outlander.fragments.MapFragment this$0 -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
org.outlander.fragments.MapFragment$14 -> org.outlander.c.r:
    int iOrientation -> b
    org.outlander.fragments.MapFragment this$0 -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
org.outlander.fragments.MapFragment$15 -> org.outlander.c.s:
    org.outlander.fragments.MapFragment this$0 -> a
    boolean onItemTap(int,org.outlander.dto.PoiPoint) -> a
org.outlander.fragments.MapFragment$15$1 -> org.outlander.c.t:
    org.outlander.fragments.MapFragment$15 this$1 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.outlander.fragments.MapFragment$16 -> org.outlander.c.u:
    org.outlander.fragments.MapFragment this$0 -> a
    boolean onItemTap(int,org.outlander.dto.PoiPoint) -> a
org.outlander.fragments.MapFragment$16$1 -> org.outlander.c.v:
    org.outlander.fragments.MapFragment$16 this$1 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.outlander.fragments.MapFragment$17 -> org.outlander.c.w:
    org.outlander.fragments.MapFragment this$0 -> a
    void onItemClick(int) -> a
org.outlander.fragments.MapFragment$18 -> org.outlander.c.x:
    org.outlander.fragments.MapFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.MapFragment$19 -> org.outlander.c.y:
    org.outlander.fragments.MapFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.MapFragment$2 -> org.outlander.c.z:
    org.outlander.fragments.MapFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.MapFragment$20 -> org.outlander.c.aa:
    org.andnav.osm.util.GeoPoint gpoint -> a
    org.outlander.fragments.MapFragment this$0 -> b
    int val$x -> c
    int val$y -> d
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    org.outlander.fragments.MapFragment access$2(org.outlander.fragments.MapFragment$20) -> a
org.outlander.fragments.MapFragment$20$1 -> org.outlander.c.ab:
    org.outlander.fragments.MapFragment$20 this$1 -> a
    java.lang.String val$address -> b
    void onItemClick(int) -> a
org.outlander.fragments.MapFragment$3 -> org.outlander.c.ac:
    org.outlander.fragments.MapFragment this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.outlander.fragments.MapFragment$4 -> org.outlander.c.ad:
    org.outlander.fragments.MapFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.MapFragment$5 -> org.outlander.c.ae:
    org.outlander.fragments.MapFragment this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.outlander.fragments.MapFragment$6 -> org.outlander.c.af:
    org.outlander.fragments.MapFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.MapFragment$7 -> org.outlander.c.ag:
    org.outlander.fragments.MapFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.MapFragment$8 -> org.outlander.c.ah:
    org.outlander.fragments.MapFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.MapFragment$9 -> org.outlander.c.ai:
    org.outlander.fragments.MapFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.MapFragment$GetAddressTask -> org.outlander.c.aj:
    org.outlander.fragments.MapFragment this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.outlander.fragments.MapFragment$MyCallbackHandler -> org.outlander.c.ak:
    org.outlander.fragments.MapFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.outlander.fragments.NavigationFragment -> org.outlander.c.al:
    android.widget.TextView[] values -> a
    android.location.LocationListener locationListener -> b
    int coordFormt -> c
    int metric -> d
    int speed -> e
    android.widget.ToggleButton recordBtn -> f
    android.widget.ToggleButton naviBtn -> g
    org.outlander.fragments.NavigationFragment newInstance() -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void inflateField(android.view.View,int,int,int) -> a
    android.location.LocationListener getLocationListener() -> B
    void onLocationChange(android.location.Location) -> a
    void cleanTarget() -> C
    void updateTargetLocationField(org.andnav.osm.util.GeoPoint) -> a
    void updateCurrentLocationField(android.location.Location) -> b
    void updateSpeedField(android.location.Location) -> c
    void onResume() -> p
    void resume() -> F
    void pageGetsActivated() -> D
    void pageGetsDeactivated() -> E
    void access$0(org.outlander.fragments.NavigationFragment) -> a
    void access$1(org.outlander.fragments.NavigationFragment) -> b
    void access$2(org.outlander.fragments.NavigationFragment,android.location.Location) -> a
    void access$3(org.outlander.fragments.NavigationFragment,org.andnav.osm.util.GeoPoint) -> a
    void access$4(org.outlander.fragments.NavigationFragment,android.location.Location) -> b
org.outlander.fragments.NavigationFragment$1 -> org.outlander.c.am:
    org.outlander.fragments.NavigationFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.NavigationFragment$2 -> org.outlander.c.an:
    org.outlander.fragments.NavigationFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.NavigationFragment$3 -> org.outlander.c.ao:
    org.outlander.fragments.NavigationFragment this$0 -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
org.outlander.fragments.NavigationFragment$GetAddressTask -> org.outlander.c.ap:
    org.outlander.fragments.NavigationFragment this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.outlander.fragments.PageChangeNotifyer -> org.outlander.c.aq:
    void pageGetsActivated() -> D
    void pageGetsDeactivated() -> E
org.outlander.fragments.PagerFragment -> org.outlander.c.ar:
    org.outlander.fragments.PagerFragment$MyPagerAdapter mPagerAdapter -> b
    android.support.v4.view.ViewPager mViewPager -> c
    org.outlander.activities.ViewPagerIndicator mIndicator -> a
    org.outlander.fragments.PagerFragment newInstance() -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onPause() -> q
    android.support.v4.view.ViewPager access$0(org.outlander.fragments.PagerFragment) -> a
    org.outlander.fragments.PagerFragment$MyPagerAdapter access$1(org.outlander.fragments.PagerFragment) -> b
org.outlander.fragments.PagerFragment$1 -> org.outlander.c.as:
    org.outlander.fragments.PagerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.PagerFragment$2 -> org.outlander.c.at:
    org.outlander.fragments.PagerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.PagerFragment$MyPagerAdapter -> org.outlander.c.au:
    org.outlander.fragments.PagerFragment this$0 -> a
    int getCount() -> b
    android.support.v4.app.Fragment getItem(int) -> a
org.outlander.fragments.PagerFragment$OnIndicatorClickListener -> org.outlander.c.av:
    org.outlander.fragments.PagerFragment this$0 -> a
    void onNextClicked$3c7ec8c3() -> a
    void onPreviousClicked$3c7ec8c3() -> b
org.outlander.fragments.PoiDialogFragment -> org.outlander.c.aw:
    android.widget.EditText mTitle -> V
    android.widget.EditText mLat -> W
    android.widget.EditText mLon -> X
    android.widget.EditText mDescr -> Y
    android.widget.Spinner mSpinner -> Z
    android.widget.CheckBox mHidden -> aa
    org.outlander.dto.PoiPoint mPoiPoint -> ab
    org.outlander.fragments.PoiDialogFragment newInstance$7eea3ab0(int,java.lang.String,java.lang.String,double,double) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void access$0(org.outlander.fragments.PoiDialogFragment) -> a
org.outlander.fragments.PoiDialogFragment$1 -> org.outlander.c.ax:
    org.outlander.fragments.PoiDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.PoiDialogFragment$2 -> org.outlander.c.ay:
    org.outlander.fragments.PoiDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.PoiDialogFragment$3 -> org.outlander.c.az:
    org.outlander.fragments.PoiDialogFragment this$0 -> a
    org.outlander.dto.PoiPoint doInBackground(org.outlander.dto.PoiPoint[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.outlander.fragments.PoiListFragment -> org.outlander.c.ba:
    int mPositionChecked -> V
    int mPositionShown -> W
    net.londatiga.android.QuickAction mQuickAction -> X
    android.widget.TextView nrOfEntries -> Y
    boolean isInitialized -> Z
    long selectedItemId -> aa
    org.outlander.fragments.PoiListFragment newInstance() -> B
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void restoreSavedState(android.os.Bundle) -> c
    void onActivityCreated(android.os.Bundle) -> d
    void onResume() -> p
    void onSaveInstanceState(android.os.Bundle) -> e
    void onListItemClick$42a3bb55(android.view.View,int,long) -> a
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> a
    void fillData() -> F
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void pageGetsActivated() -> D
    void pageGetsDeactivated() -> E
    void refresh() -> C
    void access$0(org.outlander.fragments.PoiListFragment) -> a
    void access$1(org.outlander.fragments.PoiListFragment,int) -> a
org.outlander.fragments.PoiListFragment$1 -> org.outlander.c.bb:
    org.outlander.fragments.PoiListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.PoiListFragment$2 -> org.outlander.c.bc:
    org.outlander.fragments.PoiListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.PoiListFragment$3 -> org.outlander.c.bd:
    android.view.LayoutInflater inflater -> a
    long currentGroupId -> b
    org.outlander.fragments.PoiListFragment this$0 -> c
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    org.outlander.fragments.PoiListFragment access$0(org.outlander.fragments.PoiListFragment$3) -> a
org.outlander.fragments.PoiListFragment$3$1 -> org.outlander.c.be:
    int itemId -> a
    org.outlander.fragments.PoiListFragment$3 this$1 -> b
    android.widget.CheckBox val$cb -> c
    void onClick(android.view.View) -> onClick
org.outlander.fragments.PoiListFragment$4 -> org.outlander.c.bf:
    org.outlander.fragments.PoiListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.PoiListFragment$5 -> org.outlander.c.bg:
    org.outlander.fragments.PoiListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.PoiListFragment$6 -> org.outlander.c.bh:
    org.outlander.fragments.PoiListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.PoiListFragment$7 -> org.outlander.c.bi:
    org.outlander.fragments.PoiListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.PoiListFragment$8 -> org.outlander.c.bj:
    org.outlander.fragments.PoiListFragment this$0 -> a
    void onItemClick(int) -> a
org.outlander.fragments.PoiListFragment$ViewHolder -> org.outlander.c.bk:
    android.widget.TextView textView1 -> a
    android.widget.TextView textView2 -> b
    android.widget.TextView textView3 -> c
    android.widget.TextView groupHeader -> d
    android.widget.ImageView icon1 -> e
    android.widget.ImageView icon2 -> f
org.outlander.fragments.RouteDialogFragment -> org.outlander.c.bl:
    android.widget.EditText mName -> V
    android.widget.EditText mDescr -> W
    org.outlander.dto.Route route -> X
    org.outlander.fragments.RouteDialogFragment newInstance$3b2c5af(int,java.lang.String,java.lang.String) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void access$0(org.outlander.fragments.RouteDialogFragment) -> a
org.outlander.fragments.RouteDialogFragment$1 -> org.outlander.c.bm:
    org.outlander.fragments.RouteDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.RouteDialogFragment$2 -> org.outlander.c.bn:
    org.outlander.fragments.RouteDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.RouteListFragment -> org.outlander.c.bo:
    int mPositionChecked -> V
    int mPositionShown -> W
    net.londatiga.android.QuickAction mQuickAction -> Z
    int selectedItemId -> aa
    android.widget.TextView nrOfEntries -> ab
    boolean isInitialized -> ac
    java.util.concurrent.ExecutorService mThreadPool -> X
    boolean showDetails -> Y
    org.outlander.fragments.RouteListFragment$SimpleInvalidationHandler mHandler -> ad
    org.outlander.fragments.RouteListFragment newInstance() -> B
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void restoreSavedState(android.os.Bundle) -> c
    void onActivityCreated(android.os.Bundle) -> d
    void onResume() -> p
    void onSaveInstanceState(android.os.Bundle) -> e
    void onListItemClick$42a3bb55(android.view.View,int,long) -> a
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> a
    void resume() -> F
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void showHideAll(boolean) -> c
    void pageGetsActivated() -> D
    void pageGetsDeactivated() -> E
    void refresh() -> C
    void access$0(org.outlander.fragments.RouteListFragment) -> a
    void access$1(org.outlander.fragments.RouteListFragment,int) -> a
    org.outlander.fragments.RouteListFragment$SimpleInvalidationHandler access$2(org.outlander.fragments.RouteListFragment) -> b
org.outlander.fragments.RouteListFragment$1 -> org.outlander.c.bp:
    org.outlander.fragments.RouteListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.RouteListFragment$10 -> org.outlander.c.bq:
    org.outlander.fragments.RouteListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.RouteListFragment$11 -> org.outlander.c.br:
    org.outlander.fragments.RouteListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.RouteListFragment$2 -> org.outlander.c.bs:
    org.outlander.fragments.RouteListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.RouteListFragment$3 -> org.outlander.c.bt:
    org.outlander.fragments.RouteListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.RouteListFragment$4 -> org.outlander.c.bu:
    android.view.LayoutInflater inflater -> a
    long currentGroupId -> b
    org.outlander.fragments.RouteListFragment this$0 -> c
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    org.outlander.fragments.RouteListFragment access$0(org.outlander.fragments.RouteListFragment$4) -> a
org.outlander.fragments.RouteListFragment$4$1 -> org.outlander.c.bv:
    int itemId -> a
    org.outlander.fragments.RouteListFragment$4 this$1 -> b
    void onClick(android.view.View) -> onClick
org.outlander.fragments.RouteListFragment$5 -> org.outlander.c.bw:
    org.outlander.fragments.RouteListFragment this$0 -> a
    void onItemClick(int) -> a
org.outlander.fragments.RouteListFragment$6 -> org.outlander.c.bx:
    org.outlander.fragments.RouteListFragment this$0 -> a
    int val$routeid -> b
    void run() -> run
org.outlander.fragments.RouteListFragment$7 -> org.outlander.c.by:
    org.outlander.fragments.RouteListFragment this$0 -> a
    int val$routeid -> b
    void run() -> run
org.outlander.fragments.RouteListFragment$8 -> org.outlander.c.bz:
    org.outlander.fragments.RouteListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.RouteListFragment$9 -> org.outlander.c.ca:
    org.outlander.fragments.RouteListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.RouteListFragment$SimpleInvalidationHandler -> org.outlander.c.cb:
    org.outlander.fragments.RouteListFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.outlander.fragments.RouteListFragment$ViewHolder -> org.outlander.c.cc:
    android.widget.TextView textView1 -> a
    android.widget.TextView textView2 -> b
    android.widget.TextView textView3 -> c
    android.widget.TextView groupHeader -> d
    android.widget.ImageView icon1 -> e
    android.widget.ImageView icon2 -> f
org.outlander.fragments.RoutingDialogFragment -> org.outlander.c.cd:
    android.widget.RadioGroup radios -> V
    double lat -> W
    double lon -> X
    org.outlander.fragments.RoutingDialogFragment newInstance$18fb9b3(java.lang.String,java.lang.String,double,double) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void access$0(org.outlander.fragments.RoutingDialogFragment) -> a
org.outlander.fragments.RoutingDialogFragment$1 -> org.outlander.c.ce:
    org.outlander.fragments.RoutingDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.RoutingDialogFragment$2 -> org.outlander.c.cf:
    org.outlander.fragments.RoutingDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.TrackDialogFragment -> org.outlander.c.cg:
    android.widget.EditText mName -> V
    android.widget.EditText mDescr -> W
    org.outlander.dto.Track track -> X
    org.outlander.utils.DBManager mPoiManager -> Y
    org.outlander.fragments.TrackDialogFragment newInstance$38b228f1(int,java.lang.String,java.lang.String) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroy() -> r
    void access$0(org.outlander.fragments.TrackDialogFragment) -> a
org.outlander.fragments.TrackDialogFragment$1 -> org.outlander.c.ch:
    org.outlander.fragments.TrackDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.TrackDialogFragment$2 -> org.outlander.c.ci:
    org.outlander.fragments.TrackDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.TrackListFragment -> org.outlander.c.cj:
    int mPositionChecked -> V
    int mPositionShown -> W
    net.londatiga.android.QuickAction mQuickAction -> Y
    int selectedItemId -> Z
    android.widget.TextView nrOfEntries -> aa
    boolean isInitialized -> ab
    java.util.concurrent.ExecutorService mThreadPool -> X
    org.outlander.fragments.TrackListFragment$SimpleInvalidationHandler mHandler -> ac
    org.outlander.fragments.TrackListFragment newInstance() -> B
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void restoreSavedState(android.os.Bundle) -> c
    void onActivityCreated(android.os.Bundle) -> d
    void onResume() -> p
    void onSaveInstanceState(android.os.Bundle) -> e
    void onListItemClick$42a3bb55(android.view.View,int,long) -> a
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> a
    void fillData() -> C
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void pageGetsActivated() -> D
    void pageGetsDeactivated() -> E
    void access$0$5e711fd0(org.outlander.fragments.TrackListFragment) -> a
    void access$1(org.outlander.fragments.TrackListFragment,int) -> a
    int access$2(org.outlander.fragments.TrackListFragment) -> b
    org.outlander.fragments.TrackListFragment$SimpleInvalidationHandler access$3(org.outlander.fragments.TrackListFragment) -> c
org.outlander.fragments.TrackListFragment$1 -> org.outlander.c.ck:
    org.outlander.fragments.TrackListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.TrackListFragment$2 -> org.outlander.c.cl:
    org.outlander.fragments.TrackListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.fragments.TrackListFragment$3 -> org.outlander.c.cm:
    android.view.LayoutInflater inflater -> a
    long currentGroupId -> b
    org.outlander.fragments.TrackListFragment this$0 -> c
    boolean val$useImperialUnits -> d
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    org.outlander.fragments.TrackListFragment access$0(org.outlander.fragments.TrackListFragment$3) -> a
org.outlander.fragments.TrackListFragment$3$1 -> org.outlander.c.cn:
    int itemId -> a
    org.outlander.fragments.TrackListFragment$3 this$1 -> b
    android.widget.CheckBox val$cb -> c
    void onClick(android.view.View) -> onClick
org.outlander.fragments.TrackListFragment$4 -> org.outlander.c.co:
    org.outlander.fragments.TrackListFragment this$0 -> a
    void onItemClick(int) -> a
org.outlander.fragments.TrackListFragment$5 -> org.outlander.c.cp:
    org.outlander.fragments.TrackListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.TrackListFragment$6 -> org.outlander.c.cq:
    org.outlander.fragments.TrackListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.outlander.fragments.TrackListFragment$7 -> org.outlander.c.cr:
    org.outlander.fragments.TrackListFragment this$0 -> a
    int val$trackid -> b
    void run() -> run
org.outlander.fragments.TrackListFragment$8 -> org.outlander.c.cs:
    org.outlander.fragments.TrackListFragment this$0 -> a
    int val$trackid -> b
    void run() -> run
org.outlander.fragments.TrackListFragment$SimpleInvalidationHandler -> org.outlander.c.ct:
    org.outlander.fragments.TrackListFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.outlander.fragments.TrackListFragment$ViewHolder -> org.outlander.c.cu:
    android.widget.TextView textView1 -> a
    android.widget.TextView textView2 -> b
    android.widget.TextView textView3 -> c
    android.widget.TextView groupHeader -> d
    android.widget.ImageView icon1 -> e
    android.widget.ImageView icon2 -> f
org.outlander.instruments.artificialhorizon.ArtificialHorizonActivity -> org.outlander.instruments.artificialhorizon.ArtificialHorizonActivity:
    float[] aValues -> a
    float[] mValues -> b
    org.outlander.views.ArtificialHorizontView artificialhorizonView -> c
    android.hardware.SensorManager sensorManager -> d
    android.hardware.SensorEventListener sensorEventListener -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void updateOrientation(float[]) -> a
    void onResume() -> onResume
    void onStop() -> onStop
    float[] access$0(org.outlander.instruments.artificialhorizon.ArtificialHorizonActivity) -> a
    void access$1(org.outlander.instruments.artificialhorizon.ArtificialHorizonActivity,float[]) -> a
org.outlander.instruments.artificialhorizon.ArtificialHorizonActivity$1 -> org.outlander.instruments.artificialhorizon.a:
    org.outlander.instruments.artificialhorizon.ArtificialHorizonActivity this$0 -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
org.outlander.instruments.artificialhorizon.HorizontFragment -> org.outlander.instruments.artificialhorizon.b:
    android.content.res.Resources res -> d
    float[] aValues -> e
    float[] mValues -> f
    org.outlander.views.ArtificialHorizontView artificialhorizontView -> g
    android.view.View navigationView -> h
    java.lang.Double dstLatitude -> V
    java.lang.Double dstLongitude -> W
    java.lang.Double targetHeading -> X
    java.lang.Double northHeading -> Y
    java.lang.String title -> Z
    java.lang.String name -> aa
    android.widget.TextView navType -> ab
    android.widget.TextView navAccuracy -> ac
    android.widget.TextView navSatellites -> ad
    android.widget.TextView navLocation -> ae
    android.widget.TextView distanceView -> af
    android.widget.TextView headingView -> ag
    android.widget.TextView destinationView -> ah
    org.outlander.views.LargeCompass compassView -> ai
    android.hardware.SensorEventListener orientationListener -> a
    android.hardware.SensorEventListener accellerationListener -> b
    android.location.LocationListener locationListener -> c
    android.content.SharedPreferences sharedPreferences -> aj
    org.outlander.instruments.artificialhorizon.HorizontFragment newInstance() -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.view.View getView() -> o
    void onResume() -> p
    void onPause() -> q
    void resume() -> B
    void pause() -> C
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> a
    void onLocationChanged(android.location.Location) -> a
    void updateAccelerationValues(float[]) -> a
    void updateMagneticValues(float[]) -> b
    android.hardware.SensorEventListener getAccelerationListener() -> F
    android.hardware.SensorEventListener getOrientationListener() -> G
    android.location.LocationListener getLocationListener() -> H
    void pageGetsActivated() -> D
    void pageGetsDeactivated() -> E
org.outlander.instruments.artificialhorizon.HorizontFragment$1 -> org.outlander.instruments.artificialhorizon.c:
    org.outlander.instruments.artificialhorizon.HorizontFragment this$0 -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
org.outlander.instruments.artificialhorizon.HorizontFragment$2 -> org.outlander.instruments.artificialhorizon.d:
    int iOrientation -> b
    org.outlander.instruments.artificialhorizon.HorizontFragment this$0 -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
org.outlander.instruments.artificialhorizon.HorizontFragment$3 -> org.outlander.instruments.artificialhorizon.e:
    org.outlander.instruments.artificialhorizon.HorizontFragment this$0 -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
org.outlander.instruments.compass.CompassActivity -> org.outlander.instruments.compass.CompassActivity:
    android.content.res.Resources res -> a
    android.app.Activity activity -> b
    android.os.PowerManager pm -> c
    java.lang.Double dstLatitude -> d
    java.lang.Double dstLongitude -> e
    java.lang.Double cacheHeading -> f
    java.lang.Double northHeading -> g
    java.lang.String title -> h
    java.lang.String name -> i
    android.widget.TextView navType -> j
    android.widget.TextView navAccuracy -> k
    android.widget.TextView navSatellites -> l
    android.widget.TextView navLocation -> m
    android.widget.TextView distanceView -> n
    android.widget.TextView headingView -> o
    org.outlander.views.LargeCompass compassView -> p
    org.outlander.instruments.compass.CompassActivity$updaterThread updater -> q
    android.os.Handler updaterHandler -> r
    int coordFormt -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    org.outlander.views.LargeCompass access$0(org.outlander.instruments.compass.CompassActivity) -> a
    java.lang.Double access$1(org.outlander.instruments.compass.CompassActivity) -> b
    java.lang.Double access$2(org.outlander.instruments.compass.CompassActivity) -> c
org.outlander.instruments.compass.CompassActivity$1 -> org.outlander.instruments.compass.a:
    org.outlander.instruments.compass.CompassActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.outlander.instruments.compass.CompassActivity$updaterThread -> org.outlander.instruments.compass.b:
    android.os.Handler handler -> b
    org.outlander.instruments.compass.CompassActivity this$0 -> a
    void run() -> run
org.outlander.instruments.compass.CompassFragment -> org.outlander.instruments.compass.c:
    java.lang.Double northHeading -> f
    android.widget.TextView navType -> g
    android.widget.TextView navAccuracy -> h
    android.widget.TextView navSatellites -> V
    android.widget.TextView navLocation -> W
    android.widget.TextView distanceView -> X
    android.widget.TextView headingView -> Y
    android.widget.TextView destinationView -> Z
    org.outlander.views.LargeCompass compassView -> aa
    java.lang.Double targetHeading -> a
    android.view.View navigationView -> ab
    int coordFormt -> b
    int metric -> c
    android.hardware.SensorEventListener orientationListener -> d
    android.location.LocationListener locationListener -> e
    org.outlander.instruments.compass.CompassFragment newInstance() -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.view.View getView() -> o
    void onPause() -> q
    void onResume() -> p
    void pause() -> B
    void resume() -> C
    void onLocationChange(android.location.Location) -> a
    void onOrientationSensorChanged(android.hardware.SensorEvent,int) -> a
    android.location.LocationListener getLocationListener() -> F
    android.hardware.SensorEventListener getOrientationListener() -> G
    void pageGetsActivated() -> D
    void pageGetsDeactivated() -> E
org.outlander.instruments.compass.CompassFragment$1 -> org.outlander.instruments.compass.d:
    org.outlander.instruments.compass.CompassFragment this$0 -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
org.outlander.instruments.compass.CompassFragment$2 -> org.outlander.instruments.compass.e:
    int iOrientation -> b
    org.outlander.instruments.compass.CompassFragment this$0 -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
org.outlander.io.ImportTask -> org.outlander.d.a:
    org.outlander.utils.DBManager mPoiManager -> a
    java.lang.String filename -> b
    int poiCategoryId -> c
    int routeCategoryId -> d
    java.lang.Void doInBackground$10299ca() -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.outlander.io.XML.GpxParser -> org.outlander.d.a.a:
    java.lang.StringBuilder builder -> a
    org.outlander.utils.DBManager mPoiManager -> b
    org.outlander.dto.Track mTrack -> c
    org.outlander.dto.Route route -> d
    org.outlander.dto.PoiPoint point -> e
    int poiCategoryId -> f
    int routeCategoryId -> g
    org.outlander.io.XML.ParserResults results -> h
    boolean overwrite -> i
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
org.outlander.io.XML.KmlPoiParser -> org.outlander.d.a.b:
    java.lang.StringBuilder builder -> a
    org.outlander.utils.DBManager mPoiManager -> b
    org.outlander.dto.PoiPoint mPoiPoint -> c
    int mCategoryId -> d
    java.lang.String[] mStrArray -> e
    boolean mItIsPoint -> f
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
org.outlander.io.XML.KmlTrackParser -> org.outlander.d.a.c:
    java.lang.StringBuilder builder -> a
    org.outlander.utils.DBManager mPoiManager -> b
    org.outlander.dto.Track mTrack -> c
    java.lang.String[] mStrArray -> d
    java.lang.String[] mStrArray2 -> e
    boolean mItIsTrack -> f
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
org.outlander.io.XML.ParserResults -> org.outlander.d.a.d:
    int trackCounter -> a
    int routeCounter -> b
    int pointCounter -> c
org.outlander.io.XML.PredefMapsParser -> org.outlander.d.a.e:
    org.andnav.osm.views.util.OpenStreetMapRendererInfo mRendererInfo -> a
    java.lang.String mMapId -> b
    android.preference.PreferenceGroup mPrefMapsgroup -> c
    android.content.Context mPrefActivity -> d
    android.content.SharedPreferences mSharedPreferences -> e
    java.util.List menuItemInfos -> f
    java.util.List getMapMenuItemInfoList() -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
org.outlander.io.XML.SimpleXML -> org.outlander.d.a.f:
    org.outlander.io.XML.SimpleXML fparent -> a
    java.lang.String ftext -> b
    java.lang.String fname -> c
    java.util.Vector fchild -> d
    java.util.HashMap fattrs -> e
    void setText(java.lang.String) -> a
    void setAttr(java.lang.String,java.lang.String) -> a
    org.outlander.io.XML.SimpleXML createChild(java.lang.String) -> b
    void serializeNode(org.xmlpull.v1.XmlSerializer) -> a
    java.lang.String saveXml(org.outlander.io.XML.SimpleXML) -> a
org.outlander.overlays.BasePointOverlay -> org.outlander.e.a:
    android.content.Context mCtx -> a
    org.outlander.utils.NinePatchDrawable mButton -> g
    int mTapIndex -> h
    org.andnav.osm.util.GeoPoint mLastMapCenter -> b
    int mLastZoom -> c
    org.outlander.overlays.BasePointOverlay$OnItemTapListener mOnItemTapListener -> d
    java.util.List mItemList -> e
    java.util.HashMap mBtnMap -> f
    int getTapIndex() -> a
    void setTapIndex(int) -> a
    void setItemList(java.util.List) -> a
    void clear() -> b
    void requestPointsForArea(double,double) -> a
    void zoomLevelChanged() -> c
    void onDraw(android.graphics.Canvas,org.andnav.osm.views.OpenStreetMapView) -> b
    void onDrawItem(android.graphics.Canvas,int,android.graphics.Point) -> a
    org.outlander.dto.PoiPoint getPoiPoint(int) -> b
    int getMarkerAtPoint$1b6f7a3e(int,int) -> a
    boolean onSingleTapUp(android.view.MotionEvent,org.andnav.osm.views.OpenStreetMapView) -> a
    boolean onLongPress(android.view.MotionEvent,org.andnav.osm.views.OpenStreetMapView) -> b
    void internalPointTapped(org.outlander.overlays.BasePointOverlay$PointInfo) -> a
    void internalPointLongPressed(org.outlander.overlays.BasePointOverlay$PointInfo) -> b
org.outlander.overlays.BasePointOverlay$MarkerInfo -> org.outlander.e.b:
    android.graphics.drawable.Drawable marker -> a
    int mMarkerWidth -> b
    int mMarkerHeight -> c
    android.graphics.Point mMarkerHotSpot -> d
    org.outlander.overlays.BasePointOverlay this$0 -> e
org.outlander.overlays.BasePointOverlay$OnItemTapListener -> org.outlander.e.c:
    boolean onItemTap(int,org.outlander.dto.PoiPoint) -> a
org.outlander.overlays.BasePointOverlay$PointInfo -> org.outlander.e.d:
    org.outlander.dto.PoiPoint poiPoint -> a
    android.graphics.Rect curMarkerBounds -> b
    int hotspotType -> c
    int routeId -> d
    org.outlander.overlays.BasePointOverlay this$0 -> e
org.outlander.overlays.BasePointOverlay$TextWriter -> org.outlander.e.e:
    java.lang.String mText -> a
    int mMaxWidth -> b
    int mMaxHeight -> c
    int mTextSize -> d
    android.graphics.Paint mPaint -> e
    java.lang.String[] mLines -> f
    void Draw(android.graphics.Canvas,int,int) -> a
    int getWidth() -> a
    int getHeight() -> b
org.outlander.overlays.CurrentTrackOverlay -> org.outlander.e.f:
    android.graphics.Paint mPaint -> b
    org.andnav.osm.views.OpenStreetMapView$OpenStreetMapViewProjection mBasePj -> c
    int mLastZoom -> d
    android.graphics.Path mPath -> e
    org.outlander.dto.Track mTrack -> f
    android.graphics.Point mBaseCoords -> g
    org.andnav.osm.util.GeoPoint mBaseLocation -> h
    org.outlander.overlays.CurrentTrackOverlay$TrackThread mThread -> i
    boolean mThreadRunned -> j
    java.util.concurrent.ExecutorService mThreadExecutor -> a
    org.andnav.osm.views.OpenStreetMapView mOsmv -> k
    android.content.Context mContext -> l
    boolean mIsBound -> m
    void onDraw(android.graphics.Canvas,org.andnav.osm.views.OpenStreetMapView) -> b
    void access$0(org.outlander.overlays.CurrentTrackOverlay,android.graphics.Path) -> a
    org.outlander.dto.Track access$1(org.outlander.overlays.CurrentTrackOverlay) -> a
    void access$2(org.outlander.overlays.CurrentTrackOverlay,org.outlander.dto.Track) -> a
    android.content.Context access$3(org.outlander.overlays.CurrentTrackOverlay) -> b
    org.andnav.osm.views.OpenStreetMapView access$4(org.outlander.overlays.CurrentTrackOverlay) -> c
    void access$5(org.outlander.overlays.CurrentTrackOverlay,org.andnav.osm.views.OpenStreetMapView$OpenStreetMapViewProjection) -> a
    org.andnav.osm.views.OpenStreetMapView$OpenStreetMapViewProjection access$6(org.outlander.overlays.CurrentTrackOverlay) -> d
    android.graphics.Point access$7(org.outlander.overlays.CurrentTrackOverlay) -> e
    org.andnav.osm.util.GeoPoint access$8(org.outlander.overlays.CurrentTrackOverlay) -> f
    void access$9$6f406916(org.outlander.overlays.CurrentTrackOverlay) -> g
org.outlander.overlays.CurrentTrackOverlay$TrackThread -> org.outlander.e.g:
    org.outlander.overlays.CurrentTrackOverlay this$0 -> a
    void run() -> run
org.outlander.overlays.ExternalPointOverlay -> org.outlander.e.h:
    void setLocation(double,double,java.lang.String,java.lang.String) -> a
    void clear() -> b
org.outlander.overlays.GeoGridOverlay -> org.outlander.e.i:
    android.graphics.Paint mPaint -> a
    boolean mStopDraw -> b
    int gridDegrees -> c
    void setStopDraw(boolean) -> a
    void onDraw(android.graphics.Canvas,org.andnav.osm.views.OpenStreetMapView) -> b
org.outlander.overlays.MyLocationOverlay -> org.outlander.e.j:
    android.graphics.Paint mPaint -> a
    android.graphics.Bitmap mPerson -> b
    android.graphics.drawable.Drawable mArrow -> d
    android.graphics.Point person_hotspot -> c
    android.content.Context mCtx -> e
    int mPrefAccuracy -> f
    int METER_IN_PIXEL -> g
    android.graphics.Paint mPaintAccuracyFill -> h
    android.graphics.Paint mPaintAccuracyBorder -> i
    android.graphics.Paint mDistanceLinePaint -> j
    android.graphics.Paint mTargetLinePaint -> k
    org.outlander.utils.NinePatchDrawable mButton -> l
    boolean mNeedCrosshair -> m
    android.graphics.Paint mPaintCross -> n
    boolean getPersonIcon() -> a
    void onDraw(android.graphics.Canvas,org.andnav.osm.views.OpenStreetMapView) -> b
    void drawDistanceLines(android.graphics.Canvas,boolean,org.andnav.osm.views.OpenStreetMapView$OpenStreetMapViewProjection,android.graphics.Point) -> a
    void drawCrossHair(android.graphics.Canvas,org.andnav.osm.views.OpenStreetMapView) -> c
org.outlander.overlays.PoiOverlay -> org.outlander.e.k:
    org.outlander.overlays.PoiOverlay$PoiListThread mThread -> h
    boolean mCanUpdateList -> i
    android.content.SharedPreferences sharedPreferences -> g
    void requestPointsForArea(double,double) -> a
org.outlander.overlays.PoiOverlay$PoiListThread -> org.outlander.e.l:
    double mdeltaX -> b
    double mdeltaY -> c
    org.outlander.overlays.PoiOverlay this$0 -> a
    void setParams(double,double) -> a
    void run() -> run
org.outlander.overlays.RouteOverlay -> org.outlander.e.m:
    int[] markerArray -> g
    android.graphics.Paint mPaint -> j
    java.util.List mPathList -> k
    java.util.List routeList -> l
    android.graphics.Point mBaseCoords -> m
    org.andnav.osm.util.GeoPoint mBaseLocation -> n
    org.outlander.overlays.RouteOverlay$RouteThread mThread -> o
    boolean mThreadRunned -> p
    org.andnav.osm.views.OpenStreetMapView mOsmv -> q
    boolean mStopDraw -> r
    java.util.HashMap mItemLists -> h
    java.util.concurrent.ExecutorService mThreadExecutor -> i
    int mRouteIx -> s
    org.outlander.dto.Route getSelectedRoute() -> d
    void setSelectRouteById(int) -> c
    void setStopDraw(boolean) -> a
    void refreshRoute() -> e
    void zoomLevelChanged() -> c
    void onDraw(android.graphics.Canvas,org.andnav.osm.views.OpenStreetMapView) -> b
    void internalPointTapped(org.outlander.overlays.BasePointOverlay$PointInfo) -> a
    void internalPointLongPressed(org.outlander.overlays.BasePointOverlay$PointInfo) -> b
    void buildPointList() -> f
    int getMarkerAtPoint$1b6f7a3e(int,int) -> a
    void recalcPath() -> g
    void access$0(org.outlander.overlays.RouteOverlay,java.util.List) -> a
    java.util.List access$1(org.outlander.overlays.RouteOverlay) -> a
    void access$2$4a60e599(org.outlander.overlays.RouteOverlay) -> b
    void access$3$4a60e599(org.outlander.overlays.RouteOverlay) -> c
    void access$4(org.outlander.overlays.RouteOverlay) -> d
    void access$5(org.outlander.overlays.RouteOverlay) -> e
    org.andnav.osm.views.OpenStreetMapView access$6(org.outlander.overlays.RouteOverlay) -> f
org.outlander.overlays.RouteOverlay$RouteThread -> org.outlander.e.n:
    org.outlander.overlays.RouteOverlay this$0 -> a
    void run() -> run
org.outlander.overlays.SearchResultOverlay -> org.outlander.e.o:
    java.util.List mLocations -> g
    void setLocations(java.util.List) -> b
    void clear() -> b
org.outlander.overlays.TrackOverlay -> org.outlander.e.p:
    android.graphics.Paint mPaint -> b
    int mLastZoom -> c
    android.graphics.Path mPath -> d
    org.outlander.dto.Track mTrack -> e
    android.graphics.Point mBaseCoords -> f
    org.andnav.osm.util.GeoPoint mBaseLocation -> g
    org.outlander.overlays.TrackOverlay$TrackThread mThread -> h
    boolean mThreadRunning -> i
    org.andnav.osm.views.OpenStreetMapView mOsmv -> j
    boolean mStopDraw -> k
    java.util.concurrent.ExecutorService mThreadExecutor -> a
    void recalcPath() -> d
    void setStopDraw(boolean) -> a
    void refreshTrack() -> a
    org.outlander.dto.Track getTrack() -> b
    void onDraw(android.graphics.Canvas,org.andnav.osm.views.OpenStreetMapView) -> b
    void clearTrack() -> c
    void access$0$2f19c549(org.outlander.overlays.TrackOverlay) -> a
    org.outlander.dto.Track access$1(org.outlander.overlays.TrackOverlay) -> b
    void access$2(org.outlander.overlays.TrackOverlay,org.outlander.dto.Track) -> a
    void access$3$3877c625(org.outlander.overlays.TrackOverlay) -> c
    void access$4$3877c625(org.outlander.overlays.TrackOverlay) -> d
    void access$5(org.outlander.overlays.TrackOverlay) -> e
    org.andnav.osm.views.OpenStreetMapView access$6(org.outlander.overlays.TrackOverlay) -> f
org.outlander.overlays.TrackOverlay$TrackThread -> org.outlander.e.q:
    org.outlander.overlays.TrackOverlay this$0 -> a
    void run() -> run
org.outlander.search.SearchResultActivity -> org.outlander.search.SearchResultActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void doSearchQuery(android.content.Intent) -> a
org.outlander.search.SearchSuggestionsProvider -> org.outlander.search.SearchSuggestionsProvider:
org.outlander.search.ToponymSearchResultActivity -> org.outlander.search.ToponymSearchResultActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.outlander.search.ToponymSearchResultFragment -> org.outlander.search.a:
    int mPositionChecked -> V
    int mPositionShown -> W
    net.londatiga.android.QuickAction mQuickAction -> X
    boolean isInitialized -> Y
    org.geonames.ToponymSearchResult searchResult -> Z
    java.lang.String searchString -> aa
    android.app.ProgressDialog dlgWait -> ab
    android.widget.TextView nrOfEntries -> ac
    org.outlander.search.ToponymSearchResultFragment newInstance$1fe170d() -> B
    org.geonames.ToponymSearchResult searchForLocations(java.lang.String) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void restoreSavedState(android.os.Bundle) -> c
    void onActivityCreated(android.os.Bundle) -> d
    void onResume() -> p
    void onSaveInstanceState(android.os.Bundle) -> e
    void onListItemClick$42a3bb55(android.view.View,int,long) -> a
    void resume() -> C
    void showTopoResult(org.geonames.Toponym) -> a
    void pageGetsActivated() -> D
    void pageGetsDeactivated() -> E
    org.geonames.ToponymSearchResult access$0(org.outlander.search.ToponymSearchResultFragment,java.lang.String) -> a
    void access$1(org.outlander.search.ToponymSearchResultFragment,org.geonames.ToponymSearchResult) -> a
    org.geonames.ToponymSearchResult access$2(org.outlander.search.ToponymSearchResultFragment) -> a
    android.widget.TextView access$3(org.outlander.search.ToponymSearchResultFragment) -> b
    void access$4(org.outlander.search.ToponymSearchResultFragment,org.geonames.Toponym) -> a
    android.app.ProgressDialog access$5(org.outlander.search.ToponymSearchResultFragment) -> c
    void access$6(org.outlander.search.ToponymSearchResultFragment,int) -> a
org.outlander.search.ToponymSearchResultFragment$1 -> org.outlander.search.b:
    org.outlander.search.ToponymSearchResultFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.search.ToponymSearchResultFragment$2 -> org.outlander.search.c:
    org.outlander.search.ToponymSearchResultFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.search.ToponymSearchResultFragment$3 -> org.outlander.search.d:
    org.outlander.search.ToponymSearchResultFragment this$0 -> a
    void onItemClick(int) -> a
org.outlander.search.ToponymSearchResultFragment$GetData -> org.outlander.search.e:
    org.outlander.search.ToponymSearchResultFragment this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    org.outlander.search.ToponymSearchResultFragment access$2(org.outlander.search.ToponymSearchResultFragment$GetData) -> a
org.outlander.search.ToponymSearchResultFragment$GetData$1 -> org.outlander.search.f:
    org.andnav.osm.util.GeoPoint point -> a
    android.view.LayoutInflater inflater -> c
    org.outlander.search.ToponymSearchResultFragment$GetData this$1 -> b
    org.geonames.ToponymSearchResult val$searchResult -> d
    int getCount() -> getCount
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
org.outlander.search.ToponymSearchResultFragment$ViewHolder -> org.outlander.search.g:
    android.widget.TextView textView1 -> a
    android.widget.TextView textView2 -> b
    android.widget.ImageView icon1 -> c
    android.widget.ImageView icon2 -> d
    android.widget.CheckBox checkbox -> e
org.outlander.search.WikipediaSearchResultActivity -> org.outlander.search.WikipediaSearchResultActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.outlander.search.WikipediaSearchResultFragment -> org.outlander.search.h:
    int mPositionChecked -> V
    int mPositionShown -> W
    java.util.List mWeblinks -> X
    org.andnav.osm.util.GeoPoint mRecentGeoPoint -> Y
    boolean isInitialized -> Z
    android.widget.TextView nrOfEntries -> aa
    org.outlander.overlays.SearchResultOverlay mSearchResultOverlay -> ab
    net.londatiga.android.QuickAction mQuickAction -> ac
    android.app.ProgressDialog dlgWait -> ad
    org.outlander.search.WikipediaSearchResultFragment newInstance() -> B
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void restoreSavedState(android.os.Bundle) -> c
    void onActivityCreated(android.os.Bundle) -> d
    void onResume() -> p
    void resume() -> C
    void onSaveInstanceState(android.os.Bundle) -> e
    java.util.List searchForArticles(org.andnav.osm.util.GeoPoint) -> a
    void onListItemClick$42a3bb55(android.view.View,int,long) -> a
    void pageGetsActivated() -> D
    void pageGetsDeactivated() -> E
    java.util.List access$0(org.outlander.search.WikipediaSearchResultFragment,org.andnav.osm.util.GeoPoint) -> a
    void access$1(org.outlander.search.WikipediaSearchResultFragment,java.util.List) -> a
    java.util.List access$2(org.outlander.search.WikipediaSearchResultFragment) -> a
    android.widget.TextView access$3(org.outlander.search.WikipediaSearchResultFragment) -> b
    android.app.ProgressDialog access$4(org.outlander.search.WikipediaSearchResultFragment) -> c
    void access$5(org.outlander.search.WikipediaSearchResultFragment,int) -> a
org.outlander.search.WikipediaSearchResultFragment$1 -> org.outlander.search.i:
    org.outlander.search.WikipediaSearchResultFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.search.WikipediaSearchResultFragment$2 -> org.outlander.search.j:
    org.outlander.search.WikipediaSearchResultFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.search.WikipediaSearchResultFragment$3 -> org.outlander.search.k:
    org.outlander.search.WikipediaSearchResultFragment this$0 -> a
    void onItemClick(int) -> a
org.outlander.search.WikipediaSearchResultFragment$GetData -> org.outlander.search.l:
    org.outlander.search.WikipediaSearchResultFragment this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    org.outlander.search.WikipediaSearchResultFragment access$2(org.outlander.search.WikipediaSearchResultFragment$GetData) -> a
org.outlander.search.WikipediaSearchResultFragment$GetData$1 -> org.outlander.search.m:
    android.view.LayoutInflater inflater -> b
    org.outlander.search.WikipediaSearchResultFragment$GetData this$1 -> a
    java.util.List val$entries -> c
    int getCount() -> getCount
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
org.outlander.search.WikipediaSearchResultFragment$ViewHolder -> org.outlander.search.n:
    android.widget.TextView textView1 -> a
    android.widget.TextView textView2 -> b
    android.widget.ImageView icon1 -> c
    android.widget.ImageView icon2 -> d
    android.widget.CheckBox checkbox -> e
org.outlander.seekbarpreference.SeekBarPreference -> org.outlander.seekbarpreference.SeekBarPreference:
    java.lang.String TAG -> a
    int mMaxValue -> b
    int mMinValue -> c
    int mInterval -> d
    int mCurrentValue -> e
    java.lang.String mUnits -> f
    android.widget.TextView mStatusText -> g
    void setValuesFromXml(android.util.AttributeSet) -> a
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
org.outlander.sms.responder.AutoResponder -> org.outlander.sms.responder.AutoResponder:
    android.app.PendingIntent intentToFire -> a
    android.widget.Spinner respondForSpinner -> b
    android.widget.CheckBox locationCheckbox -> c
    android.widget.EditText responseTextBox -> d
    android.content.BroadcastReceiver stopAutoResponderReceiver -> e
    void onCreate(android.os.Bundle) -> onCreate
    void access$0(org.outlander.sms.responder.AutoResponder) -> a
org.outlander.sms.responder.AutoResponder$1 -> org.outlander.sms.responder.a:
    org.outlander.sms.responder.AutoResponder this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.outlander.sms.responder.AutoResponder$2 -> org.outlander.sms.responder.b:
    org.outlander.sms.responder.AutoResponder this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.sms.responder.AutoResponder$3 -> org.outlander.sms.responder.c:
    org.outlander.sms.responder.AutoResponder this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.sms.responder.EmergencyResponder -> org.outlander.sms.responder.EmergencyResponder:
    java.util.concurrent.locks.ReentrantLock lock -> a
    android.widget.CheckBox locationCheckBox -> b
    java.util.ArrayList requesters -> c
    android.widget.ArrayAdapter aa -> d
    android.content.BroadcastReceiver emergencyResponseRequestReceiver -> e
    android.content.BroadcastReceiver attemptedDeliveryReceiver -> f
    void onCreate(android.os.Bundle) -> onCreate
    void respond(boolean,boolean) -> a
    void respond(java.lang.String,java.lang.String,boolean) -> a
    void requestReceived(java.lang.String) -> a
    void access$0(org.outlander.sms.responder.EmergencyResponder) -> a
org.outlander.sms.responder.EmergencyResponder$1 -> org.outlander.sms.responder.d:
    org.outlander.sms.responder.EmergencyResponder this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.outlander.sms.responder.EmergencyResponder$2 -> org.outlander.sms.responder.e:
    org.outlander.sms.responder.EmergencyResponder this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.outlander.sms.responder.EmergencyResponder$3 -> org.outlander.sms.responder.f:
    org.outlander.sms.responder.EmergencyResponder this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.sms.responder.EmergencyResponder$4 -> org.outlander.sms.responder.g:
    org.outlander.sms.responder.EmergencyResponder this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.sms.responder.EmergencyResponder$5 -> org.outlander.sms.responder.h:
    org.outlander.sms.responder.EmergencyResponder this$0 -> a
    void onClick(android.view.View) -> onClick
org.outlander.trackwriter.DatabaseHelper -> org.outlander.trackwriter.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
org.outlander.trackwriter.TrackWriterService -> org.outlander.trackwriter.TrackWriterService:
    android.database.sqlite.SQLiteDatabase db -> c
    android.app.NotificationManager mNotificationManager -> d
    android.location.LocationManager mLocationManager -> a
    org.outlander.trackwriter.TrackWriterService$SampleLocationListener mLocationListener -> b
    boolean sendToLiveLogger -> e
    java.lang.String trackingServerUrl -> f
    java.util.concurrent.ExecutorService mThreadPool -> g
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    android.location.LocationManager getLocationManager() -> a
    void addPoint(double,double,double,float,long) -> a
org.outlander.trackwriter.TrackWriterService$1 -> org.outlander.trackwriter.b:
    org.outlander.utils.DBManager mPoiManager -> a
    org.outlander.trackwriter.TrackWriterService this$0 -> b
    void run() -> run
org.outlander.trackwriter.TrackWriterService$SampleLocationListener -> org.outlander.trackwriter.c:
    android.location.Location mLastWritedLocation -> b
    android.location.Location mLastLocation -> c
    long mMinTime -> d
    long mMaxTime -> e
    int mMinDistance -> f
    double mDistanceFromLastWriting -> g
    long mTimeFromLastWriting -> h
    org.outlander.trackwriter.TrackWriterService this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void Init(int,int) -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
org.outlander.utils.CoreInfoHandler -> org.outlander.utils.a:
    android.hardware.SensorEventListener orientationListener -> a
    android.hardware.SensorEventListener accellerationListener -> b
    java.util.List subOrientationListeners -> c
    java.util.List subAccellerationListeners -> d
    android.location.LocationListener locationListener -> e
    java.util.List subLocationListeners -> f
    java.util.List panoramioItems -> g
    org.andnav.osm.util.GeoPoint currentTarget -> h
    org.andnav.osm.util.GeoPoint currentMapCenter -> i
    org.andnav.osm.util.GeoPoint currentSearchPoint -> j
    org.andnav.osm.util.GeoPoint currentPoiPoint -> k
    android.location.Location currentLocation -> l
    org.outlander.activities.MainActivity mainActivity -> m
    org.outlander.overlays.SearchResultOverlay mSearchResultOverlay -> y
    org.outlander.overlays.ExternalPointOverlay mExternalPointOverlay -> z
    org.outlander.overlays.TrackOverlay trackOverlay -> A
    org.outlander.overlays.RouteOverlay routeOverlay -> B
    android.support.v4.view.ViewPager viewPager -> n
    int[] pageSet -> o
    org.outlander.fragments.PageChangeNotifyer[] pages -> p
    org.outlander.fragments.MapFragment mapFragment -> q
    java.lang.String topoSearchString -> r
    org.geonames.Toponym currentToponym -> s
    int currentRouteId -> t
    int currentTrackId -> u
    int currentRouteToFollowId -> v
    int coordFormatId -> C
    int speedFormatId -> D
    int unitFormatId -> E
    int mapCmd -> w
    int oldPage -> x
    boolean mAutoFollow -> F
    boolean mMeasureDistance -> G
    org.outlander.utils.DBManager mDBManager -> H
    org.outlander.utils.CoreInfoHandler instance -> I
    org.outlander.utils.CoreInfoHandler getInstance() -> a
    org.outlander.utils.DBManager getDBManager(android.content.Context) -> a
    void setDBManager$517c03d1() -> b
    android.hardware.SensorEventListener getOrientationListener() -> c
    java.util.List getSubOrientationListeners() -> E
    void registerOrientationListener(android.hardware.SensorEventListener) -> a
    void deregisterOrientationListener(android.hardware.SensorEventListener) -> b
    android.hardware.SensorEventListener getAccellerationListener() -> d
    java.util.List getSubAccellerationListeners() -> F
    void registerAccellerationListener(android.hardware.SensorEventListener) -> c
    void deregisterAccellerationListener(android.hardware.SensorEventListener) -> d
    android.location.LocationListener getLocationListener() -> e
    java.util.List getSubLocationListeners() -> G
    void registerLocationListener(android.location.LocationListener) -> a
    void deregisterLocationListener(android.location.LocationListener) -> b
    org.andnav.osm.util.GeoPoint getCurrentTarget() -> f
    void setCurrentTarget(org.andnav.osm.util.GeoPoint) -> a
    org.andnav.osm.util.GeoPoint getCurrentMapCenter() -> g
    void setCurrentMapCenter(org.andnav.osm.util.GeoPoint) -> b
    org.andnav.osm.util.GeoPoint getCurrentSearchPoint() -> h
    void setCurrentSearchPoint(org.andnav.osm.util.GeoPoint) -> c
    org.outlander.activities.MainActivity getMainActivity() -> i
    void setMainActivity(org.outlander.activities.MainActivity) -> a
    void setViewPager(android.support.v4.view.ViewPager) -> a
    int[] getPageSet() -> j
    void setPageSet(int[]) -> a
    org.outlander.fragments.PageChangeNotifyer getPageChangeNotifyer(int) -> a
    void setPageChangeNotifyer(int,org.outlander.fragments.PageChangeNotifyer) -> a
    void gotoPage(int) -> b
    java.lang.String getTopoSearchString() -> k
    void setTopoSearchString(java.lang.String) -> a
    int getMapCmd() -> l
    void setMapCmd(int) -> c
    org.geonames.Toponym getCurrentToponym() -> m
    void setCurrentToponym(org.geonames.Toponym) -> a
    int getCurrentRouteId() -> n
    void setCurrentRouteId(int) -> d
    int getCurrentTrackId() -> o
    void setCurrentTrackId(int) -> e
    boolean isAutoFollow() -> p
    void setAutoFollow(boolean) -> a
    android.location.Location getCurrentLocation() -> q
    org.andnav.osm.util.GeoPoint getCurrentLocationAsGeoPoint() -> r
    void setCurrentLocation(android.location.Location) -> a
    org.andnav.osm.util.GeoPoint getCurrentPoiPoint() -> s
    void setCurrentPoiPoint(org.andnav.osm.util.GeoPoint) -> d
    int getCoordFormatId() -> t
    int incCoordFormatId() -> u
    int getUnitFormatId() -> v
    int incSpeedFormatId() -> w
    org.outlander.overlays.SearchResultOverlay getSearchResultOverlay() -> x
    void setSearchResultOverlay(org.outlander.overlays.SearchResultOverlay) -> a
    boolean isMeasureDistance() -> y
    void setMeasureDistance(boolean) -> b
    org.outlander.overlays.ExternalPointOverlay getExternalPointOverlay() -> z
    void setExternalPointOverlay(org.outlander.overlays.ExternalPointOverlay) -> a
    org.outlander.fragments.MapFragment getMapFragment() -> A
    void setMapFragment(org.outlander.fragments.MapFragment) -> a
    java.util.List getPanoramioItems() -> B
    org.outlander.overlays.RouteOverlay getRouteOverlay() -> C
    void setRouteOverlay(org.outlander.overlays.RouteOverlay) -> a
    org.outlander.overlays.TrackOverlay getTrackOverlay() -> D
    void setTrackOverlay(org.outlander.overlays.TrackOverlay) -> a
    java.util.List access$0(org.outlander.utils.CoreInfoHandler) -> a
    java.util.List access$1(org.outlander.utils.CoreInfoHandler) -> b
    java.util.List access$2(org.outlander.utils.CoreInfoHandler) -> c
org.outlander.utils.CoreInfoHandler$1 -> org.outlander.utils.b:
    org.outlander.utils.CoreInfoHandler this$0 -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
org.outlander.utils.CoreInfoHandler$2 -> org.outlander.utils.c:
    org.outlander.utils.CoreInfoHandler this$0 -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
org.outlander.utils.CoreInfoHandler$3 -> org.outlander.utils.d:
    org.outlander.utils.CoreInfoHandler this$0 -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
org.outlander.utils.CrashReportHandler -> org.outlander.utils.e:
    android.app.Activity m_context -> a
    void attach(android.app.Activity) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
org.outlander.utils.DBManager -> org.outlander.utils.f:
    android.content.Context mCtx -> a
    org.outlander.utils.GeoDatabase mGeoDatabase -> b
    org.outlander.utils.GeoDatabase getGeoDatabase() -> a
    void freeDatabases() -> b
    void updatePoi(org.outlander.dto.PoiPoint) -> a
    java.util.List getPoiListNotHidden(int,org.andnav.osm.util.GeoPoint,double,double) -> a
    org.outlander.dto.PoiPoint getPoiPoint(int) -> a
    org.outlander.dto.PoiPoint getPoiPointByName(java.lang.String) -> a
    void deletePoi(int) -> b
    org.outlander.dto.PoiCategory getPoiCategory(int) -> c
    void updatePoiCategory(org.outlander.dto.PoiCategory) -> a
    void deleteAllPois() -> c
    void beginTransaction() -> d
    void rollbackTransaction() -> e
    void commitTransaction() -> f
    void updateTrack(org.outlander.dto.Track,boolean) -> a
    org.outlander.dto.Track getTrackChecked() -> g
    void addTrackPointsToTrack(org.outlander.dto.Track) -> a
    org.outlander.dto.Track getTrack(int) -> d
    org.outlander.dto.Track getTrackByName(java.lang.String) -> b
    void setTrackChecked(int,boolean) -> a
    void deleteTrack(int) -> e
    void updateRoute(org.outlander.dto.Route,boolean) -> a
    org.outlander.dto.Route getRoute(int) -> f
    org.outlander.dto.Route getRouteByName(java.lang.String) -> c
    void addPointsToRoute(org.outlander.dto.Route) -> a
    java.util.List getRoutesChecked() -> h
    void setRouteChecked(int,boolean) -> b
    void setPoiChecked(int,boolean) -> c
    void setRoutesChecked(boolean) -> a
    void deleteRoute(int) -> g
    void deleteAllRoutes() -> i
    org.outlander.dto.RouteCategory getRouteCategory(int) -> h
    void updateRouteCategory(org.outlander.dto.RouteCategory) -> a
    java.util.List getProximityTargetList() -> j
org.outlander.utils.GeoDatabase -> org.outlander.utils.g:
    android.content.Context mCtx -> a
    android.database.sqlite.SQLiteDatabase mDatabase -> c
    java.text.SimpleDateFormat DATE_FORMAT_ISO8601 -> b
    boolean isDatabaseReady() -> p
    void freeDatabases() -> a
    android.database.sqlite.SQLiteDatabase getDatabase() -> q
    void addPoi(java.lang.String,java.lang.String,double,double,double,int,int,int,int) -> a
    void updatePoi(int,java.lang.String,java.lang.String,double,double,double,int,int,int,int) -> a
    void finalize() -> finalize
    android.database.Cursor getPoiListCursor() -> b
    android.database.Cursor getPoiListNotHiddenCursor(int,double,double,double,double) -> a
    android.database.Cursor getPoiCategoryListCursor() -> c
    android.database.Cursor getPoi(int) -> a
    android.database.Cursor getPoiByName(java.lang.String) -> a
    int getNrofPoiForCategory(int) -> b
    void deletePoi(int) -> c
    android.database.Cursor getPoiCategory(int) -> d
    void addPoiCategory(java.lang.String,int,int,java.lang.String) -> a
    void updatePoiCategory(int,java.lang.String,int,int,int,java.lang.String) -> a
    void deleteAllPois() -> d
    void beginTransaction() -> e
    void rollbackTransaction() -> f
    void commitTransaction() -> g
    android.database.Cursor getTrackListCursor() -> h
    long addTrack(java.lang.String,java.lang.String,int,double,double,long) -> a
    void updateTrack(int,java.lang.String,java.lang.String,int,double,double,long) -> a
    void addTrackPoint(long,double,double,double,double,java.util.Date) -> a
    android.database.Cursor getTrackChecked() -> i
    android.database.Cursor getTrack(long) -> a
    android.database.Cursor getTrackByName(java.lang.String) -> b
    android.database.Cursor getTrackPoints(long) -> b
    void setTrackChecked(int,boolean) -> a
    void deleteTrack(int) -> e
    void deleteAllTrackPoints(int) -> f
    int saveTrackFromWriter(android.database.sqlite.SQLiteDatabase) -> a
    android.database.Cursor getTrackCategoryListCursor() -> j
    int getNrofTracksForCategory(int) -> g
    android.database.Cursor getTrackCategory(int) -> h
    android.database.Cursor getRouteCategory(int) -> i
    void addRouteCategory(java.lang.String,java.lang.String,int,int,int) -> a
    void updateRouteCategory(int,java.lang.String,java.lang.String,int,int,int) -> a
    android.database.Cursor getRoute(java.lang.Integer) -> a
    android.database.Cursor getRouteByName(java.lang.String) -> c
    long addRoute(java.lang.String,java.lang.String,int,int) -> a
    void updateRoute(int,java.lang.String,java.lang.String,int,int) -> a
    android.database.Cursor getRoutePoints(long) -> c
    void addRoutePoi$1cc59beb(java.lang.String,java.lang.String,double,double,double,int) -> a
    void deleteAllRoutePoi(int) -> j
    void deleteRoute(int) -> k
    void deleteAllRoutes() -> k
    void setRouteChecked(int,boolean) -> b
    void setRoutesChecked(boolean) -> a
    android.database.Cursor getRouteListCursor() -> l
    android.database.Cursor getRoutesChecked() -> m
    void setPoiChecked(int,boolean) -> c
    android.database.Cursor getRouteCategoryListCursor() -> n
    int getNrofRoutesForCategory(int) -> l
    android.database.Cursor getProximityTargetListCursor() -> o
org.outlander.utils.GeoDatabase$GeoDatabaseHelper -> org.outlander.utils.h:
    org.outlander.utils.GeoDatabase this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
org.outlander.utils.GeoMathUtil -> org.outlander.utils.i:
    double MIN_LAT -> d
    double MAX_LAT -> e
    double MIN_LON -> f
    double MAX_LON -> g
    float superelevation -> h
    org.outlander.utils.GeoMathUtil instance -> i
    double[] speedConversionFactors -> a
    java.text.DecimalFormat threePlaces -> j
    java.text.DecimalFormat fourPlaces -> k
    java.text.DecimalFormat twoDecimalFormat -> b
    java.lang.String[] Bearings -> l
    boolean $assertionsDisabled -> c
    int distanceTo(double,double,double,double) -> a
    java.lang.String formatGeoPoint(org.andnav.osm.util.GeoPoint,int) -> a
    java.lang.String formatLocation(android.location.Location,int) -> a
    java.lang.CharSequence formatGeoCoord(double) -> a
    java.lang.String latLon2MGRUTM(double,double) -> b
    java.lang.String convert(double,int,boolean) -> a
    double azimuthTo(org.andnav.osm.util.GeoPoint,org.andnav.osm.util.GeoPoint) -> a
    double azimuthTo(double,double,double,double) -> b
    java.lang.String getHumanDistance(double,boolean) -> a
    double[] toNAD27(double,double) -> c
    java.lang.String toUTM(double,double) -> d
    java.lang.String formatCoordinate(double,double,int) -> a
    double gudermannInverse(double) -> b
    int mod(int,int) -> a
    org.outlander.utils.GeoMathUtil getInstance() -> a
    double avgSpeed(java.util.Collection) -> a
    double distance(java.util.Collection) -> b
    int convertSpeed(double,int) -> a
    double access$0$346ca0f(double,double) -> a
org.outlander.utils.GeoMathUtil$Digraphs -> org.outlander.utils.j:
    java.util.Map digraph1 -> b
    java.util.Map digraph2 -> c
    java.lang.String[] digraph1Array -> d
    java.lang.String[] digraph2Array -> e
    org.outlander.utils.GeoMathUtil this$0 -> a
    java.lang.String getDigraph1(int,double) -> a
    java.lang.String getDigraph2(int,double) -> b
org.outlander.utils.GeoMathUtil$LatLon2MGRUTM -> org.outlander.utils.k:
    org.outlander.utils.GeoMathUtil this$0 -> a
org.outlander.utils.GeoMathUtil$LatLon2UTM -> org.outlander.utils.l:
    double equatorialRadius -> b
    double polarRadius -> c
    double flattening -> d
    double inverseFlattening -> e
    double rm -> f
    double k0 -> g
    double e -> h
    double e1sq -> i
    double n -> j
    double rho -> k
    double nu -> l
    double S -> m
    double A0 -> n
    double B0 -> o
    double C0 -> p
    double D0 -> q
    double E0 -> r
    double p -> s
    double sin1 -> t
    double K1 -> u
    double K2 -> v
    double K3 -> w
    double K4 -> x
    double K5 -> y
    double A6 -> z
    org.outlander.utils.GeoMathUtil this$0 -> A
org.outlander.utils.GeoMathUtil$LatZones -> org.outlander.utils.m:
    char[] letters -> b
    int[] degrees -> c
    char[] negLetters -> d
    int[] negDegrees -> e
    char[] posLetters -> f
    int[] posDegrees -> g
    int arrayLength -> h
    org.outlander.utils.GeoMathUtil this$0 -> a
    java.lang.String getLatZone(double) -> a
org.outlander.utils.IndexPreference -> org.outlander.utils.IndexPreference:
    android.widget.Button btnClear -> a
    android.content.Context mCtx -> b
    java.io.File mDbFile -> c
    java.util.concurrent.ExecutorService mThreadExecutor -> d
    android.app.ProgressDialog mProgressDialog -> e
    org.outlander.utils.IndexPreference$SimpleInvalidationHandler mHandler -> f
    void onBindView(android.view.View) -> onBindView
    android.content.Context access$0(org.outlander.utils.IndexPreference) -> a
    java.io.File access$1(org.outlander.utils.IndexPreference) -> b
    void access$2(org.outlander.utils.IndexPreference,android.app.ProgressDialog) -> a
    java.util.concurrent.ExecutorService access$3(org.outlander.utils.IndexPreference) -> c
    org.outlander.utils.IndexPreference$SimpleInvalidationHandler access$4(org.outlander.utils.IndexPreference) -> d
    android.app.ProgressDialog access$5(org.outlander.utils.IndexPreference) -> e
org.outlander.utils.IndexPreference$1 -> org.outlander.utils.n:
    org.outlander.utils.IndexPreference this$0 -> a
    void onClick(android.view.View) -> onClick
    org.outlander.utils.IndexPreference access$0(org.outlander.utils.IndexPreference$1) -> a
org.outlander.utils.IndexPreference$1$1 -> org.outlander.utils.o:
    org.outlander.utils.IndexPreference$1 this$1 -> a
    void run() -> run
org.outlander.utils.IndexPreference$SimpleInvalidationHandler -> org.outlander.utils.p:
    org.outlander.utils.IndexPreference this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.outlander.utils.InternalCachePreference -> org.outlander.utils.InternalCachePreference:
    android.widget.Button btnClear -> a
    android.content.Context mCtx -> b
    java.io.File mDbFile -> c
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider mFSTileProvider -> d
    java.util.concurrent.ExecutorService mThreadExecutor -> e
    android.app.ProgressDialog mProgressDialog -> f
    org.outlander.utils.InternalCachePreference$SimpleInvalidationHandler mHandler -> g
    void onBindView(android.view.View) -> onBindView
    android.content.Context access$0(org.outlander.utils.InternalCachePreference) -> a
    java.io.File access$1(org.outlander.utils.InternalCachePreference) -> b
    org.andnav.osm.views.util.OpenStreetMapTileFilesystemProvider access$2(org.outlander.utils.InternalCachePreference) -> c
    void access$3(org.outlander.utils.InternalCachePreference,android.app.ProgressDialog) -> a
    java.util.concurrent.ExecutorService access$4(org.outlander.utils.InternalCachePreference) -> d
    org.outlander.utils.InternalCachePreference$SimpleInvalidationHandler access$5(org.outlander.utils.InternalCachePreference) -> e
    android.app.ProgressDialog access$6(org.outlander.utils.InternalCachePreference) -> f
org.outlander.utils.InternalCachePreference$1 -> org.outlander.utils.q:
    org.outlander.utils.InternalCachePreference this$0 -> a
    void onClick(android.view.View) -> onClick
    org.outlander.utils.InternalCachePreference access$0(org.outlander.utils.InternalCachePreference$1) -> a
org.outlander.utils.InternalCachePreference$1$1 -> org.outlander.utils.r:
    org.outlander.utils.InternalCachePreference$1 this$1 -> a
    void run() -> run
org.outlander.utils.InternalCachePreference$SimpleInvalidationHandler -> org.outlander.utils.s:
    org.outlander.utils.InternalCachePreference this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.outlander.utils.NinePatch -> org.outlander.utils.t:
    android.graphics.Bitmap mBitmap -> a
    byte[] mChunk -> b
    int mAlpha -> c
    android.graphics.Rect src -> d
    android.graphics.Rect dst -> e
    android.graphics.Paint p -> f
    android.graphics.Rect inner -> g
    int mWidth -> h
    int mHeight -> i
    void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint) -> a
    void extractRectFromChunk$516cd8ab(android.graphics.Rect) -> a
org.outlander.utils.NinePatchDrawable -> org.outlander.utils.u:
    org.outlander.utils.NinePatch mNinePatch -> a
    android.graphics.Paint mPaint -> b
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
org.outlander.utils.OSGB36 -> org.outlander.utils.v:
    double Lat_Long_H_to_X$3fc189a9(double,double,double,double) -> a
    double Lat_Long_H_to_Y$3fc189a9(double,double,double,double) -> b
    double Lat_H_to_Z$441f079d(double,double,double) -> a
    double Helmert_X(double,double,double,double,double,double,double) -> a
    double Helmert_Y(double,double,double,double,double,double,double) -> b
    double Helmert_Z(double,double,double,double,double,double,double) -> c
    double XYZ_to_Lat(double,double,double,double,double) -> a
    double XYZ_to_Long(double,double) -> c
    double Marc$441f079d(double) -> a
    double[] LatLon2OSGB(double,double) -> a
    double InitialLat$4790b6e3(double) -> b
    double[] OSGB2LatLon(double,double) -> b
org.outlander.utils.ProximityHandler -> org.outlander.utils.ProximityHandler:
    android.location.LocationManager locationManager -> a
    android.content.Context context -> b
    java.util.HashMap pendindingIntents -> c
    void unregisterReceiver() -> a
    void registerProximityTargetsFromDB() -> b
    void unregisterAllProximityTargets() -> c
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void access$0(org.outlander.utils.ProximityHandler) -> a
org.outlander.utils.ProximityHandler$ProximitaTargetTask -> org.outlander.utils.w:
    org.outlander.utils.ProximityHandler this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.outlander.utils.RSQLiteOpenHelper -> org.outlander.utils.x:
    java.lang.String TAG -> a
    java.lang.String mName -> b
    android.database.sqlite.SQLiteDatabase$CursorFactory mFactory -> c
    int mNewVersion -> d
    android.database.sqlite.SQLiteDatabase mDatabase -> e
    boolean mIsInitializing -> f
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> a
    android.database.sqlite.SQLiteDatabase getReadableDatabase() -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
org.outlander.utils.SQLiteMapDatabase -> org.outlander.utils.y:
    android.database.sqlite.SQLiteDatabase mDatabase -> a
    void setFile(java.lang.String) -> a
    void updateMinMaxZoom() -> a
    void putTile(int,int,int,byte[]) -> a
    byte[] getTile(int,int,int) -> a
    int getMaxZoom() -> b
    int getMinZoom() -> c
    void finalize() -> finalize
    void freeDatabases() -> d
org.outlander.utils.SQLiteMapDatabase$CacheDatabaseHelper -> org.outlander.utils.z:
    org.outlander.utils.SQLiteMapDatabase this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
org.outlander.utils.Ut -> org.outlander.utils.aa:
    java.text.SimpleDateFormat BASE_XML_DATE_FORMAT -> a
    java.util.regex.Pattern XML_DATE_EXTRAS_PATTERN -> b
    android.app.ProgressDialog ShowWaitDialog$f25e232(android.content.Context) -> a
    java.lang.String getAppVersion(android.content.Context) -> b
    void dd(java.lang.String) -> a
    void e$552c4e01() -> a
    void i$552c4e01() -> b
    void w$552c4e01() -> c
    void d$552c4e01() -> d
    java.lang.String FileName2ID(java.lang.String) -> b
    java.io.File getDir(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    java.io.File getTschekkoMapsMainDir(android.content.Context,java.lang.String) -> a
    java.io.File getTschekkoMapsMapsDir(android.content.Context) -> c
    java.io.File getTschekkoMapsImportDir(android.content.Context) -> d
    java.io.File getTschekkoMapsExportDir(android.content.Context) -> e
    java.lang.String readString(java.io.InputStream,int) -> a
    int readInt(java.io.InputStream) -> a
    android.content.Intent shareLocation(double,double,java.lang.String,android.content.Context) -> a
    android.content.Intent sendErrorReportMail(java.lang.String,java.lang.String) -> a
    android.content.Intent showLocationExternal(double,double) -> a
    boolean isInternetConnectionAvailable(android.content.Context) -> f
    java.lang.String buildMapsUrl$2e205670(android.content.Context,float,float) -> a
    android.location.Address getRawAddressFromYahoo(android.content.Context,double,double) -> a
    java.lang.String getAddress(android.content.Context,double,double) -> b
    boolean isMultiPane(android.content.Context) -> g
    void copyTextToClipboard(android.content.Context,java.lang.String) -> b
org.outlander.utils.img.RoundedCornerImageView -> org.outlander.utils.img.RoundedCornerImageView:
    void onDraw(android.graphics.Canvas) -> onDraw
org.outlander.utils.img.ScaleBarDrawable -> org.outlander.utils.img.a:
    android.graphics.Paint mPaint -> a
    android.graphics.Paint mPaint2 -> b
    android.graphics.Paint mPaint3 -> c
    android.graphics.Paint mPaint4 -> d
    org.andnav.osm.views.OpenStreetMapView mOsmv -> e
    int mZoomLevel -> f
    double mTouchScale -> g
    java.lang.String mDist -> h
    int mWidth -> i
    int mUnits -> j
    int mWidth2 -> k
    int[][] SCALE -> l
    int EQUATOR_M -> m
    int EQUATOR_ML -> n
    int EQUATOR_FT -> o
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
org.outlander.views.ArtificialHorizontView -> org.outlander.views.ArtificialHorizontView:
    int[] borderGradientColors -> a
    float[] borderGradientPositions -> b
    int[] glassGradientColors -> c
    float[] glassGradientPositions -> d
    int skyHorizonColorFrom -> e
    int skyHorizonColorTo -> f
    int groundHorizonColorFrom -> g
    int groundHorizonColorTo -> h
    android.graphics.Paint markerPaint -> k
    android.graphics.Paint textPaint -> l
    android.graphics.Paint circlePaint -> m
    int textHeight -> n
    java.lang.String[] compassDirection -> o
    float bearing -> p
    float pitch -> i
    float roll -> j
    void setBearing(float) -> a
    void setPitch(float) -> b
    void setRoll(float) -> c
    void initCompassView() -> a
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
org.outlander.views.BaseCompass -> org.outlander.views.a:
    boolean drawCompass -> a
    double mAzimuth -> b
    double bearing -> c
    android.content.Context mCtx -> d
    void setBearing(double) -> a
    double getBearing() -> a
    void enableCompass() -> b
    void disableCompass() -> c
org.outlander.views.LargeCompass -> org.outlander.views.b:
    boolean wantStop -> e
    boolean lock -> f
    boolean drawing -> g
    android.graphics.Bitmap compassUnderlay -> h
    android.graphics.Bitmap compassRose -> i
    android.graphics.Bitmap compassArrow -> j
    android.graphics.Bitmap compassOverlay -> k
    java.lang.Double heading -> l
    java.lang.Double targetHeading -> m
    java.lang.Double northHeading -> n
    android.graphics.PaintFlagsDrawFilter setfil -> o
    android.graphics.PaintFlagsDrawFilter remfil -> p
    int compassUnderlayWidth -> q
    int compassUnderlayHeight -> r
    int compassRoseWidth -> s
    int compassRoseHeight -> t
    int compassArrowWidth -> u
    int compassArrowHeight -> v
    int compassOverlayWidth -> w
    int compassOverlayHeight -> x
    boolean bigOrSmall -> y
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateNorth(java.lang.Double,java.lang.Double) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
org.outlander.views.SmallCompass -> org.outlander.views.c:
    android.graphics.Picture mCompassFrame -> e
    android.graphics.Picture mCompassRose -> f
    float mCompassRadius -> j
    float COMPASS_ROSE_CENTER_X -> k
    float COMPASS_ROSE_CENTER_Y -> l
    android.graphics.Paint mPaint -> g
    android.graphics.Paint mCirclePaint -> h
    int mScale -> i
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawTriangle$7557fba5(android.graphics.Canvas,float,float,android.graphics.Paint) -> a
org.outlander.views.SpeedometerView -> org.outlander.views.SpeedometerView:
    java.text.DecimalFormat a -> a
    android.graphics.Paint b -> b
    android.graphics.Paint c -> c
    android.graphics.Paint d -> d
    android.graphics.Paint e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    float k -> k
    float l -> l
    boolean m -> m
    java.lang.String n -> n
    boolean o -> o
    android.graphics.PointF p -> p
    void a(int,android.graphics.PointF) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
